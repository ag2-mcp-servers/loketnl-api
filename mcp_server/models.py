# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T04:38:55+00:00

from __future__ import annotations

from datetime import date as date_aliased
from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional
from uuid import UUID

from pydantic import (
    BaseModel,
    ConfigDict,
    EmailStr,
    Field,
    RootModel,
    confloat,
    conint,
    constr,
)


class Version(BaseModel):
    obsoleteDate: Optional[date_aliased] = Field(
        None,
        description='The date (can be null) on which the `resourceVersion` is no longer supported/available',
    )
    resourceVersion: Optional[date_aliased] = Field(
        None,
        description='The resource version of the object in the response',
        examples=['2018-12-31'],
    )


class Message(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem(BaseModel):
    belongsToEmployerId: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID) for the employer to which the Achmea isurance contract belongs. This id can be used for acquiring the list of employees for the employer.\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    contractNumber: Optional[constr(max_length=20)] = Field(
        None,
        description='The contract number (Dutch: polisnummer) for the Achmea insurance contract.',
        examples=['0015697843'],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date at which the Achmea isurance contract ends.',
        examples=['2025-05-21'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date at which the Achmea isurance contract starts.',
        examples=['2018-05-21'],
    )


class AchmeainsurancecontractsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message]] = None
    field_embedded: Optional[List[FieldEmbeddedItem]] = Field(None, alias='_embedded')


class Message1(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class AchmeainsurancecontractsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class AchmeainsurancecontractsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class AchmeainsurancecontractsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message2(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem1(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day on which the percentages apply to the wages of all employees included in the Achmea insurance contract. This field is empty when the percentages currently apply.',
    )
    holidayAllowancePercentage: Optional[float] = Field(
        None,
        description='The percentage of the gross wage used to determine the holiday allowance.',
        examples=[8],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The first day on which the percentages apply to the wages of all employees included in the Achmea insurance contract.',
        examples=['2018-01-21'],
    )
    yearEndPercentage: Optional[float] = Field(
        None,
        description='The percentage of the gross wage used to determine the year-end bonus.',
        examples=[15],
    )


class AchmeainsurancecontractsAchmeaInsuranceContractIdInsuredwagecalculationpercentagesGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message2]] = None
    field_embedded: Optional[List[FieldEmbeddedItem1]] = Field(None, alias='_embedded')


class Message3(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class AchmeainsurancecontractsAchmeaInsuranceContractIdInsuredwagecalculationpercentagesGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message3]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class AchmeainsurancecontractsAchmeaInsuranceContractIdInsuredwagecalculationpercentagesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class AchmeainsurancecontractsAchmeaInsuranceContractIdInsuredwagecalculationpercentagesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message4(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content(BaseModel):
    aowDate: Optional[date_aliased] = Field(
        None,
        description='The date when, according to Dutch law, the person has the right to a state pension. The value is generated by the system based on the date of birth.',
        examples=['2062-08-21'],
    )


class AowDateGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message4]] = None
    content: Optional[Content] = None


class Message5(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class AowDateGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message5]] = None
    content: Optional[Dict[str, Any]] = None


class AowDateGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class AowDateGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message6(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AllowedRole(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, description='description of the role', examples=['Provider']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class RequiredEmployerModule(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='description of the authorization (recht in loket)',
        examples=['Personeelsregistratie'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class RequiredUserAuthorization(BaseModel):
    availableForEmployerUser: Optional[bool] = Field(
        None,
        description='Indicates if the authorization is available for an employer user',
        examples=[True],
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='description of the authorization (recht in loket)',
        examples=['Beheren dienstverbanden'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class FieldEmbeddedItem2(BaseModel):
    activity: Optional[constr(max_length=50)] = Field(
        None, description='name of the activity', examples=['GetEmployersByUserId']
    )
    allowedRoles: Optional[List[AllowedRole]] = Field(
        None,
        description='Authorization is done based on a OR principle. The user has to have one of the listed roles the have access to the activity.',
    )
    displayName: Optional[constr(max_length=50)] = Field(
        None, description='description of the activity', examples=['Lijst werkgevers']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    requiredEmployerModules: Optional[List[RequiredEmployerModule]] = Field(
        None,
        description='Authorization is done based on a OR principle. The employer has to have one of the listed modules the have access to the activity.',
    )
    requiredUserAuthorizations: Optional[List[RequiredUserAuthorization]] = Field(
        None,
        description='Authorization is done based on a OR principle. The user has to have one of the listed authorizations the have access to the activity.',
    )


class ApplicationsApplicationIdAuthorizationsGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message6]] = None
    field_embedded: Optional[List[FieldEmbeddedItem2]] = Field(None, alias='_embedded')


class Message7(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ApplicationsApplicationIdAuthorizationsGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message7]] = None
    content: Optional[Dict[str, Any]] = None


class ApplicationsApplicationIdAuthorizationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ApplicationsApplicationIdAuthorizationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ApplicationsApplicationIdLogoGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ApplicationsApplicationIdLogoGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message8(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Address(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Country1(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class DeviatingPostalAddress(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country1] = None
    houseNumber: Optional[int] = Field(
        None,
        description='House number of the address. Filled when poBox is empty.',
        examples=[12],
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    poBox: Optional[int] = Field(None, description='Post office box', examples=[5000])
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class LegalForm(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the legal form. Possible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the legal form. Posible values are the legel forms supported by Dutch law',
        examples=['B.V.'],
    )


class Sbi(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the SBI code. Possible values can be aquired via the metadata endpoint',
        examples=[12],
    )
    sbiCode: Optional[constr(max_length=32)] = Field(
        None,
        description='Posible values are the values from the Dutch SBI 2008',
        examples=['0116'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='Description of the SBI code',
        examples=['Agriculture, Forestry and Fishing'],
    )


class Content1(BaseModel):
    address: Optional[Address] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress] = None
    legalForm: Optional[LegalForm] = None
    name: Optional[constr(max_length=255)] = Field(
        None, description='The company name', examples=['Bedrijf B.V.']
    )
    sbi: Optional[Sbi] = Field(
        None,
        description="The 'Standard Industrial Classifications (Dutch SBI 2008, NACE and ISIC)' as defined bij the Dutch chamber of commerce",
    )
    website: Optional[constr(max_length=255)] = Field(
        None, description='The website of the employer', examples=['www.voorbeeldbv.nl']
    )


class ChamberofcommerceChamberOfCommerceNumberCompanyinformationGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message8]] = None
    content: Optional[Content1] = None


class Message9(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ChamberofcommerceChamberOfCommerceNumberCompanyinformationGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message9]] = None
    content: Optional[Dict[str, Any]] = None


class ChamberofcommerceChamberOfCommerceNumberCompanyinformationGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ChamberofcommerceChamberOfCommerceNumberCompanyinformationGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message10(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem3(BaseModel):
    functionName: Optional[str] = Field(
        None, description='A function name in Dutch\n', examples=['architect']
    )


class DatanewbusinessFunctionsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message10]] = None
    field_embedded: Optional[List[FieldEmbeddedItem3]] = Field(None, alias='_embedded')


class Message11(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class DatanewbusinessFunctionsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message11]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class DatanewbusinessFunctionsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class DatanewbusinessFunctionsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message12(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content2(BaseModel):
    dataNewBusinessToken: Optional[str] = Field(
        None,
        description='The access token for calling the Data New Business (DNB) API.',
        examples=[
            'tKcYuqJtbo7Q0wBzRzDFN6mnDghfJfvMOLMj0mOj9W1EW0wk9k8bWmRLug-AprELWHqHIc9f7Q6rNQQ6U6MNDGvVkxcnZH62FCebdqPhquBUEI1q24eCiqsT3Vn8eC27sX5phOhgHK9_bP2lLnDbqZoo5Li7bKmpS75S0_U7SO_BLyl6p-5jJHV2ZS0XFzjEkwIYkW3rPq41nDmbpuh1kNOyxa1fRbfmGhVJnGmWsQBxPwwypC30wFPUcNHHIBXlrryAXESR5Kal8gOolC5n09FlBFKW2EnCDyC-Wl2I0j95MZTUXwr-5JqiOQNWsILLE0GVW5EPmfvXo7hIRhpi1nl-XyWgHEl6wah9mW0G2sVXnbD0oBfMbFSBXTTcZpsVo3yTJB'
        ],
    )
    expiresIn: Optional[int] = Field(
        None,
        description='The number of seconds until the token expires.',
        examples=[3600],
    )


class DatanewbusinessTokenGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message12]] = None
    content: Optional[Content2] = None


class Message13(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class DatanewbusinessTokenGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message13]] = None
    content: Optional[Dict[str, Any]] = None


class DatanewbusinessTokenGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class DatanewbusinessTokenGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message14(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Coordinates(BaseModel):
    latitude: Optional[float] = Field(
        None, description='Lattitude of the location', examples=[51.62132245]
    )
    longitude: Optional[float] = Field(
        None, description='Longitude of the location', examples=[5.55417593]
    )


class Province(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the province. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The name of the province. Only the Dutch provices are supported and not translated',
        examples=['Noord-Holland'],
    )


class Content3(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    coordinates: Optional[Coordinates] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234AA']
    )
    province: Optional[Province] = Field(None, description='A Dutch province')
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class LocationservicesAddressGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message14]] = None
    content: Optional[Content3] = None


class Message15(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class LocationservicesAddressGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message15]] = None
    content: Optional[Dict[str, Any]] = None


class LocationservicesAddressGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class LocationservicesAddressGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message16(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem4(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None,
        description='Name of the provider',
        examples=['Van Spaendonck Online B.V.'],
    )


class ProvidersGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message16]] = None
    field_embedded: Optional[List[FieldEmbeddedItem4]] = Field(None, alias='_embedded')


class Message17(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message17]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersApplicationsetsApplicationSetIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message17]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersApplicationsetsApplicationSetIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message17]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersApplicationsetsApplicationSetIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersApplicationsetsApplicationSetIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ApplicationSetType(Enum):
    Products = 'Products'
    ExportDataTemplate = 'ExportDataTemplate'
    Rights = 'Rights'


class ProvidersApplicationsetsApplicationSetIdPutRequest(BaseModel):
    applicationSetType: Optional[ApplicationSetType] = Field(
        None, description='The type of the set \n'
    )
    data: Optional[str] = Field(
        None,
        description='Contains an array of objects in json structure.\n',
        examples=['json object'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the exportset\n',
        examples=['Exportset Dienstverband'],
    )


class Message20(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content4(BaseModel):
    applicationSetType: Optional[ApplicationSetType] = Field(
        None, description='The type of the set \n'
    )
    data: Optional[str] = Field(
        None,
        description='Contains an array of objects in json structure.\n',
        examples=['json object'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the exportset\n',
        examples=['Exportset Dienstverband'],
    )


class ProvidersApplicationsetsApplicationSetIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message20]] = None
    content: Optional[Content4] = None


class Message21(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersApplicationsetsApplicationSetIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message21]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersApplicationsetsApplicationSetIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersApplicationsetsApplicationSetIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersApplicationsetsApplicationSetIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message21]] = None
    version: Optional[Version] = None


class Message23(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Authorization(BaseModel):
    availableForEmployerUser: Optional[bool] = Field(None, examples=[True])
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['Beheren dienstverbanden']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isEnabled: Optional[bool] = Field(
        None, description='Enable or disable an authorization'
    )


class Content5(BaseModel):
    authorizations: Optional[List[Authorization]] = None
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['HR Gebruiker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersAuthorizationsetsAuthorizationsetidGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message23]] = None
    content: Optional[Content5] = None


class Message24(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersAuthorizationsetsAuthorizationsetidGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message24]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersAuthorizationsetsAuthorizationsetidGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersAuthorizationsetsAuthorizationsetidGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmailidentitiesEmailIdentityIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message24]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmailidentitiesEmailIdentityIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message24]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmailidentitiesEmailIdentityIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmailidentitiesEmailIdentityIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmailidentitiesEmailIdentityIdSendtestemailPostRequest(BaseModel):
    to: Optional[str] = Field(
        None,
        description='The emailadres to which a test email should be send.',
        examples=['user@provider.com'],
    )


class ProvidersEmailidentitiesEmailIdentityIdSendtestemailPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message24]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmailidentitiesEmailIdentityIdSendtestemailPostResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmailidentitiesEmailIdentityIdSendtestemailPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message28(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country2(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address1(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country2] = None
    furtherIndication: Optional[FurtherIndication] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234AA']
    )
    province: Optional[Province] = Field(None, description='A Dutch province')
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Branch(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the branch. Possible values can be aquired via the metadata endpoint',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the branch. Branch is only available in Dutch',
        examples=['Landbouw en jacht'],
    )


class Contact(BaseModel):
    function: Optional[constr(max_length=50)] = Field(
        None,
        description='The job title/function of the contact of the employer',
        examples=['Manager'],
    )
    name: Optional[constr(max_length=50)] = Field(
        None,
        description='Name of the contact of the employer',
        examples=['Henk de Vries'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The general phone number of the employer',
        examples=['013-12345678'],
    )


class ContactInformation(BaseModel):
    emailAddress: Optional[EmailStr] = Field(
        None,
        description='The email address of the employer',
        examples=['info@voorbeeldbv.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None, description='The fax number of the employer', examples=['(088) 31 11149']
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The telephone number of the employer',
        examples=['(088) 31 11150'],
    )
    website: Optional[constr(max_length=255)] = Field(
        None, description='The website of the employer', examples=['www.voorbeeldbv.nl']
    )


class Country3(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication1(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress1(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country3] = None
    furtherIndication: Optional[FurtherIndication1] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    poBox: Optional[int] = Field(None, description='Post office box', examples=[5000])
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ProviderSettings(BaseModel):
    administrationNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='A free field that is most commonly used to store the Debtors Number the provider uses for the employer. This field is used as a key field in some of the existing SOAP webservices.',
        examples=['SR2'],
    )
    groupCode: Optional[int] = Field(
        None,
        description='The groupcode is used for grouping employers. It is used for filtering output and processes (only include employers in group 40 in this report).',
        examples=[40],
    )
    parentEmployerForConsolidatedOverviews: Optional[int] = Field(
        None,
        description='This field is used to link employers in order to generate reports containing the information of all the linked employers. By applying this method, infinite amount of employers can be linked.',
        examples=[9933],
    )
    sendEmailWhenSalarySlipIsAvailable: Optional[bool] = Field(
        None,
        description='Indicates whether an e-mail should be sent to an employee if a salary slip becomes available in the employee portal (loket.nl\'s "werknemer.loket")',
        examples=[True],
    )


class FieldEmbeddedItem5(BaseModel):
    address: Optional[Address1] = None
    branch: Optional[Branch] = None
    chamberOfCommerceNumber: Optional[constr(max_length=35)] = Field(
        None,
        description='Chamber of commerce number. In Dutch "Kamer van koophandel" number',
        examples=['18124676'],
    )
    companyName: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )
    contact: Optional[Contact] = None
    contactInformation: Optional[ContactInformation] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress1] = None
    employerLogo: Optional[str] = Field(
        None,
        description='The location of the logo of the employer. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/providers/employers/{guid}/logo/{version}'],
    )
    employerNumber: Optional[int] = Field(
        None,
        description='The employer number is used in various overviews and exports to identify a specific employer in Loket (please note: this is not the identifier used in the REST API).',
        examples=[20720],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    legalForm: Optional[LegalForm] = None
    providerLogo: Optional[str] = Field(
        None,
        description='This logo is displayed in the interface of loket.nl. if null no deviating logo is present and the normal provider logo should be used (aquire the URL to the logo via ../v2/providers)',
        examples=[
            'https://api.loket.nl/v2/providers/employers/{guid}/deviatingproviderlogo'
        ],
    )
    providerSettings: Optional[ProviderSettings] = None
    sbi: Optional[Sbi] = Field(
        None,
        description="The 'Standard Industrial Classifications (Dutch SBI 2008, NACE and ISIC)' as defined bij the Dutch chamber of commerce",
    )


class ProvidersEmployersGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message28]] = None
    field_embedded: Optional[List[FieldEmbeddedItem5]] = Field(None, alias='_embedded')


class Message29(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message29]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Action(Enum):
    markAsRead = 'markAsRead'


class ProvidersEmployersAnnouncementsPatchRequestItem(BaseModel):
    action: Action = Field(..., description='The action to perform on the announcement')
    id: UUID = Field(
        ...,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersAnnouncementsPatchRequest(
    RootModel[List[ProvidersEmployersAnnouncementsPatchRequestItem]]
):
    root: List[ProvidersEmployersAnnouncementsPatchRequestItem]


class Message30(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersAnnouncementsPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message30]] = None
    content: Optional[Dict[str, Any]] = None


class Message31(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersAnnouncementsPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message31]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersAnnouncementsPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersAnnouncementsPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message31]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message31]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message34(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem6(BaseModel):
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the benifit in kind type',
        examples=['Laptop'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message34]] = None
    field_embedded: Optional[List[FieldEmbeddedItem6]] = Field(None, alias='_embedded')


class Message35(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message35]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdPutRequest(BaseModel):
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the benifit in kind type',
        examples=['Laptop'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message36(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content6(BaseModel):
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the benifit in kind type',
        examples=['Laptop'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message36]] = None
    content: Optional[Content6] = None


class Message37(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message37]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersBenefitinkindtypesBenefitInKindTypeIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message37]] = None
    version: Optional[Version] = None


class Message39(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FailedItem(BaseModel):
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    index: Optional[conint(ge=1)] = Field(
        None,
        description='The location of the employee in the import file. The index start with 1 for the first employment in the file\n',
        examples=[2],
    )


class SuccessfullItem(BaseModel):
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    index: Optional[conint(ge=1)] = Field(
        None,
        description='The location of the employee in the import file. The index start with 1 for the first employment in the file\n',
        examples=[2],
    )


class Content7(BaseModel):
    failed: Optional[List[FailedItem]] = None
    successfull: Optional[List[SuccessfullItem]] = None


class ProvidersEmployersConceptemployeesImportPayrollAdministrationIdPatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message39]] = None
    content: Optional[Content7] = None


class Message40(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesImportPayrollAdministrationIdPatchResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message40]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesImportPayrollAdministrationIdPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesImportPayrollAdministrationIdPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesMetadataPayrollAdministrationPayrollAdministrationIdPayScalePayscaleKeyPaygradePaygradeKeyGetResponseItem(
    BaseModel
):
    startDate: Optional[date_aliased] = Field(
        None, description='Start date of the record.\n', examples=['2018-01-01']
    )
    value: Optional[float] = Field(
        None, description='Resulting amount for given paygrade', examples=[1153.1]
    )


class ProvidersEmployersConceptemployeesMetadataPayrollAdministrationPayrollAdministrationIdPayScalePayscaleKeyPaygradePaygradeKeyGetResponse(
    RootModel[
        List[
            List[
                ProvidersEmployersConceptemployeesMetadataPayrollAdministrationPayrollAdministrationIdPayScalePayscaleKeyPaygradePaygradeKeyGetResponseItem
            ]
        ]
    ]
):
    root: List[
        List[
            ProvidersEmployersConceptemployeesMetadataPayrollAdministrationPayrollAdministrationIdPayScalePayscaleKeyPaygradePaygradeKeyGetResponseItem
        ]
    ]


class Message41(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country4(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(None, examples=['NL'])
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Netherlands'])


class FurtherIndication2(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['WW'])


class Address2(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country4] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication2] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ContactInformation1(BaseModel):
    emailAddress: Optional[constr(max_length=255)] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The fax number to contact this individual',
        examples=['+31 13-1234561'],
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class CivilStatus(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Married'])


class Gender(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['female'])


class HowToFormatLastName(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['last name + last name partner']
    )


class Nationality(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Dutch'])


class Title(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['e.g. Msc, PHD or Baron']
    )


class PersonalDetails(BaseModel):
    civilStatus: Optional[CivilStatus] = Field(
        None, description='The civil status of the employee'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth of the employee.', examples=['1995-05-21']
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee.', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender of the employee')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format `formattedName`. '
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee.', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee.', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee`s partner.', examples=['Wiel']
    )
    nationality: Optional[Nationality] = Field(
        None, description='The nationality of the employee'
    )
    placeOfBirth: Optional[constr(max_length=24)] = Field(
        None, description='Place of birth of the employee', examples=['Amsterdam']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee.',
        examples=['van'],
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee"s partner.',
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).')


class Content8(BaseModel):
    address: Optional[Address2] = Field(None, description='The address of the employee')
    contactInformation: Optional[ContactInformation1] = Field(
        None, description='Contact information for the employee'
    )
    iban: Optional[constr(max_length=35)] = Field(
        None,
        description='International Bank Account Number. Only IBAN without spaces are accepted.',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    personalDetails: Optional[PersonalDetails] = Field(
        None,
        description='The personal details of the employee. e.g. Name, civil status en gender',
    )


class ProvidersEmployersConceptemployeesMinimizedConceptEmployeeIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message41]] = None
    content: Optional[Content8] = None


class Message42(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesMinimizedConceptEmployeeIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message42]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesMinimizedConceptEmployeeIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesMinimizedConceptEmployeeIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Address3(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country4] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication2] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class PersonalDetails1(BaseModel):
    civilStatus: Optional[CivilStatus] = Field(
        None, description='The civil status of the employee'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth of the employee.', examples=['1995-05-21']
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee.', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender of the employee')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format `formattedName`. '
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee.', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee.', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee`s partner.', examples=['Wiel']
    )
    nationality: Optional[Nationality] = Field(
        None, description='The nationality of the employee'
    )
    placeOfBirth: Optional[constr(max_length=24)] = Field(
        None, description='Place of birth of the employee', examples=['Amsterdam']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee.',
        examples=['van'],
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee"s partner.',
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).')


class ProvidersEmployersConceptemployeesMinimizedConceptEmployeeIdPutRequest(BaseModel):
    address: Optional[Address3] = Field(None, description='The address of the employee')
    contactInformation: Optional[ContactInformation1] = Field(
        None, description='Contact information for the employee'
    )
    iban: Optional[constr(max_length=35)] = Field(
        None,
        description='International Bank Account Number. Only IBAN without spaces are accepted.',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    personalDetails: Optional[PersonalDetails1] = Field(
        None,
        description='The personal details of the employee. e.g. Name, civil status en gender',
    )


class Message43(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Address4(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country4] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication2] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class PersonalDetails2(BaseModel):
    civilStatus: Optional[CivilStatus] = Field(
        None, description='The civil status of the employee'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth of the employee.', examples=['1995-05-21']
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee.', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender of the employee')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format `formattedName`. '
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee.', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee.', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee`s partner.', examples=['Wiel']
    )
    nationality: Optional[Nationality] = Field(
        None, description='The nationality of the employee'
    )
    placeOfBirth: Optional[constr(max_length=24)] = Field(
        None, description='Place of birth of the employee', examples=['Amsterdam']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee.',
        examples=['van'],
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee"s partner.',
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).')


class Content9(BaseModel):
    address: Optional[Address4] = Field(None, description='The address of the employee')
    contactInformation: Optional[ContactInformation1] = Field(
        None, description='Contact information for the employee'
    )
    iban: Optional[constr(max_length=35)] = Field(
        None,
        description='International Bank Account Number. Only IBAN without spaces are accepted.',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    personalDetails: Optional[PersonalDetails2] = Field(
        None,
        description='The personal details of the employee. e.g. Name, civil status en gender',
    )


class ProvidersEmployersConceptemployeesMinimizedConceptEmployeeIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message43]] = None
    content: Optional[Content9] = None


class Message44(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesMinimizedConceptEmployeeIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message44]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesMinimizedConceptEmployeeIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesMinimizedConceptEmployeeIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesMinimizedConceptEmployeeIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message44]] = None
    version: Optional[Version] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message44]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message44]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message48(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Address5(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country4] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication2] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class DeviatingPostalAddress2(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country4] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication2] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class TypeOfDocument(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the type of document. Possible values can be acquired via the metadata endpoint',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the type of document', examples=['Passport']
    )


class IdentityDocument(BaseModel):
    documentIdentification: Optional[constr(max_length=20)] = Field(
        None,
        description='Description of the type of document',
        examples=['CRE45553433'],
    )
    typeOfDocument: Optional[TypeOfDocument] = None


class PersonalDetails3(BaseModel):
    civilStatus: Optional[CivilStatus] = Field(
        None, description='The civil status of the employee'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth of the employee.', examples=['1995-05-21']
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee.', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender of the employee')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format `formattedName`. '
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee.', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee.', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee`s partner.', examples=['Wiel']
    )
    nationality: Optional[Nationality] = Field(
        None, description='The nationality of the employee'
    )
    placeOfBirth: Optional[constr(max_length=24)] = Field(
        None, description='Place of birth of the employee', examples=['Amsterdam']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee.',
        examples=['van'],
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee"s partner.',
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).')


class EmployeeData(BaseModel):
    address: Optional[Address5] = Field(None, description='The address of the employee')
    contactInformation: Optional[ContactInformation1] = Field(
        None, description='Contact information for the employee'
    )
    deviatingPostalAddress: Optional[DeviatingPostalAddress2] = Field(
        None,
        description='The deviating address of the employee (used as a postal address)',
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer.',
        examples=[156],
    )
    iban: Optional[constr(max_length=35)] = Field(
        None,
        description='International Bank Account Number. Only IBAN without spaces are accepted.',
        examples=['NL52ABNA0424968264'],
    )
    identityDocument: Optional[IdentityDocument] = Field(
        None, description='The identification document of the employee'
    )
    personalDetails: Optional[PersonalDetails3] = Field(
        None,
        description='The personal details of the employee. e.g. Name, civil status en gender',
    )


class CancellationPeriodTimeUnit(BaseModel):
    key: Optional[int] = Field(None, examples=[4])
    value: Optional[str] = Field(None, examples=['Maand(en)'])


class EmployeeProfileId(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Profiel full-timers'])


class EmploymentContractType(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Labor agreement'])


class EmploymentDurationType(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Contract of indefinite duration'])


class EssMutationSet(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Standaard'])


class ExemptionInsuranceObligation(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[str] = Field(None, examples=['Geen uitzondering.'])


class NonPayrollAdministration(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the administration', examples=['ABC accountants']
    )


class PayrollAdministration(BaseModel):
    clientNumber: Optional[int] = Field(
        None,
        description='The client number is a unique number for administrations that are used for payrolling. This field has no value if the administration is not used for payrolling.',
        examples=[1234],
    )
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the administration', examples=['ABC accountants']
    )


class SpecialIncomeRatio(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[str] = Field(None, examples=['n.v.t.'])


class TypeOfEmployee(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Werknemer'])


class TypeOfParticipation(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[str] = Field(None, examples=['n.v.t.'])


class VacationCoupons(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['n.v.t.'])


class ValueOfParticipation(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[str] = Field(None, examples=['n.v.t.'])


class EmploymentData(BaseModel):
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period.',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer.',
        examples=['2019-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties.',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end.',
        examples=['2019-01-01'],
    )
    deviatingCLATaxReturn: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns .',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests.',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user. ',
    )
    employmentContractType: Optional[EmploymentContractType] = Field(
        None, description='The type of employment applicable for the employment.'
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None, description='A selection of pre defined durations for the employment.'
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user. ',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht)',
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether first-day notification (EersteDagsMelding) is applicable for the employment',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation.',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company.',
        examples=['2012-05-01'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None, description='Indicates whether employee is anonymous ', examples=[True]
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classiefied as a director and major shareholder (Dutch --> directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Werknemerverzekering', examples=[True]
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Volksverzekering', examples=[True]
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment.',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration] = Field(
        None,
        description='An administration that can not be used for payrolling. This field can not have a value at the same time as `payrollAdministration`\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration] = Field(
        None,
        description='An administration used for payrolling. This field can not have a value at the same time as `nonPayrollAdministration`\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    periodPayGradeAdjustment: Optional[int] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’.',
        examples=[2],
    )
    professionCode: Optional[int] = Field(
        None, description='A code field for a profession.', examples=[4]
    )
    sendMdvNotification: Optional[bool] = Field(
        None,
        description='Indicate if a Mdv (melding dienstverband) should be send.',
        examples=[True],
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None, description='Indicates the special income ratio'
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month.',
        examples=['2019-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2019-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment.',
    )
    typeOfParticipation: Optional[TypeOfParticipation] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s.',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Dit the employment and employer make a written contract?',
        examples=[True],
    )


class ApplyDeviatingPayrollTaxPercentageOn(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Afwijkend voor tabel- en tariefloon']
    )


class DeviatingCalculationRulePayrollTax(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Werknemer belastingpl. en niet premiepl. WLZ']
    )


class DeviatingPayrollTaxTableColour(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Werknemer belastingpl. en niet premiepl. WLZ']
    )


class ResidentOf(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=80)] = Field(
        None,
        description='Description of the type of document',
        examples=['Andere EU-lidstaat,EER-land,Zwitserland of BES-eilanden'],
    )


class FiscalData(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=1000000000.0)] = Field(
        None, description='The fiscal annual salary', examples=[60000]
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting)',
        examples=[False],
    )
    applyStudentDeduction: Optional[bool] = Field(
        None, description='Apply the "Scholierenregeling"', examples=[False]
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[float] = Field(
        None,
        description='Indicates a deviating payroll tax percentage is to be applied',
        examples=[27.45],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description='Indicates if there is a deviating payroll tax table is applicable (green vs white table)',
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )


class Department(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Verkoop'])
    key: Optional[UUID] = Field(None, examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'])


class DistributionUnit(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Sales'])
    key: Optional[UUID] = Field(None, examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'])


class Function(BaseModel):
    description: Optional[str] = Field(None, examples=['Directeur'])
    group: Optional[str] = Field(None, examples=['internal'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class StandardFunction(BaseModel):
    category: Optional[int] = Field(None, examples=[1])
    code: Optional[constr(min_length=1, max_length=6)] = Field(None, examples=['A21'])
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Administrateur'])


class OrganizationalEntityData(BaseModel):
    department: Optional[Department] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[str] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[str] = Field(
        None,
        description='The deviating functiongroup description of the employment.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center. \n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user. \n',
    )
    function: Optional[Function] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    internalTelephoneExtensionNumber: Optional[str] = Field(
        None,
        description='The phone extention number for the employment.',
        examples=['0133031600'],
    )
    placeOfEmployment: Optional[str] = Field(
        None,
        description='The place of employment (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )


class DeviatingPremiumGroup(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['(12) Metaal- en technische bedrijfstakken']
    )


class OtherPayrollVariablesData(BaseModel):
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup] = Field(
        None,
        description='Indicates what deviating premie sector fonds should apply for the employment. Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )


class Status(Enum):
    HasAccessToClient = 'HasAccessToClient'
    NoAccessToClient = 'NoAccessToClient'
    UserIsBlocked = 'UserIsBlocked'
    AccessToClientIsBlocked = 'AccessToClientIsBlocked'


class SelfService(BaseModel):
    status: Optional[Status] = Field(None, description='Description of the status')


class HealthCareInsuranceActType(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['(C/K) Wel verzekeringsplichtig, normaal tarief']
    )


class SocialSecurityData(BaseModel):
    healthCareInsuranceActType: Optional[HealthCareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[False],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[False],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[False],
    )


class GrossWageType(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['hourly'])


class NetWageType(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['hourly'])


class PayGrade(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Schaal B1, 15 jaar']
    )


class PayScale(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Glastuinbouw maand, Loongebouw A']
    )


class WageData(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected. \n',
        examples=[True],
    )
    grossWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='The gross wage for the employee\n', examples=[23]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    netWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='Net wage for the employment\n'
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description='A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee"s level, rank or status within the employer"s organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )


class CalculateUsingWorkPattern(BaseModel):
    daysDailyRate: Optional[bool] = Field(
        None,
        description='Indicates whether the number of days of dailyrate should be calculated based on the workpattern. The number of days are normally calculated by the working hours.       ',
        examples=[False],
    )
    deviatingDaysAndHours: Optional[bool] = Field(
        None,
        description='Indication whether  the deviating hours per week and deviating SV-days per period are to be automatically calculated based on the workpattern. Please note (!) that any values in the deviatingHoursPerWeek and deviatingSvDaysPerPeriod fields (of this workingHours record) will be overwritten based on this calculation if true (and endDate=NULL)!',
        examples=[False],
    )
    hoursBrokenPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern in broken periods. These are periods of in or out of service.',
        examples=[False],
    )
    hoursPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern for regular periods.         ',
        examples=[False],
    )
    leaveHours: Optional[bool] = Field(
        None,
        description='Indicates whether then leave balances (verlof) are to be calculated based on the workpattern.',
        examples=[True],
    )


class ContractCode(BaseModel):
    code: Optional[int] = Field(None, examples=[1022])
    description: Optional[str] = Field(None, examples=['SLA-PT-met toeslagen ATW (88)'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class FlexibleHoursContract(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[constr(max_length=50)] = Field(None, examples=['n.v.t.'])


class Shift(BaseModel):
    bonusPercentage: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift. ',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None, description='The number for the shift. ', examples=[1]
    )


class EvenWeeks(BaseModel):
    friday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[2])
    monday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[0])
    saturday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[0])
    sunday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[0])
    thursday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[8])
    tuesday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[8])
    wednesday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[8])


class OddWeeks(BaseModel):
    friday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[4])
    monday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[8])
    saturday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[0])
    sunday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[0])
    thursday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[7.5])
    tuesday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[8])
    wednesday: Optional[confloat(ge=0.0, le=24.0)] = Field(None, examples=[4])


class WorkPattern(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class WorkingHoursData(BaseModel):
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100',
        examples=[37.5],
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object).',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='Fulltime hours are normally based as defined by the shift, this optional field is used to register a deviating value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[confloat(ge=1.0, le=23.0)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value. ',
        examples=[32],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.  ',
        examples=[True],
    )
    shift: Optional[Shift] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    workPattern: Optional[WorkPattern] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class Content10(BaseModel):
    creationDate: Optional[datetime] = Field(
        None,
        description='The date time on which the record was added (ISO-8601)',
        examples=['2018-05-08'],
    )
    employeeData: Optional[EmployeeData] = None
    employmentData: Optional[EmploymentData] = None
    fiscalData: Optional[FiscalData] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    organizationalEntityData: Optional[OrganizationalEntityData] = None
    otherPayrollVariablesData: Optional[OtherPayrollVariablesData] = None
    selfService: Optional[SelfService] = None
    socialSecurityData: Optional[SocialSecurityData] = None
    uniqueName: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The unique name for this concept employment. It is commonly used as a displayname in the user interface to select this entry in a dropdown box.',
        examples=['Sollicitant 013'],
    )
    wageData: Optional[WageData] = None
    workingHoursData: Optional[WorkingHoursData] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message48]] = None
    content: Optional[Content10] = None


class Message49(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message49]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Address6(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country4] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication2] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class DeviatingPostalAddress3(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country4] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication2] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument1(BaseModel):
    documentIdentification: Optional[constr(max_length=20)] = Field(
        None,
        description='Description of the type of document',
        examples=['CRE45553433'],
    )
    typeOfDocument: Optional[TypeOfDocument] = None


class PersonalDetails4(BaseModel):
    civilStatus: Optional[CivilStatus] = Field(
        None, description='The civil status of the employee'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth of the employee.', examples=['1995-05-21']
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee.', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender of the employee')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format `formattedName`. '
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee.', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee.', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee`s partner.', examples=['Wiel']
    )
    nationality: Optional[Nationality] = Field(
        None, description='The nationality of the employee'
    )
    placeOfBirth: Optional[constr(max_length=24)] = Field(
        None, description='Place of birth of the employee', examples=['Amsterdam']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee.',
        examples=['van'],
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee"s partner.',
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).')


class EmployeeData1(BaseModel):
    address: Optional[Address6] = Field(None, description='The address of the employee')
    contactInformation: Optional[ContactInformation1] = Field(
        None, description='Contact information for the employee'
    )
    deviatingPostalAddress: Optional[DeviatingPostalAddress3] = Field(
        None,
        description='The deviating address of the employee (used as a postal address)',
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer.',
        examples=[156],
    )
    iban: Optional[constr(max_length=35)] = Field(
        None,
        description='International Bank Account Number. Only IBAN without spaces are accepted.',
        examples=['NL52ABNA0424968264'],
    )
    identityDocument: Optional[IdentityDocument1] = Field(
        None, description='The identification document of the employee'
    )
    personalDetails: Optional[PersonalDetails4] = Field(
        None,
        description='The personal details of the employee. e.g. Name, civil status en gender',
    )


class EmploymentData1(BaseModel):
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period.',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer.',
        examples=['2019-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties.',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end.',
        examples=['2019-01-01'],
    )
    deviatingCLATaxReturn: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns .',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests.',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user. ',
    )
    employmentContractType: Optional[EmploymentContractType] = Field(
        None, description='The type of employment applicable for the employment.'
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None, description='A selection of pre defined durations for the employment.'
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user. ',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht)',
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether first-day notification (EersteDagsMelding) is applicable for the employment',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation.',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company.',
        examples=['2012-05-01'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None, description='Indicates whether employee is anonymous ', examples=[True]
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classiefied as a director and major shareholder (Dutch --> directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Werknemerverzekering', examples=[True]
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Volksverzekering', examples=[True]
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment.',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration] = Field(
        None,
        description='An administration that can not be used for payrolling. This field can not have a value at the same time as `payrollAdministration`\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration] = Field(
        None,
        description='An administration used for payrolling. This field can not have a value at the same time as `nonPayrollAdministration`\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    periodPayGradeAdjustment: Optional[int] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’.',
        examples=[2],
    )
    professionCode: Optional[int] = Field(
        None, description='A code field for a profession.', examples=[4]
    )
    sendMdvNotification: Optional[bool] = Field(
        None,
        description='Indicate if a Mdv (melding dienstverband) should be send.',
        examples=[True],
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None, description='Indicates the special income ratio'
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month.',
        examples=['2019-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2019-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment.',
    )
    typeOfParticipation: Optional[TypeOfParticipation] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s.',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Dit the employment and employer make a written contract?',
        examples=[True],
    )


class FiscalData1(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=1000000000.0)] = Field(
        None, description='The fiscal annual salary', examples=[60000]
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting)',
        examples=[False],
    )
    applyStudentDeduction: Optional[bool] = Field(
        None, description='Apply the "Scholierenregeling"', examples=[False]
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[float] = Field(
        None,
        description='Indicates a deviating payroll tax percentage is to be applied',
        examples=[27.45],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description='Indicates if there is a deviating payroll tax table is applicable (green vs white table)',
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )


class OrganizationalEntityData1(BaseModel):
    department: Optional[Department] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[str] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[str] = Field(
        None,
        description='The deviating functiongroup description of the employment.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center. \n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user. \n',
    )
    function: Optional[Function] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    internalTelephoneExtensionNumber: Optional[str] = Field(
        None,
        description='The phone extention number for the employment.',
        examples=['0133031600'],
    )
    placeOfEmployment: Optional[str] = Field(
        None,
        description='The place of employment (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )


class OtherPayrollVariablesData1(BaseModel):
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup] = Field(
        None,
        description='Indicates what deviating premie sector fonds should apply for the employment. Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )


class SelfService1(BaseModel):
    status: Optional[Status] = Field(None, description='Description of the status')


class SocialSecurityData1(BaseModel):
    healthCareInsuranceActType: Optional[HealthCareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[False],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[False],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[False],
    )


class WageData1(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected. \n',
        examples=[True],
    )
    grossWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='The gross wage for the employee\n', examples=[23]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    netWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='Net wage for the employment\n'
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description='A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee"s level, rank or status within the employer"s organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )


class WorkPattern1(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class WorkingHoursData1(BaseModel):
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100',
        examples=[37.5],
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object).',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='Fulltime hours are normally based as defined by the shift, this optional field is used to register a deviating value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[confloat(ge=1.0, le=23.0)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value. ',
        examples=[32],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.  ',
        examples=[True],
    )
    shift: Optional[Shift] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    workPattern: Optional[WorkPattern1] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPutRequest(BaseModel):
    creationDate: Optional[datetime] = Field(
        None,
        description='The date time on which the record was added (ISO-8601)',
        examples=['2018-05-08'],
    )
    employeeData: Optional[EmployeeData1] = None
    employmentData: Optional[EmploymentData1] = None
    fiscalData: Optional[FiscalData1] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    organizationalEntityData: Optional[OrganizationalEntityData1] = None
    otherPayrollVariablesData: Optional[OtherPayrollVariablesData1] = None
    selfService: Optional[SelfService1] = None
    socialSecurityData: Optional[SocialSecurityData1] = None
    uniqueName: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The unique name for this concept employment. It is commonly used as a displayname in the user interface to select this entry in a dropdown box.',
        examples=['Sollicitant 013'],
    )
    wageData: Optional[WageData1] = None
    workingHoursData: Optional[WorkingHoursData1] = None


class Message50(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Address7(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country4] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication2] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class DeviatingPostalAddress4(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country4] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication2] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument2(BaseModel):
    documentIdentification: Optional[constr(max_length=20)] = Field(
        None,
        description='Description of the type of document',
        examples=['CRE45553433'],
    )
    typeOfDocument: Optional[TypeOfDocument] = None


class PersonalDetails5(BaseModel):
    civilStatus: Optional[CivilStatus] = Field(
        None, description='The civil status of the employee'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth of the employee.', examples=['1995-05-21']
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee.', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender of the employee')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format `formattedName`. '
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee.', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee.', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee`s partner.', examples=['Wiel']
    )
    nationality: Optional[Nationality] = Field(
        None, description='The nationality of the employee'
    )
    placeOfBirth: Optional[constr(max_length=24)] = Field(
        None, description='Place of birth of the employee', examples=['Amsterdam']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee.',
        examples=['van'],
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee"s partner.',
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).')


class EmployeeData2(BaseModel):
    address: Optional[Address7] = Field(None, description='The address of the employee')
    contactInformation: Optional[ContactInformation1] = Field(
        None, description='Contact information for the employee'
    )
    deviatingPostalAddress: Optional[DeviatingPostalAddress4] = Field(
        None,
        description='The deviating address of the employee (used as a postal address)',
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer.',
        examples=[156],
    )
    iban: Optional[constr(max_length=35)] = Field(
        None,
        description='International Bank Account Number. Only IBAN without spaces are accepted.',
        examples=['NL52ABNA0424968264'],
    )
    identityDocument: Optional[IdentityDocument2] = Field(
        None, description='The identification document of the employee'
    )
    personalDetails: Optional[PersonalDetails5] = Field(
        None,
        description='The personal details of the employee. e.g. Name, civil status en gender',
    )


class EmploymentData2(BaseModel):
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period.',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer.',
        examples=['2019-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties.',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end.',
        examples=['2019-01-01'],
    )
    deviatingCLATaxReturn: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns .',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests.',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user. ',
    )
    employmentContractType: Optional[EmploymentContractType] = Field(
        None, description='The type of employment applicable for the employment.'
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None, description='A selection of pre defined durations for the employment.'
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user. ',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht)',
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether first-day notification (EersteDagsMelding) is applicable for the employment',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation.',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company.',
        examples=['2012-05-01'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None, description='Indicates whether employee is anonymous ', examples=[True]
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classiefied as a director and major shareholder (Dutch --> directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Werknemerverzekering', examples=[True]
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Volksverzekering', examples=[True]
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment.',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration] = Field(
        None,
        description='An administration that can not be used for payrolling. This field can not have a value at the same time as `payrollAdministration`\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration] = Field(
        None,
        description='An administration used for payrolling. This field can not have a value at the same time as `nonPayrollAdministration`\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    periodPayGradeAdjustment: Optional[int] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’.',
        examples=[2],
    )
    professionCode: Optional[int] = Field(
        None, description='A code field for a profession.', examples=[4]
    )
    sendMdvNotification: Optional[bool] = Field(
        None,
        description='Indicate if a Mdv (melding dienstverband) should be send.',
        examples=[True],
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None, description='Indicates the special income ratio'
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month.',
        examples=['2019-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2019-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment.',
    )
    typeOfParticipation: Optional[TypeOfParticipation] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s.',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Dit the employment and employer make a written contract?',
        examples=[True],
    )


class FiscalData2(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=1000000000.0)] = Field(
        None, description='The fiscal annual salary', examples=[60000]
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting)',
        examples=[False],
    )
    applyStudentDeduction: Optional[bool] = Field(
        None, description='Apply the "Scholierenregeling"', examples=[False]
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[float] = Field(
        None,
        description='Indicates a deviating payroll tax percentage is to be applied',
        examples=[27.45],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description='Indicates if there is a deviating payroll tax table is applicable (green vs white table)',
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )


class OrganizationalEntityData2(BaseModel):
    department: Optional[Department] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[str] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[str] = Field(
        None,
        description='The deviating functiongroup description of the employment.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center. \n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user. \n',
    )
    function: Optional[Function] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    internalTelephoneExtensionNumber: Optional[str] = Field(
        None,
        description='The phone extention number for the employment.',
        examples=['0133031600'],
    )
    placeOfEmployment: Optional[str] = Field(
        None,
        description='The place of employment (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )


class OtherPayrollVariablesData2(BaseModel):
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup] = Field(
        None,
        description='Indicates what deviating premie sector fonds should apply for the employment. Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )


class SelfService2(BaseModel):
    status: Optional[Status] = Field(None, description='Description of the status')


class SocialSecurityData2(BaseModel):
    healthCareInsuranceActType: Optional[HealthCareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[False],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[False],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[False],
    )


class WageData2(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected. \n',
        examples=[True],
    )
    grossWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='The gross wage for the employee\n', examples=[23]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    netWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='Net wage for the employment\n'
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description='A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee"s level, rank or status within the employer"s organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )


class WorkPattern2(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class WorkingHoursData2(BaseModel):
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100',
        examples=[37.5],
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object).',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='Fulltime hours are normally based as defined by the shift, this optional field is used to register a deviating value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[confloat(ge=1.0, le=23.0)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value. ',
        examples=[32],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.  ',
        examples=[True],
    )
    shift: Optional[Shift] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    workPattern: Optional[WorkPattern2] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class Content11(BaseModel):
    creationDate: Optional[datetime] = Field(
        None,
        description='The date time on which the record was added (ISO-8601)',
        examples=['2018-05-08'],
    )
    employeeData: Optional[EmployeeData2] = None
    employmentData: Optional[EmploymentData2] = None
    fiscalData: Optional[FiscalData2] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    organizationalEntityData: Optional[OrganizationalEntityData2] = None
    otherPayrollVariablesData: Optional[OtherPayrollVariablesData2] = None
    selfService: Optional[SelfService2] = None
    socialSecurityData: Optional[SocialSecurityData2] = None
    uniqueName: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The unique name for this concept employment. It is commonly used as a displayname in the user interface to select this entry in a dropdown box.',
        examples=['Sollicitant 013'],
    )
    wageData: Optional[WageData2] = None
    workingHoursData: Optional[WorkingHoursData2] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message50]] = None
    content: Optional[Content11] = None


class Message51(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message51]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message51]] = None
    version: Optional[Version] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdAssessmentInitiatePostRequest(
    BaseModel
):
    withIq: Optional[bool] = Field(
        None, description='The type of the assessment', examples=[True]
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdAssessmentInitiatePostResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message51]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdAssessmentInitiatePostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdAssessmentInitiatePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message54(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content12(BaseModel):
    citizenServiceNumber: Optional[constr(min_length=9, max_length=9)] = Field(
        None,
        description='The social security number of the employee used in communication with the Dutch tax authorities. The number has to be a valid Dutch citizen service number (BSN).',
        examples=['042168588'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdCitizenservicenumberGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message54]] = None
    content: Optional[Content12] = None


class Message55(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdCitizenservicenumberGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message55]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdCitizenservicenumberGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdCitizenservicenumberGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdCitizenservicenumberPutRequest(
    BaseModel
):
    citizenServiceNumber: Optional[constr(min_length=9, max_length=9)] = Field(
        None,
        description='The social security number of the employee used in communication with the Dutch tax authorities. The number has to be a valid Dutch citizen service number (BSN).',
        examples=['042168588'],
    )


class Message56(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdCitizenservicenumberPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message56]] = None
    content: Optional[Content12] = None


class Message57(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdCitizenservicenumberPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message57]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdCitizenservicenumberPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdCitizenservicenumberPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdCitizenservicenumberPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message57]] = None
    version: Optional[Version] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdConvertToEmployeePatchResponse(
    BaseModel
):
    pass


class ProvidersEmployersConceptemployeesConceptEmployeeIdConvertToEmployeePatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message57]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdConvertToEmployeePatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdConvertToEmployeePatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message60(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class IsReadBy(BaseModel):
    departmentManager: Optional[bool] = Field(
        None, description='Qwoater: IsReadDepartmentManager', examples=[False]
    )
    employee: Optional[bool] = Field(
        None, description='Qwoater: IsReadEmployee', examples=[False]
    )
    employer: Optional[bool] = Field(
        None, description='Qwoater: IsReadEmployer', examples=[False]
    )
    provider: Optional[bool] = Field(
        None, description='Qwoater: IsReadProvider', examples=[False]
    )


class SignDocumentStatus(BaseModel):
    key: Optional[str] = Field(None, examples=['Se'])
    value: Optional[str] = Field(None, examples=['Onderteken-verzoek verzonden'])


class FieldEmbeddedItem7(BaseModel):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    category: Optional[constr(max_length=4000)] = Field(
        None,
        description='The category of the document. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    isReadBy: Optional[IsReadBy] = None
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    submittedBy: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the user that has submitted the document. Qwoater: Docfield 34 Gebruiker\n',
        examples=['Bowls, John'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )
    filename: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    isInitiateSignDocumentRequestPossible: Optional[bool] = Field(
        None,
        description='Indicates whether initiate sign document request is possible.\n',
        examples=[True],
    )
    signDocumentStatus: Optional[SignDocumentStatus] = Field(
        None, description='Status of the signature.\n'
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message60]] = None
    field_embedded: Optional[List[FieldEmbeddedItem7]] = Field(None, alias='_embedded')


class Message61(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message61]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsPostRequest(
    BaseModel
):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    category: Optional[constr(max_length=4000)] = Field(
        None,
        description='The category of the document. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    isReadBy: Optional[IsReadBy] = None
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    submittedBy: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the user that has submitted the document. Qwoater: Docfield 34 Gebruiker\n',
        examples=['Bowls, John'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )
    filename: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    file: Optional[str] = Field(
        None, description='base64 encoded document file.', examples=['YQ==']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsPostResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message61]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsPostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message61]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message61]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdGetResponse(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdPutRequest(
    BaseModel
):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    category: Optional[constr(max_length=4000)] = Field(
        None,
        description='The category of the document. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    isReadBy: Optional[IsReadBy] = None
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    submittedBy: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the user that has submitted the document. Qwoater: Docfield 34 Gebruiker\n',
        examples=['Bowls, John'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message61]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdPutResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdPutResponse3(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message61]] = None
    version: Optional[Version] = None


class Message67(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem8(BaseModel):
    attribute: Optional[str] = Field(
        None, description='Qwoater: Kenmerk\n', examples=['']
    )
    category: Optional[str] = Field(
        None, description='Qwoater: DocumentType\n', examples=['']
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time the declaration was submitted. Qwoater: Signaleringsdatum\n',
        examples=['2018-05-08'],
    )
    description: Optional[str] = Field(
        None, description='Qwoater: Omschrijving\n', examples=['VSP004']
    )
    endUser: Optional[str] = Field(
        None, description='Qwoater: EndUser\n', examples=['Hur, Ben']
    )
    event: Optional[str] = Field(
        None, description='Qwoater: Event\n', examples=['Audittrail opgevraagd']
    )
    eventDate: Optional[datetime] = Field(
        None,
        description='The time the declaration was submitted. Qwoater: AuditEventDate\n',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    role: Optional[str] = Field(
        None, description='Qwoater: Role\n', examples=['Provider']
    )
    year: Optional[str] = Field(None, description='Qwoater: Jaar\n', examples=['2020'])


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdAudittrailGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message67]] = None
    field_embedded: Optional[List[FieldEmbeddedItem8]] = Field(None, alias='_embedded')


class Message68(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdAudittrailGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message68]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdAudittrailGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdAudittrailGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureDeleteResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message68]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureDeleteResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message70(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class SignDocumentStatus1(BaseModel):
    Key: Optional[str] = Field(
        None, description='The key of the status', examples=['Ne']
    )
    Value: Optional[str] = Field(
        None,
        description='The description of the status.',
        examples=['Nieuw onderteken-verzoek'],
    )


class SignerStatu(BaseModel):
    declined: Optional[bool] = Field(
        None,
        description='Has the signer declined to sign the document?',
        examples=[True],
    )
    emailAddress: Optional[str] = Field(
        None, description='The email address of the signer.', examples=['test@test.com']
    )
    emailed: Optional[bool] = Field(
        None,
        description='Has the signer received an email to sign the document?',
        examples=[True],
    )
    name: Optional[str] = Field(
        None, description='The name of the signer', examples=['Ben Hur']
    )
    signed: Optional[bool] = Field(
        None,
        description='Has the signer received an email to sign the document?',
        examples=[True],
    )
    signedOnDate: Optional[datetime] = Field(
        None,
        description='The date/time at which the signer has signed the document',
        examples=['2021-02-24T08:20:33.105668Z'],
    )
    viewed: Optional[bool] = Field(
        None, description='Has the signer viewed the document?', examples=[True]
    )


class FieldEmbedded(BaseModel):
    signDocumentStatus: Optional[SignDocumentStatus1] = Field(
        None, description='Status of the signature at document level'
    )
    signerStatus: Optional[List[SignerStatu]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureGetResponse(
    BaseModel
):
    messages: Optional[List[Message70]] = None
    field_embedded: Optional[FieldEmbedded] = Field(None, alias='_embedded')


class Message71(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message71]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureInitiatePostRequestItem(
    BaseModel
):
    emailAddress: Optional[str] = Field(
        None, description='The email address of the signer.', examples=['test@test.com']
    )
    mobilePhoneNumber: Optional[str] = Field(
        None,
        description='The mobile phone number of the signer. In E.164 format',
        examples=['+31612345678'],
    )
    name: Optional[str] = Field(
        None, description='The name of the signer', examples=['Ben Hur']
    )
    signingOrder: Optional[int] = Field(
        None,
        description='When filled, this integer is used to set the order in which the signers have to sign the document. An email will be sent to all signers with the first SigningOrder number. When signed an email will be sent to all signers with the second SingingOrder. Etcetera.',
        examples=['2'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureInitiatePostRequest(
    RootModel[
        List[
            ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureInitiatePostRequestItem
        ]
    ]
):
    root: List[
        ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureInitiatePostRequestItem
    ]


class Message72(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content14(BaseModel):
    signDocumentStatus: Optional[SignDocumentStatus1] = Field(
        None, description='Status of the signature at document level'
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureInitiatePostResponse(
    BaseModel
):
    messages: Optional[List[Message72]] = None
    content: Optional[Content14] = None


class Message73(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureInitiatePostResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message73]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureInitiatePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureInitiatePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureReportGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message73]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureReportGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumentsDocumentIdSignatureReportGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumenttemplatesDocumentIdGeneratedocumentPostRequest(
    BaseModel
):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The date at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    filename: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    referenceDate: Optional[date_aliased] = Field(
        None,
        description='This date will be used to select date depending data such as department and function.\n',
        examples=['2020-05-08'],
    )
    templateEmployerId: Optional[UUID] = Field(
        None,
        description='The unique identifier of the employer to which the template belongs (GUID/UUID).',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumenttemplatesDocumentIdGeneratedocumentPostResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message73]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumenttemplatesDocumentIdGeneratedocumentPostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumenttemplatesDocumentIdGeneratedocumentPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumenttemplatesDocumentIdGeneratedocumentPreviewPostRequest(
    BaseModel
):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The date at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    filename: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    referenceDate: Optional[date_aliased] = Field(
        None,
        description='This date will be used to select date depending data such as department and function.\n',
        examples=['2020-05-08'],
    )
    templateEmployerId: Optional[UUID] = Field(
        None,
        description='The unique identifier of the employer to which the template belongs (GUID/UUID).',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumenttemplatesDocumentIdGeneratedocumentPreviewPostResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message73]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumenttemplatesDocumentIdGeneratedocumentPreviewPostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDocumenttemplatesDocumentIdGeneratedocumentPreviewPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDossierDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message73]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdDossierDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message73]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdDossierDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDossierDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message79(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content15(BaseModel):
    numberOfDocuments: Optional[int] = Field(
        None,
        description='The number of documents in the dossier, regarthless of who has access to them.',
        examples=[7],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDossierGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message79]] = None
    content: Optional[Content15] = None


class Message80(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDossierGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message80]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersConceptemployeesConceptEmployeeIdDossierGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdDossierGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Action1(Enum):
    markAsCompleted = 'markAsCompleted'
    markAsEndedPrematurely = 'markAsEndedPrematurely'


class ProvidersEmployersConceptemployeesConceptEmployeeIdPreboardingtrajectoryPatchRequest(
    BaseModel
):
    action: Action1 = Field(
        ..., description='The action to perform on PreboardingTrajectory'
    )


class Message81(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPreboardingtrajectoryPatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message81]] = None
    content: Optional[Dict[str, Any]] = None


class Message82(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPreboardingtrajectoryPatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message82]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdPreboardingtrajectoryPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPreboardingtrajectoryPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPreboardingtrajectoryPostRequest(
    BaseModel
):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message83(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content16(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPreboardingtrajectoryPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message83]] = None
    content: Optional[Content16] = None


class Message84(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPreboardingtrajectoryPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message84]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdPreboardingtrajectoryPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdPreboardingtrajectoryPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message85(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ConceptEmployee(BaseModel):
    emailAddress: Optional[constr(max_length=255)] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within an employer.',
        examples=[156],
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee', examples=['Bergen']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the employee', examples=['van']
    )


class Content17(BaseModel):
    conceptEmployee: Optional[ConceptEmployee] = None
    status: Optional[Status] = Field(None, description='Description of the status')


class ProvidersEmployersConceptemployeesConceptEmployeeIdSelfserviceGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message85]] = None
    content: Optional[Content17] = None


class Message86(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdSelfserviceGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message86]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersConceptemployeesConceptEmployeeIdSelfserviceGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersConceptemployeesConceptEmployeeIdSelfserviceGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersContractcodesContractCodeIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message86]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersContractcodesContractCodeIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message86]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersContractcodesContractCodeIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersContractcodesContractCodeIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message89(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem9(BaseModel):
    code: Optional[int] = Field(
        None,
        description='An unique code for the contract code within the scope of the employer',
        examples=[1022],
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the contract code',
        examples=['Special contract'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersContractcodesContractCodeIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message89]] = None
    field_embedded: Optional[List[FieldEmbeddedItem9]] = Field(None, alias='_embedded')


class Message90(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersContractcodesContractCodeIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message90]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersContractcodesContractCodeIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersContractcodesContractCodeIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersContractcodesContractCodeIdPutRequest(BaseModel):
    code: Optional[int] = Field(
        None,
        description='An unique code for the contract code within the scope of the employer',
        examples=[1022],
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the contract code',
        examples=['Special contract'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message91(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content18(BaseModel):
    code: Optional[int] = Field(
        None,
        description='An unique code for the contract code within the scope of the employer',
        examples=[1022],
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the contract code',
        examples=['Special contract'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersContractcodesContractCodeIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message91]] = None
    content: Optional[Content18] = None


class Message92(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersContractcodesContractCodeIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message92]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersContractcodesContractCodeIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersContractcodesContractCodeIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersContractcodesContractCodeIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message92]] = None
    version: Optional[Version] = None


class ProvidersEmployersCustomfieldsCustomFieldIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message92]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersCustomfieldsCustomFieldIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message92]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersCustomfieldsCustomFieldIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersCustomfieldsCustomFieldIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message96(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem10(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom field which can be used at the employee and employment level',
        examples=['Shoe size'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersCustomfieldsCustomFieldIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message96]] = None
    field_embedded: Optional[List[FieldEmbeddedItem10]] = Field(None, alias='_embedded')


class Message97(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersCustomfieldsCustomFieldIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message97]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersCustomfieldsCustomFieldIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersCustomfieldsCustomFieldIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersCustomfieldsCustomFieldIdPutRequest(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom field which can be used at the employee and employment level',
        examples=['Shoe size'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message98(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content19(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom field which can be used at the employee and employment level',
        examples=['Shoe size'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersCustomfieldsCustomFieldIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message98]] = None
    content: Optional[Content19] = None


class Message99(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersCustomfieldsCustomFieldIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message99]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersCustomfieldsCustomFieldIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersCustomfieldsCustomFieldIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersCustomfieldsCustomFieldIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message99]] = None
    version: Optional[Version] = None


class ProvidersEmployersCustomholidaysCustomHolidayIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message99]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersCustomholidaysCustomHolidayIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message99]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersCustomholidaysCustomHolidayIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersCustomholidaysCustomHolidayIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message103(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem11(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The date for the custom holiday.', examples=['2021-01-01']
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom holiday.',
        examples=['Company 100th year anniversary'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersCustomholidaysCustomHolidayIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message103]] = None
    field_embedded: Optional[List[FieldEmbeddedItem11]] = Field(None, alias='_embedded')


class Message104(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersCustomholidaysCustomHolidayIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message104]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersCustomholidaysCustomHolidayIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersCustomholidaysCustomHolidayIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersCustomholidaysCustomHolidayIdPutRequest(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The date for the custom holiday.', examples=['2021-01-01']
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom holiday.',
        examples=['Company 100th year anniversary'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message105(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content20(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The date for the custom holiday.', examples=['2021-01-01']
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom holiday.',
        examples=['Company 100th year anniversary'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersCustomholidaysCustomHolidayIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message105]] = None
    content: Optional[Content20] = None


class Message106(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersCustomholidaysCustomHolidayIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message106]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersCustomholidaysCustomHolidayIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersCustomholidaysCustomHolidayIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersCustomholidaysCustomHolidayIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message106]] = None
    version: Optional[Version] = None


class Message108(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class SubDepartmentOf(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['Verkoop Algemeen']
    )
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Content21(BaseModel):
    code: Optional[int] = Field(
        None, description='The visible identifier of the department.\n', examples=[2]
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The visible description (i.e. name) of the department.\n',
        examples=['Verkoop Binnendienst'],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. Typically this is the mailadress of a manager that would get a notification mail when a new leave requet is to be processed.',
        examples=['api@loket.nl'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    subDepartmentOf: Optional[SubDepartmentOf] = Field(
        None,
        description='If the department is a sub department (i.e. underlying) of another department, then the key-field of that other department may be entered here.\n',
    )


class ProvidersEmployersDepartmentsDepartmentIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message108]] = None
    content: Optional[Content21] = None


class Message109(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersDepartmentsDepartmentIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message109]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersDepartmentsDepartmentIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersDepartmentsDepartmentIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersDepartmentsDepartmentIdPutRequest(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The visible description (i.e. name) of the department.\n',
        examples=['Verkoop Binnendienst'],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. Typically this is the mailadress of a manager that would get a notification mail when a new leave requet is to be processed.',
        examples=['api@loket.nl'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    subDepartmentOf: Optional[SubDepartmentOf] = Field(
        None,
        description='If the department is a sub department (i.e. underlying) of another department, then the key-field of that other department may be entered here.\n',
    )


class Message110(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content22(BaseModel):
    code: Optional[int] = Field(
        None, description='The visible identifier of the department.\n', examples=[2]
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The visible description (i.e. name) of the department.\n',
        examples=['Verkoop Binnendienst'],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. Typically this is the mailadress of a manager that would get a notification mail when a new leave requet is to be processed.',
        examples=['api@loket.nl'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    subDepartmentOf: Optional[SubDepartmentOf] = Field(
        None,
        description='If the department is a sub department (i.e. underlying) of another department, then the key-field of that other department may be entered here.\n',
    )


class ProvidersEmployersDepartmentsDepartmentIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message110]] = None
    content: Optional[Content22] = None


class Message111(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersDepartmentsDepartmentIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message111]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersDepartmentsDepartmentIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersDepartmentsDepartmentIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersDepartmentsDepartmentIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message111]] = None
    version: Optional[Version] = None


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message111]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message111]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message115(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem12(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction further indication within the scope of the employer',
        examples=['lts'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education furhter indication',
        examples=['Lagere technische school'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message115]] = None
    field_embedded: Optional[List[FieldEmbeddedItem12]] = Field(None, alias='_embedded')


class Message116(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message116]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdPutRequest(
    BaseModel
):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction further indication within the scope of the employer',
        examples=['lts'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education furhter indication',
        examples=['Lagere technische school'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message117(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content23(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction further indication within the scope of the employer',
        examples=['lts'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education furhter indication',
        examples=['Lagere technische school'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message117]] = None
    content: Optional[Content23] = None


class Message118(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message118]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEducationfurtherindicationsEducationFurtherIndicationIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message118]] = None
    version: Optional[Version] = None


class ProvidersEmployersEducationtypesEducationTypeIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message118]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEducationtypesEducationTypeIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message118]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEducationtypesEducationTypeIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEducationtypesEducationTypeIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message122(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem13(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction type within the scope of the employer',
        examples=['WO'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education type',
        examples=['Wetenschappelijk onderwijs'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEducationtypesEducationTypeIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message122]] = None
    field_embedded: Optional[List[FieldEmbeddedItem13]] = Field(None, alias='_embedded')


class Message123(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEducationtypesEducationTypeIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message123]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEducationtypesEducationTypeIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEducationtypesEducationTypeIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEducationtypesEducationTypeIdPutRequest(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction type within the scope of the employer',
        examples=['WO'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education type',
        examples=['Wetenschappelijk onderwijs'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message124(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content24(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction type within the scope of the employer',
        examples=['WO'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education type',
        examples=['Wetenschappelijk onderwijs'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEducationtypesEducationTypeIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message124]] = None
    content: Optional[Content24] = None


class Message125(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEducationtypesEducationTypeIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message125]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEducationtypesEducationTypeIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEducationtypesEducationTypeIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEducationtypesEducationTypeIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message125]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmailidentitiesEmailIdentityIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message125]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmailidentitiesEmailIdentityIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message125]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmailidentitiesEmailIdentityIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmailidentitiesEmailIdentityIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmailidentitiesEmailIdentityIdSendtestemailPostRequest(
    BaseModel
):
    to: Optional[str] = Field(
        None,
        description='The emailadres to which a test email should be send.',
        examples=['user@provider.com'],
    )


class ProvidersEmployersEmailidentitiesEmailIdentityIdSendtestemailPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message125]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmailidentitiesEmailIdentityIdSendtestemailPostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmailidentitiesEmailIdentityIdSendtestemailPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message125]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message125]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message132(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ContactMethod(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the method of contacting the employee',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the method of contact.', examples=['e-mail']
    )


class Content25(BaseModel):
    contactDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the contact was initiated.',
        examples=['2018-01-01'],
    )
    contactMethod: Optional[ContactMethod] = Field(
        None, description='The method of contacting the person\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    summary: Optional[constr(min_length=1, max_length=4000)] = Field(
        None, description='Summary of the contact.\n'
    )


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message132]] = None
    content: Optional[Content25] = None


class Message133(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message133]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdPutRequest(
    BaseModel
):
    contactDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the contact was initiated.',
        examples=['2018-01-01'],
    )
    contactMethod: Optional[ContactMethod] = Field(
        None, description='The method of contacting the person\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    summary: Optional[constr(min_length=1, max_length=4000)] = Field(
        None, description='Summary of the contact.\n'
    )


class Message134(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content26(BaseModel):
    contactDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the contact was initiated.',
        examples=['2018-01-01'],
    )
    contactMethod: Optional[ContactMethod] = Field(
        None, description='The method of contacting the person\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    summary: Optional[constr(min_length=1, max_length=4000)] = Field(
        None, description='Summary of the contact.\n'
    )


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message134]] = None
    content: Optional[Content26] = None


class Message135(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message135]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesAbsencesAbsencecontactHistoryAbsencecontactHistoryIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message135]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message135]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message135]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message139(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class TypeOfWorkResumption(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the type of work resumption. Possible values can be acquired via the metadata endpoint.\n',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the type of work resumption.\n',
        examples=['Eigen werk met aanpassing'],
    )


class Content27(BaseModel):
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day that the `incapacityPercentage` is active.<br/>\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )
    typeOfWorkResumption: Optional[TypeOfWorkResumption] = Field(
        None,
        description='The type of work the work the employee is fulfilling when partly returning to work.',
    )


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message139]] = None
    content: Optional[Content27] = None


class Message140(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message140]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdPutRequest(
    BaseModel
):
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day that the `incapacityPercentage` is active.<br/>\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )
    typeOfWorkResumption: Optional[TypeOfWorkResumption] = Field(
        None,
        description='The type of work the work the employee is fulfilling when partly returning to work.',
    )


class Message141(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content28(BaseModel):
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day that the `incapacityPercentage` is active.<br/>\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )
    typeOfWorkResumption: Optional[TypeOfWorkResumption] = Field(
        None,
        description='The type of work the work the employee is fulfilling when partly returning to work.',
    )


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message141]] = None
    content: Optional[Content28] = None


class Message142(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message142]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceprogressAbsenceProgressIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message142]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message142]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message142]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message146(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AccidentType(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the accident type. Possible values can be aquired via the metadata endpoint.',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the accident type.',
        examples=['work related accident'],
    )


class ActionToBeTakenByOccupationalHealthAndSafetyService(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the desired action to be taken by the occupational health and safety service. Possible values can be aquired via the metadata endpoint.',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the desired action to be taken by the occupational health and safety service.',
        examples=['Spoedcontrole aan huis'],
    )


class CaseManager(BaseModel):
    function: Optional[constr(max_length=50)] = Field(
        None, description='Function of the case manager.', examples=['Ben Hur']
    )
    name: Optional[constr(max_length=25)] = Field(
        None,
        description='Name of the case manager for reintegration.',
        examples=['Ben Hur'],
    )
    organization: Optional[constr(max_length=70)] = Field(
        None, description='Function of the case manager.', examples=['Ben Hur']
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class CauseOfAbsence(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the cause of the absence. Possible values can be acquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the cause of the absence.',
        examples=['maternity leave'],
    )


class Country13(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication11(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class LocationType(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the location type. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of location type', examples=['Hospital']
    )


class ContactInformation7(BaseModel):
    city: constr(max_length=24) = Field(
        ..., description='City of the address', examples=['Leiden']
    )
    country: Country13
    endDate: Optional[date_aliased] = Field(
        None, description='end date of the contact information'
    )
    furtherIndication: Optional[FurtherIndication11] = None
    houseNumber: int = Field(
        ..., description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    locationType: Optional[LocationType] = Field(
        None, description='soort verpleegadres'
    )
    name: Optional[constr(min_length=1, max_length=70)] = Field(
        None,
        description='name of the institute for the contact information.',
        examples=['RadboudUMC Nijmegen'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number to contact the employee on.',
        examples=['+31 13-1234567'],
    )
    postalCode: constr(max_length=9) = Field(
        ..., description='The postal code of the address', examples=['1234 AA']
    )
    startDate: date_aliased = Field(
        ...,
        description='start date of the contact information',
        examples=['2018-01-21'],
    )
    street: constr(max_length=24) = Field(
        ..., description='Streetname of the address', examples=['Voordijk']
    )


class ExpectedDuration(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the expected duration of the absence. Possible values can be acquired via the metadata endpoint.',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the expected duration of the absence.',
        examples=['Minder dan 1 week'],
    )


class Reason(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the reason why the absence is ended. Possible values can be aquired via the metadata endpoint.',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the reason why the absence ended.',
        examples=['Fully recoverd'],
    )


class EndOfAbsence(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The last day of the absence.\n'
    )
    reason: Optional[Reason] = Field(None, description='redenhersteld')


class Progress(BaseModel):
    currentIncapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    endOfAbsence: Optional[EndOfAbsence] = Field(
        None, description='date and reason for the closing/end of the absence'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )


class ReintegrationGoal(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the reintegration goal. Related to the Wet Verbetering Poortwachter.',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The name of the country',
        examples=['Werkhervatting in de eigen functie'],
    )


class Reintegration(BaseModel):
    dateOfFinalizingPlanOfAction: Optional[date_aliased] = Field(
        None,
        description='The day on which a plan of action (for return to normal work) was finalized.\n',
    )
    reintegrationGoal: Optional[ReintegrationGoal] = None


class Content29(BaseModel):
    accidentType: Optional[AccidentType] = Field(
        None,
        description='The type of accident that led to the absence. This field will be NULL if the absence is not related to an accident.',
    )
    actionToBeTakenByOccupationalHealthAndSafetyService: Optional[
        ActionToBeTakenByOccupationalHealthAndSafetyService
    ] = Field(
        None,
        description='The desired action to be taken regarding the absence by the occupational health and safety service (arbodienst).\n',
    )
    caseManager: Optional[CaseManager] = None
    causeOfAbsence: Optional[CauseOfAbsence] = Field(
        None,
        description='The cause of the absence. This endpoint is intended for the registration of two types of absence:\n\n  1) Illness/sickness\n\n  2) "Vangnet" such as maternity leave, organ donation or adoption leave\n\n\nOther absences such as Vacation days, unpayed leave and Personal leave are registerd using the leave endpoint\n',
    )
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    contactInformation: Optional[ContactInformation7] = None
    expectedDateOfChildbirth: Optional[date_aliased] = Field(
        None, description='Bevallingsdatum', examples=['2018-01-21']
    )
    expectedDuration: Optional[ExpectedDuration] = Field(
        None,
        description='The expected duration of the absence. If the expected duration is unknown, this field will be NULL.',
    )
    expectedEndDateOfMaternityLeave: Optional[date_aliased] = Field(
        None,
        description='verwachte datum einde zwangerschapsverlof',
        examples=['2018-04-21'],
    )
    hasMobilityIssue: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee has an issue limiting its mobility.',
        examples=[False],
    )
    hoursWorkedOnFirstDayOfAbsence: Optional[conint(ge=1, le=8)] = Field(
        None,
        description='The number of hours worked on the first day of the absence.',
        examples=[3],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDisruptedEmploymentRelationship: Optional[bool] = Field(
        None,
        description='Indicates whether the employement relationship between employee and employer is disrupted.',
        examples=[True],
    )
    isHospitalised: Optional[bool] = Field(
        None, description='Betreft het een ziekenhuisopnamen', examples=[False]
    )
    isRecoveredWithinTwoWeeks: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee is (expected) recoverd within two weeks, relating to a full recovery.',
        examples=[False],
    )
    isThirdPartyLiability: Optional[bool] = Field(
        None,
        description='This field is related to `accidentType`. \nWhen `accidentType` is specified, this field indicates whether a third party is liable for the accident.',
        examples=[False],
    )
    isWorkRelatedIllness: Optional[bool] = Field(
        None, description='Beroepsziekte', examples=[False]
    )
    progress: Optional[Progress] = None
    reintegration: Optional[Reintegration] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message146]] = None
    content: Optional[Content29] = None


class Message147(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message147]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ContactInformation8(BaseModel):
    city: constr(max_length=24) = Field(
        ..., description='City of the address', examples=['Leiden']
    )
    country: Country13
    endDate: Optional[date_aliased] = Field(
        None, description='end date of the contact information'
    )
    furtherIndication: Optional[FurtherIndication11] = None
    houseNumber: int = Field(
        ..., description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    locationType: Optional[LocationType] = Field(
        None, description='soort verpleegadres'
    )
    name: Optional[constr(min_length=1, max_length=70)] = Field(
        None,
        description='name of the institute for the contact information.',
        examples=['RadboudUMC Nijmegen'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number to contact the employee on.',
        examples=['+31 13-1234567'],
    )
    postalCode: constr(max_length=9) = Field(
        ..., description='The postal code of the address', examples=['1234 AA']
    )
    startDate: date_aliased = Field(
        ...,
        description='start date of the contact information',
        examples=['2018-01-21'],
    )
    street: constr(max_length=24) = Field(
        ..., description='Streetname of the address', examples=['Voordijk']
    )


class EndOfAbsence1(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The last day of the absence.\n'
    )
    reason: Optional[Reason] = Field(None, description='redenhersteld')


class Progress1(BaseModel):
    currentIncapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    endOfAbsence: Optional[EndOfAbsence1] = Field(
        None, description='date and reason for the closing/end of the absence'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )


class Reintegration1(BaseModel):
    dateOfFinalizingPlanOfAction: Optional[date_aliased] = Field(
        None,
        description='The day on which a plan of action (for return to normal work) was finalized.\n',
    )
    reintegrationGoal: Optional[ReintegrationGoal] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdPutRequest(BaseModel):
    accidentType: Optional[AccidentType] = Field(
        None,
        description='The type of accident that led to the absence. This field will be NULL if the absence is not related to an accident.',
    )
    actionToBeTakenByOccupationalHealthAndSafetyService: Optional[
        ActionToBeTakenByOccupationalHealthAndSafetyService
    ] = Field(
        None,
        description='The desired action to be taken regarding the absence by the occupational health and safety service (arbodienst).\n',
    )
    caseManager: Optional[CaseManager] = None
    causeOfAbsence: Optional[CauseOfAbsence] = Field(
        None,
        description='The cause of the absence. This endpoint is intended for the registration of two types of absence:\n\n  1) Illness/sickness\n\n  2) "Vangnet" such as maternity leave, organ donation or adoption leave\n\n\nOther absences such as Vacation days, unpayed leave and Personal leave are registerd using the leave endpoint\n',
    )
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    contactInformation: Optional[ContactInformation8] = None
    expectedDateOfChildbirth: Optional[date_aliased] = Field(
        None, description='Bevallingsdatum', examples=['2018-01-21']
    )
    expectedDuration: Optional[ExpectedDuration] = Field(
        None,
        description='The expected duration of the absence. If the expected duration is unknown, this field will be NULL.',
    )
    expectedEndDateOfMaternityLeave: Optional[date_aliased] = Field(
        None,
        description='verwachte datum einde zwangerschapsverlof',
        examples=['2018-04-21'],
    )
    hasMobilityIssue: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee has an issue limiting its mobility.',
        examples=[False],
    )
    hoursWorkedOnFirstDayOfAbsence: Optional[conint(ge=1, le=8)] = Field(
        None,
        description='The number of hours worked on the first day of the absence.',
        examples=[3],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDisruptedEmploymentRelationship: Optional[bool] = Field(
        None,
        description='Indicates whether the employement relationship between employee and employer is disrupted.',
        examples=[True],
    )
    isHospitalised: Optional[bool] = Field(
        None, description='Betreft het een ziekenhuisopnamen', examples=[False]
    )
    isRecoveredWithinTwoWeeks: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee is (expected) recoverd within two weeks, relating to a full recovery.',
        examples=[False],
    )
    isThirdPartyLiability: Optional[bool] = Field(
        None,
        description='This field is related to `accidentType`. \nWhen `accidentType` is specified, this field indicates whether a third party is liable for the accident.',
        examples=[False],
    )
    isWorkRelatedIllness: Optional[bool] = Field(
        None, description='Beroepsziekte', examples=[False]
    )
    progress: Optional[Progress1] = None
    reintegration: Optional[Reintegration1] = None


class Message148(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ContactInformation9(BaseModel):
    city: constr(max_length=24) = Field(
        ..., description='City of the address', examples=['Leiden']
    )
    country: Country13
    endDate: Optional[date_aliased] = Field(
        None, description='end date of the contact information'
    )
    furtherIndication: Optional[FurtherIndication11] = None
    houseNumber: int = Field(
        ..., description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    locationType: Optional[LocationType] = Field(
        None, description='soort verpleegadres'
    )
    name: Optional[constr(min_length=1, max_length=70)] = Field(
        None,
        description='name of the institute for the contact information.',
        examples=['RadboudUMC Nijmegen'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number to contact the employee on.',
        examples=['+31 13-1234567'],
    )
    postalCode: constr(max_length=9) = Field(
        ..., description='The postal code of the address', examples=['1234 AA']
    )
    startDate: date_aliased = Field(
        ...,
        description='start date of the contact information',
        examples=['2018-01-21'],
    )
    street: constr(max_length=24) = Field(
        ..., description='Streetname of the address', examples=['Voordijk']
    )


class EndOfAbsence2(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The last day of the absence.\n'
    )
    reason: Optional[Reason] = Field(None, description='redenhersteld')


class Progress2(BaseModel):
    currentIncapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    endOfAbsence: Optional[EndOfAbsence2] = Field(
        None, description='date and reason for the closing/end of the absence'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )


class Reintegration2(BaseModel):
    dateOfFinalizingPlanOfAction: Optional[date_aliased] = Field(
        None,
        description='The day on which a plan of action (for return to normal work) was finalized.\n',
    )
    reintegrationGoal: Optional[ReintegrationGoal] = None


class Content30(BaseModel):
    accidentType: Optional[AccidentType] = Field(
        None,
        description='The type of accident that led to the absence. This field will be NULL if the absence is not related to an accident.',
    )
    actionToBeTakenByOccupationalHealthAndSafetyService: Optional[
        ActionToBeTakenByOccupationalHealthAndSafetyService
    ] = Field(
        None,
        description='The desired action to be taken regarding the absence by the occupational health and safety service (arbodienst).\n',
    )
    caseManager: Optional[CaseManager] = None
    causeOfAbsence: Optional[CauseOfAbsence] = Field(
        None,
        description='The cause of the absence. This endpoint is intended for the registration of two types of absence:\n\n  1) Illness/sickness\n\n  2) "Vangnet" such as maternity leave, organ donation or adoption leave\n\n\nOther absences such as Vacation days, unpayed leave and Personal leave are registerd using the leave endpoint\n',
    )
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    contactInformation: Optional[ContactInformation9] = None
    expectedDateOfChildbirth: Optional[date_aliased] = Field(
        None, description='Bevallingsdatum', examples=['2018-01-21']
    )
    expectedDuration: Optional[ExpectedDuration] = Field(
        None,
        description='The expected duration of the absence. If the expected duration is unknown, this field will be NULL.',
    )
    expectedEndDateOfMaternityLeave: Optional[date_aliased] = Field(
        None,
        description='verwachte datum einde zwangerschapsverlof',
        examples=['2018-04-21'],
    )
    hasMobilityIssue: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee has an issue limiting its mobility.',
        examples=[False],
    )
    hoursWorkedOnFirstDayOfAbsence: Optional[conint(ge=1, le=8)] = Field(
        None,
        description='The number of hours worked on the first day of the absence.',
        examples=[3],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDisruptedEmploymentRelationship: Optional[bool] = Field(
        None,
        description='Indicates whether the employement relationship between employee and employer is disrupted.',
        examples=[True],
    )
    isHospitalised: Optional[bool] = Field(
        None, description='Betreft het een ziekenhuisopnamen', examples=[False]
    )
    isRecoveredWithinTwoWeeks: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee is (expected) recoverd within two weeks, relating to a full recovery.',
        examples=[False],
    )
    isThirdPartyLiability: Optional[bool] = Field(
        None,
        description='This field is related to `accidentType`. \nWhen `accidentType` is specified, this field indicates whether a third party is liable for the accident.',
        examples=[False],
    )
    isWorkRelatedIllness: Optional[bool] = Field(
        None, description='Beroepsziekte', examples=[False]
    )
    progress: Optional[Progress2] = None
    reintegration: Optional[Reintegration2] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message148]] = None
    content: Optional[Content30] = None


class Message149(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message149]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message149]] = None
    version: Optional[Version] = None


class Message151(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem14(BaseModel):
    contactDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the contact was initiated.',
        examples=['2018-01-01'],
    )
    contactMethod: Optional[ContactMethod] = Field(
        None, description='The method of contacting the person\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    summary: Optional[constr(min_length=1, max_length=4000)] = Field(
        None, description='Summary of the contact.\n'
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsencecontactHistoryGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message151]] = None
    field_embedded: Optional[List[FieldEmbeddedItem14]] = Field(None, alias='_embedded')


class Message152(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsencecontactHistoryGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message152]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsencecontactHistoryGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsencecontactHistoryGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsencecontactHistoryPostRequest(
    BaseModel
):
    contactDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the contact was initiated.',
        examples=['2018-01-01'],
    )
    contactMethod: Optional[ContactMethod] = Field(
        None, description='The method of contacting the person\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    summary: Optional[constr(min_length=1, max_length=4000)] = Field(
        None, description='Summary of the contact.\n'
    )


class Message153(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content31(BaseModel):
    contactDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the contact was initiated.',
        examples=['2018-01-01'],
    )
    contactMethod: Optional[ContactMethod] = Field(
        None, description='The method of contacting the person\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    summary: Optional[constr(min_length=1, max_length=4000)] = Field(
        None, description='Summary of the contact.\n'
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsencecontactHistoryPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message153]] = None
    content: Optional[Content31] = None


class Message154(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsencecontactHistoryPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message154]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsencecontactHistoryPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsencecontactHistoryPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message155(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem15(BaseModel):
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day that the `incapacityPercentage` is active.<br/>\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )
    typeOfWorkResumption: Optional[TypeOfWorkResumption] = Field(
        None,
        description='The type of work the work the employee is fulfilling when partly returning to work.',
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsenceprogressGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message155]] = None
    field_embedded: Optional[List[FieldEmbeddedItem15]] = Field(None, alias='_embedded')


class Message156(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsenceprogressGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message156]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsenceprogressGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsenceprogressGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsenceprogressPostRequest(BaseModel):
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day that the `incapacityPercentage` is active.<br/>\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )
    typeOfWorkResumption: Optional[TypeOfWorkResumption] = Field(
        None,
        description='The type of work the work the employee is fulfilling when partly returning to work.',
    )


class Message157(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content32(BaseModel):
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day that the `incapacityPercentage` is active.<br/>\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )
    typeOfWorkResumption: Optional[TypeOfWorkResumption] = Field(
        None,
        description='The type of work the work the employee is fulfilling when partly returning to work.',
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsenceprogressPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message157]] = None
    content: Optional[Content32] = None


class Message158(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsenceprogressPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message158]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsenceprogressPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdAbsenceprogressPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class EndOfAbsence3(BaseModel):
    date: Optional[date_aliased] = Field(
        None,
        description='The last day of the absence. Could also be the last day of employment if employment was to be ended.\n',
    )
    reason: Optional[Reason] = Field(None, description='redenhersteld')


class ProvidersEmployersEmployeesAbsencesAbsenceIdCloseabsencePatchRequest(BaseModel):
    endOfAbsence: Optional[EndOfAbsence3] = Field(
        None, description='date and reason for the closing/end of the absence'
    )


class Message159(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdCloseabsencePatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message159]] = None
    content: Optional[Dict[str, Any]] = None


class Message160(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdCloseabsencePatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message160]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdCloseabsencePatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdCloseabsencePatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdReopenabsencePatchRequest(BaseModel):
    pass


class Message161(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdReopenabsencePatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message161]] = None
    content: Optional[Dict[str, Any]] = None


class Message162(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdReopenabsencePatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message162]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesAbsencesAbsenceIdReopenabsencePatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesAbsencesAbsenceIdReopenabsencePatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesChildrenChildIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message162]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesChildrenChildIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message162]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesChildrenChildIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesChildrenChildIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message165(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ResidenceStatus(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the residence status', examples=[2]
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Is the child living with his parent',
        examples=['Living at home'],
    )


class Content33(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    residenceStatus: Optional[ResidenceStatus] = Field(
        None,
        description='Indicator to tell if the child is living at home or not. Use null if unknown.\n',
    )


class ProvidersEmployersEmployeesChildrenChildIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message165]] = None
    content: Optional[Content33] = None


class Message166(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesChildrenChildIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message166]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesChildrenChildIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesChildrenChildIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesChildrenChildIdPutRequest(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    residenceStatus: Optional[ResidenceStatus] = Field(
        None,
        description='Indicator to tell if the child is living at home or not. Use null if unknown.\n',
    )


class Message167(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content34(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    residenceStatus: Optional[ResidenceStatus] = Field(
        None,
        description='Indicator to tell if the child is living at home or not. Use null if unknown.\n',
    )


class ProvidersEmployersEmployeesChildrenChildIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message167]] = None
    content: Optional[Content34] = None


class Message168(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesChildrenChildIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message168]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesChildrenChildIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesChildrenChildIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesChildrenChildIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message168]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesContactsContactIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message168]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesContactsContactIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message168]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesContactsContactIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesContactsContactIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message172(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Address8(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country13] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox.  For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Content35(BaseModel):
    address: Optional[Address8] = None
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='Describes the relationship of the contact to the employee',
        examples=['Moeder'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the contact', examples=['Johanna Bakker']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the contact',
        examples=['Genoemd adres is een priveadres'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None, description='The phone number of the contact', examples=['013-12345678']
    )


class ProvidersEmployersEmployeesContactsContactIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message172]] = None
    content: Optional[Content35] = None


class Message173(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesContactsContactIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message173]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesContactsContactIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesContactsContactIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Address9(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country13] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox.  For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ProvidersEmployersEmployeesContactsContactIdPutRequest(BaseModel):
    address: Optional[Address9] = None
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='Describes the relationship of the contact to the employee',
        examples=['Moeder'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the contact', examples=['Johanna Bakker']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the contact',
        examples=['Genoemd adres is een priveadres'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None, description='The phone number of the contact', examples=['013-12345678']
    )


class Message174(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Address10(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country13] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox.  For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Content36(BaseModel):
    address: Optional[Address10] = None
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='Describes the relationship of the contact to the employee',
        examples=['Moeder'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the contact', examples=['Johanna Bakker']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the contact',
        examples=['Genoemd adres is een priveadres'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None, description='The phone number of the contact', examples=['013-12345678']
    )


class ProvidersEmployersEmployeesContactsContactIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message174]] = None
    content: Optional[Content36] = None


class Message175(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesContactsContactIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message175]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesContactsContactIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesContactsContactIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesContactsContactIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message175]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message175]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message175]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message179(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CustomField(BaseModel):
    description: Optional[constr(max_length=50)] = Field(None, examples=['Shoe size'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of the custom field as defined at the employer level',
        examples=['025ce09b-bff2-4b05-bcf0-711a89da7c08'],
    )


class FieldEmbeddedItem16(BaseModel):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employee',
        examples=['41'],
    )


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message179]] = None
    field_embedded: Optional[List[FieldEmbeddedItem16]] = Field(None, alias='_embedded')


class Message180(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message180]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdPutRequest(BaseModel):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employee',
        examples=['41'],
    )


class Message181(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content37(BaseModel):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employee',
        examples=['41'],
    )


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message181]] = None
    content: Optional[Content37] = None


class Message182(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message182]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesCustomfieldsEmployeeCustomFieldIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message182]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message182]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message182]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message186(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class EducationLevel(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=80)] = Field(None, examples=['HBO'])


class FurtherIndication14(BaseModel):
    code: Optional[str] = Field(None, examples=['WO'])
    description: Optional[str] = Field(None, examples=['Wetenschappelijk'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class HasDiploma(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=80)] = Field(None, examples=['Onbekend'])


class Institute(BaseModel):
    Name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the institute', examples=['Avans Hogeschool']
    )
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the institute', examples=['Leiden']
    )


class TypeOfEducation(BaseModel):
    code: Optional[str] = Field(None, examples=['WO'])
    description: Optional[str] = Field(None, examples=['Wetenschappelijk'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Content38(BaseModel):
    educationLevel: Optional[EducationLevel] = Field(
        None, description='Indicates the level of the education.'
    )
    employeeCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employee\n',
        examples=[150],
    )
    employerCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employer\n',
        examples=[850],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    endOfValidityDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the diploma validity . The date is up to and including.',
        examples=['2023-12-31'],
    )
    furtherIndication: Optional[FurtherIndication14] = None
    hasDiploma: Optional[HasDiploma] = Field(
        None, description='Indicates whether the employee has graduated.'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    institute: Optional[Institute] = None
    name: Optional[constr(max_length=50)] = Field(
        None, description='Name of the education', examples=['HBO accountancy']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the education',
        examples=['Van de opleiding is alleen een certificaat verkregen'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this education starts.',
        examples=['2018-01-01'],
    )
    typeOfEducation: Optional[TypeOfEducation] = Field(
        None,
        description='The type of the education. `type of education` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    yearOfDiploma: Optional[conint(ge=1900, le=2099)] = Field(
        None, description='Year in which the diploma was aquired', examples=[1995]
    )


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message186]] = None
    content: Optional[Content38] = None


class Message187(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message187]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdPutRequest(BaseModel):
    educationLevel: Optional[EducationLevel] = Field(
        None, description='Indicates the level of the education.'
    )
    employeeCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employee\n',
        examples=[150],
    )
    employerCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employer\n',
        examples=[850],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    endOfValidityDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the diploma validity . The date is up to and including.',
        examples=['2023-12-31'],
    )
    furtherIndication: Optional[FurtherIndication14] = None
    hasDiploma: Optional[HasDiploma] = Field(
        None, description='Indicates whether the employee has graduated.'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    institute: Optional[Institute] = None
    name: Optional[constr(max_length=50)] = Field(
        None, description='Name of the education', examples=['HBO accountancy']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the education',
        examples=['Van de opleiding is alleen een certificaat verkregen'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this education starts.',
        examples=['2018-01-01'],
    )
    typeOfEducation: Optional[TypeOfEducation] = Field(
        None,
        description='The type of the education. `type of education` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    yearOfDiploma: Optional[conint(ge=1900, le=2099)] = Field(
        None, description='Year in which the diploma was aquired', examples=[1995]
    )


class Message188(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content39(BaseModel):
    educationLevel: Optional[EducationLevel] = Field(
        None, description='Indicates the level of the education.'
    )
    employeeCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employee\n',
        examples=[150],
    )
    employerCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employer\n',
        examples=[850],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    endOfValidityDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the diploma validity . The date is up to and including.',
        examples=['2023-12-31'],
    )
    furtherIndication: Optional[FurtherIndication14] = None
    hasDiploma: Optional[HasDiploma] = Field(
        None, description='Indicates whether the employee has graduated.'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    institute: Optional[Institute] = None
    name: Optional[constr(max_length=50)] = Field(
        None, description='Name of the education', examples=['HBO accountancy']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the education',
        examples=['Van de opleiding is alleen een certificaat verkregen'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this education starts.',
        examples=['2018-01-01'],
    )
    typeOfEducation: Optional[TypeOfEducation] = Field(
        None,
        description='The type of the education. `type of education` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    yearOfDiploma: Optional[conint(ge=1900, le=2099)] = Field(
        None, description='Year in which the diploma was aquired', examples=[1995]
    )


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message188]] = None
    content: Optional[Content39] = None


class Message189(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message189]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEducationsEmployeeEducationIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message189]] = None
    version: Optional[Version] = None


class Action2(Enum):
    accept = 'accept'
    reject = 'reject'


class ProvidersEmployersEmployeesEmploymentsWageProposalsPatchRequestItem(BaseModel):
    action: Action2 = Field(
        ...,
        description='The action to perform on the wage proposal resulting in a change of `status`\nThe following transitions are allowed\n1. Voorgesteld --> Accept or reject\n2. Goedgekeurd ---> No changes possible\n3. Afgekeurd ---> No changes possible\n5. Niet verwerkbaar ---> No changes possible',
    )
    id: UUID = Field(
        ...,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployeesEmploymentsWageProposalsPatchRequest(
    RootModel[List[ProvidersEmployersEmployeesEmploymentsWageProposalsPatchRequestItem]]
):
    root: List[ProvidersEmployersEmployeesEmploymentsWageProposalsPatchRequestItem]


class Message191(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsWageProposalsPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message191]] = None
    content: Optional[Dict[str, Any]] = None


class Message192(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsWageProposalsPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message192]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWageProposalsPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsWageProposalsPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message192]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message192]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message195(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Deviations(BaseModel):
    employmentContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating employment contribution percentage. This value will overrule the value of the selected `fund`. Indicates percentage wise how much the employment has to contribute to the payment of the "fund" contribution.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[11],
    )
    totalContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating total contribution percentage. This value will overrule the value of the selected `fund`. The difference between `employmentContributionPercentage` and `totalContributionPercentage` will be paid by the employer.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[12.007],
    )


class FixedContribution(BaseModel):
    employmentContribution: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The employment contribution (in money) that the employee will pay instead of what the calculation of the `fund` indicates.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different range, from 0.00 up to 9999.99',
        examples=[1789],
    )
    totalContribution: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The total contribution (in money) that the employer and employee pay instead of what the calculation of the `fund` indicates.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different range, from 0 up to 9999.99',
        examples=[2569],
    )


class Fund(BaseModel):
    description: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The description of the fund\n',
        examples=['Ouderdomspensioen'],
    )
    key: Optional[int] = Field(None, description='The key for the fund\n', examples=[1])


class FieldEmbeddedItem17(BaseModel):
    deviations: Optional[Deviations] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message195]] = None
    field_embedded: Optional[List[FieldEmbeddedItem17]] = Field(None, alias='_embedded')


class Message196(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message196]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Deviations1(BaseModel):
    employmentContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating employment contribution percentage. This value will overrule the value of the selected `fund`. Indicates percentage wise how much the employment has to contribute to the payment of the "fund" contribution.',
        examples=[11],
    )
    totalContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating total contribution percentage. This value will overrule the value of the selected `fund`. The difference between `employmentContributionPercentage` and `totalContributionPercentage` will be paid by the employer.',
        examples=[12.007],
    )


class FixedContribution1(BaseModel):
    employmentContribution: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The employment contribution (in money) that the employee will pay instead of what the calculation of the `fund` indicates.',
        examples=[1789],
    )
    totalContribution: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The total contribution (in money) that the employer and employee pay instead of what the calculation of the `fund` indicates.',
        examples=[2569],
    )


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdPutRequest(BaseModel):
    deviations: Optional[Deviations1] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution1] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class Message197(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Deviations2(BaseModel):
    employmentContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating employment contribution percentage. This value will overrule the value of the selected `fund`. Indicates percentage wise how much the employment has to contribute to the payment of the "fund" contribution.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[11],
    )
    totalContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating total contribution percentage. This value will overrule the value of the selected `fund`. The difference between `employmentContributionPercentage` and `totalContributionPercentage` will be paid by the employer.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[12.007],
    )


class FixedContribution2(BaseModel):
    employmentContribution: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The employment contribution (in money) that the employee will pay instead of what the calculation of the `fund` indicates.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different range, from 0.00 up to 9999.99',
        examples=[1789],
    )
    totalContribution: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The total contribution (in money) that the employer and employee pay instead of what the calculation of the `fund` indicates.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different range, from 0 up to 9999.99',
        examples=[2569],
    )


class Content40(BaseModel):
    deviations: Optional[Deviations2] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution2] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message197]] = None
    content: Optional[Content40] = None


class Message198(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message198]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsAbpfundsAbpFundIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message198]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message198]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message198]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message202(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Beneficiary(BaseModel):
    city: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    name: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of the beneficiary\n', examples=['Ben Hur']
    )


class Type(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Preferente schuldeiser']
    )


class Creditor(BaseModel):
    priority: Optional[conint(ge=0)] = Field(
        None,
        description='The priority of a creditor within the type of creditors. 0 is the highest priority followed by 1 etc. Priority dictates the order in which creditor receives their payment.  The amount of earnings that can be used for payments can be limited (see attachment-exempt threshold).  The system will then divide the available earnings starting with the creditor with the highest priority.  If all available earnings are spend all other attachments will not receive payment until the time that earnings are available to meet them.',
        examples=[0],
    )
    type: Optional[Type] = Field(
        None,
        description='The type of creditor. A preferent creditor has priority over non-preferent creditors.',
    )


class Paid(BaseModel):
    inApprovedPayrollRuns: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The total amount registerd in payroll run(s) with the status "approved".',
        examples=[50],
    )
    inOpenPayrollRun: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The total amount registerd in payroll run(s) with the status "open". \n\nNote that open payroll runs are not final until they get approved, changes are posible until then.',
        examples=[0],
    )


class TotalAmount(BaseModel):
    owed: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The total amount to be paid to the creditor', examples=[320]
    )
    paid: Optional[Paid] = None


class Content41(BaseModel):
    beneficiary: Optional[Beneficiary] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    creditor: Optional[Creditor] = Field(
        None, description='Information regarding the creditor'
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    descriptionPayslip: Optional[constr(min_length=1, max_length=14)] = Field(
        None,
        description='This value is shown on the payslip to identify the attachment.\n',
        examples=['payment to creditor x'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    fixedPaymentPerPayrollPeriod: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None,
        description='Set a fixed sum to be payed every payroll period.\n\n__Note:__ If left empty the "available" earnings will be calculated in the payroll run by subtracting the protected earnings threshold (beslagvrijevoet) from the netwage. This method can lead to variable payments per payroll period.',
        examples=[50],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )
    totalAmount: Optional[TotalAmount] = None


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message202]] = None
    content: Optional[Content41] = None


class Message203(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message203]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Creditor1(BaseModel):
    priority: Optional[conint(ge=0)] = Field(
        None,
        description='The priority of a creditor within the type of creditors. 0 is the highest priority followed by 1 etc. Priority dictates the order in which creditor receives their payment.  The amount of earnings that can be used for payments can be limited (see attachment-exempt threshold).  The system will then divide the available earnings starting with the creditor with the highest priority.  If all available earnings are spend all other attachments will not receive payment until the time that earnings are available to meet them.',
        examples=[0],
    )
    type: Optional[Type] = Field(
        None,
        description='The type of creditor. A preferent creditor has priority over non-preferent creditors.',
    )


class TotalAmount1(BaseModel):
    owed: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The total amount to be paid to the creditor', examples=[320]
    )
    paid: Optional[Paid] = None


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdPutRequest(
    BaseModel
):
    beneficiary: Optional[Beneficiary] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    creditor: Optional[Creditor1] = Field(
        None, description='Information regarding the creditor'
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    descriptionPayslip: Optional[constr(min_length=1, max_length=14)] = Field(
        None,
        description='This value is shown on the payslip to identify the attachment.\n',
        examples=['payment to creditor x'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    fixedPaymentPerPayrollPeriod: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None,
        description='Set a fixed sum to be payed every payroll period.\n\n__Note:__ If left empty the "available" earnings will be calculated in the payroll run by subtracting the protected earnings threshold (beslagvrijevoet) from the netwage. This method can lead to variable payments per payroll period.',
        examples=[50],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )
    totalAmount: Optional[TotalAmount1] = None


class Message204(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Creditor2(BaseModel):
    priority: Optional[conint(ge=0)] = Field(
        None,
        description='The priority of a creditor within the type of creditors. 0 is the highest priority followed by 1 etc. Priority dictates the order in which creditor receives their payment.  The amount of earnings that can be used for payments can be limited (see attachment-exempt threshold).  The system will then divide the available earnings starting with the creditor with the highest priority.  If all available earnings are spend all other attachments will not receive payment until the time that earnings are available to meet them.',
        examples=[0],
    )
    type: Optional[Type] = Field(
        None,
        description='The type of creditor. A preferent creditor has priority over non-preferent creditors.',
    )


class TotalAmount2(BaseModel):
    owed: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The total amount to be paid to the creditor', examples=[320]
    )
    paid: Optional[Paid] = None


class Content42(BaseModel):
    beneficiary: Optional[Beneficiary] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    creditor: Optional[Creditor2] = Field(
        None, description='Information regarding the creditor'
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    descriptionPayslip: Optional[constr(min_length=1, max_length=14)] = Field(
        None,
        description='This value is shown on the payslip to identify the attachment.\n',
        examples=['payment to creditor x'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    fixedPaymentPerPayrollPeriod: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None,
        description='Set a fixed sum to be payed every payroll period.\n\n__Note:__ If left empty the "available" earnings will be calculated in the payroll run by subtracting the protected earnings threshold (beslagvrijevoet) from the netwage. This method can lead to variable payments per payroll period.',
        examples=[50],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )
    totalAmount: Optional[TotalAmount2] = None


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message204]] = None
    content: Optional[Content42] = None


class Message205(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message205]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsAttachmentsofearningsAttachmentOfEarningsIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message205]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message205]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message205]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message209(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AgeBasedMaximum(BaseModel):
    key: Optional[int] = Field(
        None, description='The number for the ageBasedMaximum\n', examples=[2]
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the ageBasedMaximum\n',
        examples=['Toepassen hoogste leeftijd'],
    )


class AgeBasedMinimum(BaseModel):
    key: Optional[int] = Field(
        None, description='The number for the ageBasedMinimum\n', examples=[2]
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the ageBasedMinimum\n',
        examples=['Toepassen hoogste leeftijd'],
    )


class Deviations3(BaseModel):
    financialReservationPercentage: Optional[confloat(ge=0.0, le=999.999999)] = Field(
        None,
        description='deviation from the financial reservation percentage',
        examples=[10.000007],
    )
    percentage: Optional[confloat(ge=0.0, le=999.999999)] = Field(
        None, description='Deviation from the percentage', examples=[8]
    )
    reservationPercentage: Optional[confloat(ge=0.0, le=999.999999)] = Field(
        None,
        description='deviation from the reservation percentage',
        examples=[12.0007],
    )


class Base(BaseModel):
    key: Optional[int] = Field(
        None, description='The number for the base\n', examples=[545]
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the base\n',
        examples=['VAKANTIE TOESLAG, periodieke opbouw'],
    )


class Content43(BaseModel):
    ageBasedMaximum: Optional[AgeBasedMaximum] = Field(
        None, description='This fields indicates how the age based maximum is applied\n'
    )
    ageBasedMinimum: Optional[AgeBasedMinimum] = Field(
        None, description='This fields indicates how the age based minimum is applied\n'
    )
    deviations: Optional[Deviations3] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `base`. \nSet `deviations` to null if no deviations apply.\n\nDeviating is done on either all the fields or none.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base is maintained within this resource.\nSo multiple bases can be active at the same time but one specific base can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    base: Optional[Base] = Field(
        None,
        description='`base` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message209]] = None
    content: Optional[Content43] = None


class Message210(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message210]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdPutRequest(
    BaseModel
):
    ageBasedMaximum: Optional[AgeBasedMaximum] = Field(
        None, description='This fields indicates how the age based maximum is applied\n'
    )
    ageBasedMinimum: Optional[AgeBasedMinimum] = Field(
        None, description='This fields indicates how the age based minimum is applied\n'
    )
    deviations: Optional[Deviations3] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `base`. \nSet `deviations` to null if no deviations apply.\n\nDeviating is done on either all the fields or none.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base is maintained within this resource.\nSo multiple bases can be active at the same time but one specific base can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class Message211(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content44(BaseModel):
    ageBasedMaximum: Optional[AgeBasedMaximum] = Field(
        None, description='This fields indicates how the age based maximum is applied\n'
    )
    ageBasedMinimum: Optional[AgeBasedMinimum] = Field(
        None, description='This fields indicates how the age based minimum is applied\n'
    )
    deviations: Optional[Deviations3] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `base`. \nSet `deviations` to null if no deviations apply.\n\nDeviating is done on either all the fields or none.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base is maintained within this resource.\nSo multiple bases can be active at the same time but one specific base can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    base: Optional[Base] = Field(
        None,
        description='`base` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message211]] = None
    content: Optional[Content44] = None


class Message212(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message212]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsBasesforcalculationBaseforcalculationIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message212]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message212]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message212]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message216(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Origin(BaseModel):
    key: Optional[int] = Field(
        None, description='The number for the origin\n', examples=[1]
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the origin\n',
        examples=['Normale wijziging'],
    )


class PayrollComponent(BaseModel):
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['JAAR GRSL3'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component.                      \n',
        examples=[545],
    )


class Content45(BaseModel):
    base: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The base (amount of money) to be used in the fund calculation\n',
        examples=[25000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    origin: Optional[Origin] = Field(
        None,
        description='Indicates the method by which the record was created/changed, its origin. The origin influences certain business processes. For example if a record exists with origin manually entered (Normale wijziging) the process that calculates the base automatically will not do so as a manually entered value allready exists.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base for calculation starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base for calculation is maintained within this resource. So multiple bases can be active at the same time for different payrollcomponents',
        examples=['2018-01-01'],
    )
    payrollComponent: Optional[PayrollComponent] = Field(
        None,
        description='A payroll component is the link to the salary calculation. In this case only specific payrollcomponents are available. The payroll components that are reserved for use as the base for fund calculations\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message216]] = None
    content: Optional[Content45] = None


class Message217(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message217]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdPutRequest(
    BaseModel
):
    base: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The base (amount of money) to be used in the fund calculation\n',
        examples=[25000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    origin: Optional[Origin] = Field(
        None,
        description='Indicates the method by which the record was created/changed, its origin. The origin influences certain business processes. For example if a record exists with origin manually entered (Normale wijziging) the process that calculates the base automatically will not do so as a manually entered value allready exists.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base for calculation starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base for calculation is maintained within this resource. So multiple bases can be active at the same time for different payrollcomponents',
        examples=['2018-01-01'],
    )


class Message218(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content46(BaseModel):
    base: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The base (amount of money) to be used in the fund calculation\n',
        examples=[25000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    origin: Optional[Origin] = Field(
        None,
        description='Indicates the method by which the record was created/changed, its origin. The origin influences certain business processes. For example if a record exists with origin manually entered (Normale wijziging) the process that calculates the base automatically will not do so as a manually entered value allready exists.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base for calculation starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base for calculation is maintained within this resource. So multiple bases can be active at the same time for different payrollcomponents',
        examples=['2018-01-01'],
    )
    payrollComponent: Optional[PayrollComponent] = Field(
        None,
        description='A payroll component is the link to the salary calculation. In this case only specific payrollcomponents are available. The payroll components that are reserved for use as the base for fund calculations\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message218]] = None
    content: Optional[Content46] = None


class Message219(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message219]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsBasesforemploymentfundcalculationBaseforemploymentfundcalculationIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message219]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message219]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message219]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message223(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Category(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Uren'])


class DeductionOrPayment(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Betaling'])


class PayrollComponent2(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. There are six viable categories for this resource: <br/> 7,  Bruto vergoeding volgens tabel<br/> 9,  Netto vergoeding<br/> 30, Bedrag per eenheid<br/> 12, Bruto inhouding<br/> 13, Netto inhouding<br/> 11, Fiscale bijtelling <br/> 17, Afdrachtvermindering<br/>\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None, description='The number for the payroll component.\n', examples=[1]
    )


class Content47(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent2] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] per payroll component is maintained within this resource.\n',
        examples=['1995-05-21'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.    <br/>\n',
        examples=[50.87],
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message223]] = None
    content: Optional[Content47] = None


class Message224(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message224]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollComponent3(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. There are six viable categories for this resource: <br/> 7,  Bruto vergoeding volgens tabel<br/> 9,  Netto vergoeding<br/> 30, Bedrag per eenheid<br/> 12, Bruto inhouding<br/> 13, Netto inhouding<br/> 11, Fiscale bijtelling <br/> 17, Afdrachtvermindering<br/>\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None, description='The number for the payroll component.\n', examples=[1]
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdPutRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent3] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] per payroll component is maintained within this resource.\n',
        examples=['1995-05-21'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.    <br/>\n',
        examples=[50.87],
    )


class Message225(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent4(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. There are six viable categories for this resource: <br/> 7,  Bruto vergoeding volgens tabel<br/> 9,  Netto vergoeding<br/> 30, Bedrag per eenheid<br/> 12, Bruto inhouding<br/> 13, Netto inhouding<br/> 11, Fiscale bijtelling <br/> 17, Afdrachtvermindering<br/>\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None, description='The number for the payroll component.\n', examples=[1]
    )


class Content48(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent4] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] per payroll component is maintained within this resource.\n',
        examples=['1995-05-21'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.    <br/>\n',
        examples=[50.87],
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message225]] = None
    content: Optional[Content48] = None


class Message226(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message226]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsAndDeductionsBenefitsanddeductionsIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message226]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message226]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message226]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message230(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class BenefitInKindType(BaseModel):
    description: Optional[str] = Field(None, examples=['Mobiele telefoon'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['36530F13-59EB-4C15-B5F2-4F92B070A208'],
    )


class FieldEmbeddedItem18(BaseModel):
    benefitInKindType: Optional[BenefitInKindType] = Field(
        None,
        description='The benefit in kind of the employment. `benefitinkind` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    brand: Optional[constr(max_length=30)] = Field(
        None, description='The brand of the benefit in kind.', examples=['Apple']
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the benefit in kind',
        examples=['geen bijzonderheden'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this BenefitInKind starts.\n\nSo multiple Benefits in kind can be active at the same time but one specific BenefitsInKind can never be active multiple times at the same time.\n',
        examples=['2018-01-01'],
    )
    supplier: Optional[constr(max_length=30)] = Field(
        None,
        description='The supplier of the benefit in kind.',
        examples=['Mediamarkt'],
    )
    type: Optional[constr(max_length=30)] = Field(
        None, description='The type of the benefit in kind.', examples=['Iphone 11']
    )
    value: Optional[confloat(ge=0.0)] = Field(
        None, description='The value for the selected benefit of kind.', examples=[1100]
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message230]] = None
    field_embedded: Optional[List[FieldEmbeddedItem18]] = Field(None, alias='_embedded')


class Message231(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message231]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdPutRequest(
    BaseModel
):
    benefitInKindType: Optional[BenefitInKindType] = Field(
        None,
        description='The benefit in kind of the employment. `benefitinkind` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    brand: Optional[constr(max_length=30)] = Field(
        None, description='The brand of the benefit in kind.', examples=['Apple']
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the benefit in kind',
        examples=['geen bijzonderheden'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this BenefitInKind starts.\n\nSo multiple Benefits in kind can be active at the same time but one specific BenefitsInKind can never be active multiple times at the same time.\n',
        examples=['2018-01-01'],
    )
    supplier: Optional[constr(max_length=30)] = Field(
        None,
        description='The supplier of the benefit in kind.',
        examples=['Mediamarkt'],
    )
    type: Optional[constr(max_length=30)] = Field(
        None, description='The type of the benefit in kind.', examples=['Iphone 11']
    )
    value: Optional[confloat(ge=0.0)] = Field(
        None, description='The value for the selected benefit of kind.', examples=[1100]
    )


class Message232(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content49(BaseModel):
    benefitInKindType: Optional[BenefitInKindType] = Field(
        None,
        description='The benefit in kind of the employment. `benefitinkind` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    brand: Optional[constr(max_length=30)] = Field(
        None, description='The brand of the benefit in kind.', examples=['Apple']
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the benefit in kind',
        examples=['geen bijzonderheden'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this BenefitInKind starts.\n\nSo multiple Benefits in kind can be active at the same time but one specific BenefitsInKind can never be active multiple times at the same time.\n',
        examples=['2018-01-01'],
    )
    supplier: Optional[constr(max_length=30)] = Field(
        None,
        description='The supplier of the benefit in kind.',
        examples=['Mediamarkt'],
    )
    type: Optional[constr(max_length=30)] = Field(
        None, description='The type of the benefit in kind.', examples=['Iphone 11']
    )
    value: Optional[confloat(ge=0.0)] = Field(
        None, description='The value for the selected benefit of kind.', examples=[1100]
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message232]] = None
    content: Optional[Content49] = None


class Message233(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message233]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsBenefitsinkindBenefitInKindIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message233]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message233]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message233]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message237(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Lease(BaseModel):
    contractNumber: Optional[str] = Field(
        None,
        description='Registration number of the lease contract.\n',
        examples=['2021.323.903'],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The start date of the entity.', examples=['2021-01-01']
    )


class LeaseOrBuy(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Koop'])


class Content50(BaseModel):
    brand: Optional[str] = Field(
        None, description='Brand of the vehicle.\n', examples=['Volvo']
    )
    catalogValue: Optional[confloat(le=999999.99)] = Field(
        None, description='The catalog value of the car.\n', examples=[20000]
    )
    comments: Optional[str] = Field(
        None,
        description='Any comments on the car or the contract.\n',
        examples=['This car is very nice'],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    fuelCardNumber: Optional[str] = Field(
        None,
        description='Registration number of the fuel card.\n',
        examples=['B100.323.903'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    kilometersPrivateUse: Optional[int] = Field(
        None,
        description='The number kilometers per year the employee can use the car for private purposes.\n',
        examples=[10000],
    )
    lease: Optional[Lease] = Field(None, description='Details of the leasecontract\n')
    leaseOrBuy: Optional[LeaseOrBuy] = Field(
        None, description='Indication of the ownership of the company car.\n'
    )
    licensePlateNumber: Optional[constr(min_length=1, max_length=8)] = Field(
        None,
        description='Vehicle registration number (license plate) of the  company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    model: Optional[str] = Field(
        None, description='Model of the vehicle.\n', examples=['V60']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The start date of the entity.', examples=['2021-01-01']
    )
    supplier: Optional[str] = Field(
        None,
        description='Name of the company the delivered the company car.\n',
        examples=['Leasemaatschappij Tilburg'],
    )


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message237]] = None
    content: Optional[Content50] = None


class Message238(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message238]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdPutRequest(
    BaseModel
):
    brand: Optional[str] = Field(
        None, description='Brand of the vehicle.\n', examples=['Volvo']
    )
    catalogValue: Optional[confloat(le=999999.99)] = Field(
        None, description='The catalog value of the car.\n', examples=[20000]
    )
    comments: Optional[str] = Field(
        None,
        description='Any comments on the car or the contract.\n',
        examples=['This car is very nice'],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    fuelCardNumber: Optional[str] = Field(
        None,
        description='Registration number of the fuel card.\n',
        examples=['B100.323.903'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    kilometersPrivateUse: Optional[int] = Field(
        None,
        description='The number kilometers per year the employee can use the car for private purposes.\n',
        examples=[10000],
    )
    lease: Optional[Lease] = Field(None, description='Details of the leasecontract\n')
    leaseOrBuy: Optional[LeaseOrBuy] = Field(
        None, description='Indication of the ownership of the company car.\n'
    )
    licensePlateNumber: Optional[constr(min_length=1, max_length=8)] = Field(
        None,
        description='Vehicle registration number (license plate) of the  company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    model: Optional[str] = Field(
        None, description='Model of the vehicle.\n', examples=['V60']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The start date of the entity.', examples=['2021-01-01']
    )
    supplier: Optional[str] = Field(
        None,
        description='Name of the company the delivered the company car.\n',
        examples=['Leasemaatschappij Tilburg'],
    )


class Message239(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content51(BaseModel):
    brand: Optional[str] = Field(
        None, description='Brand of the vehicle.\n', examples=['Volvo']
    )
    catalogValue: Optional[confloat(le=999999.99)] = Field(
        None, description='The catalog value of the car.\n', examples=[20000]
    )
    comments: Optional[str] = Field(
        None,
        description='Any comments on the car or the contract.\n',
        examples=['This car is very nice'],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    fuelCardNumber: Optional[str] = Field(
        None,
        description='Registration number of the fuel card.\n',
        examples=['B100.323.903'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    kilometersPrivateUse: Optional[int] = Field(
        None,
        description='The number kilometers per year the employee can use the car for private purposes.\n',
        examples=[10000],
    )
    lease: Optional[Lease] = Field(None, description='Details of the leasecontract\n')
    leaseOrBuy: Optional[LeaseOrBuy] = Field(
        None, description='Indication of the ownership of the company car.\n'
    )
    licensePlateNumber: Optional[constr(min_length=1, max_length=8)] = Field(
        None,
        description='Vehicle registration number (license plate) of the  company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    model: Optional[str] = Field(
        None, description='Model of the vehicle.\n', examples=['V60']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The start date of the entity.', examples=['2021-01-01']
    )
    supplier: Optional[str] = Field(
        None,
        description='Name of the company the delivered the company car.\n',
        examples=['Leasemaatschappij Tilburg'],
    )


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message239]] = None
    content: Optional[Content51] = None


class Message240(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message240]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsCompanycarsCompanyCarIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message240]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message240]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message240]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message244(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollPeriods(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The last day of the payroll period', examples=['2020-01-31']
    )
    id: Optional[int] = Field(
        None, description='The id for this specific payroll period.', examples=[202001]
    )
    periodNumber: Optional[int] = Field(
        None, description='The period number of the payroll period', examples=[1]
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The first day of the payroll period', examples=['2020-01-01']
    )
    year: Optional[int] = Field(None, description='The payroll year', examples=[2020])


class RegistrationMethod(BaseModel):
    key: Optional[int] = Field(
        None,
        description="The key of the registrationmethod ('Wijze van aanmaken'). ",
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of registrationmethod (\'Wijze van aanmaken\'). Possible values are "Verloning", "Schatting" and "Handmatig"',
        examples=['Verloning'],
    )


class FieldEmbeddedItem19(BaseModel):
    costPerHour: Optional[confloat(ge=-99999.99, le=99999.99)] = Field(
        None, description='The cost per hour for the employment\n', examples=[21.2]
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[PayrollPeriods] = Field(
        None, description='The period of the kpu record.'
    )
    registrationMethod: Optional[RegistrationMethod] = Field(
        None,
        description='This object indicates how the cost per hour was aquired. Possible values are Verloning, Schatting and Handmatig',
    )


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message244]] = None
    field_embedded: Optional[List[FieldEmbeddedItem19]] = Field(None, alias='_embedded')


class Message245(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message245]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdPutRequest(
    BaseModel
):
    costPerHour: Optional[confloat(ge=-99999.99, le=99999.99)] = Field(
        None, description='The cost per hour for the employment\n', examples=[21.2]
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[PayrollPeriods] = Field(
        None, description='The period of the kpu record.'
    )
    registrationMethod: Optional[RegistrationMethod] = Field(
        None,
        description='This object indicates how the cost per hour was aquired. Possible values are Verloning, Schatting and Handmatig',
    )


class Message246(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content52(BaseModel):
    costPerHour: Optional[confloat(ge=-99999.99, le=99999.99)] = Field(
        None, description='The cost per hour for the employment\n', examples=[21.2]
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[PayrollPeriods] = Field(
        None, description='The period of the kpu record.'
    )
    registrationMethod: Optional[RegistrationMethod] = Field(
        None,
        description='This object indicates how the cost per hour was aquired. Possible values are Verloning, Schatting and Handmatig',
    )


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message246]] = None
    content: Optional[Content52] = None


class Message247(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message247]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsCostperhourCostperhourIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message247]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message247]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message247]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message251(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem20(BaseModel):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employment',
        examples=['41'],
    )


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message251]] = None
    field_embedded: Optional[List[FieldEmbeddedItem20]] = Field(None, alias='_embedded')


class Message252(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message252]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdPutRequest(
    BaseModel
):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employment',
        examples=['41'],
    )


class Message253(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content53(BaseModel):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employment',
        examples=['41'],
    )


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message253]] = None
    content: Optional[Content53] = None


class Message254(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message254]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsCustomfieldsEmploymentCustomFieldIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message254]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message254]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message254]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message258(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class RecurrencePeriod(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Weeks'])


class RecurrencePattern(BaseModel):
    numberOfRepetitionsAfterFirstNotification: Optional[conint(ge=1, le=99)] = Field(
        None,
        description='The number of times the notification will be repeated after the first Notification. Setting the value 99 will result in repeating the notification indefinite.\n',
        examples=[4],
    )
    recurrenceNumber: Optional[conint(ge=1, le=365)] = Field(
        None,
        description='The number of the recurrence pattern. An example recurrence pattern is: repeat every 2 weeks.\n',
        examples=[2],
    )
    recurrencePeriod: Optional[RecurrencePeriod] = Field(
        None,
        description='The period of the recurrence pattern An example recurrence pattern is: repeat every 2 weeks.\n',
    )


class FieldEmbeddedItem21(BaseModel):
    expirationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the Notification will expire.',
        examples=['2021-01-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    notificationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the first notification occurs.',
        examples=['2021-01-01'],
    )
    notificationText: Optional[str] = Field(
        None,
        description='The description of the signal',
        examples=['Signal renew document'],
    )
    recurrencePattern: Optional[RecurrencePattern] = Field(
        None,
        description='Define a pattern for repeating the notification. This pattern is used to create Notifications after the initial notification as defined in the notificationDate.\n',
    )


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message258]] = None
    field_embedded: Optional[List[FieldEmbeddedItem21]] = Field(None, alias='_embedded')


class Message259(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message259]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class RecurrencePattern1(BaseModel):
    numberOfRepetitionsAfterFirstNotification: Optional[conint(ge=1, le=99)] = Field(
        None,
        description='The number of times the notification will be repeated after the first Notification. Setting the value 99 will result in repeating the notification indefinite.\n',
        examples=[4],
    )
    recurrenceNumber: Optional[conint(ge=1, le=365)] = Field(
        None,
        description='The number of the recurrence pattern. An example recurrence pattern is: repeat every 2 weeks.\n',
        examples=[2],
    )
    recurrencePeriod: Optional[RecurrencePeriod] = Field(
        None,
        description='The period of the recurrence pattern An example recurrence pattern is: repeat every 2 weeks.\n',
    )


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdPutRequest(
    BaseModel
):
    expirationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the Notification will expire.',
        examples=['2021-01-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    notificationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the first notification occurs.',
        examples=['2021-01-01'],
    )
    notificationText: Optional[str] = Field(
        None,
        description='The description of the signal',
        examples=['Signal renew document'],
    )
    recurrencePattern: Optional[RecurrencePattern1] = Field(
        None,
        description='Define a pattern for repeating the notification. This pattern is used to create Notifications after the initial notification as defined in the notificationDate.\n',
    )


class Message260(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class RecurrencePattern2(BaseModel):
    numberOfRepetitionsAfterFirstNotification: Optional[conint(ge=1, le=99)] = Field(
        None,
        description='The number of times the notification will be repeated after the first Notification. Setting the value 99 will result in repeating the notification indefinite.\n',
        examples=[4],
    )
    recurrenceNumber: Optional[conint(ge=1, le=365)] = Field(
        None,
        description='The number of the recurrence pattern. An example recurrence pattern is: repeat every 2 weeks.\n',
        examples=[2],
    )
    recurrencePeriod: Optional[RecurrencePeriod] = Field(
        None,
        description='The period of the recurrence pattern An example recurrence pattern is: repeat every 2 weeks.\n',
    )


class Content54(BaseModel):
    expirationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the Notification will expire.',
        examples=['2021-01-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    notificationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the first notification occurs.',
        examples=['2021-01-01'],
    )
    notificationText: Optional[str] = Field(
        None,
        description='The description of the signal',
        examples=['Signal renew document'],
    )
    recurrencePattern: Optional[RecurrencePattern2] = Field(
        None,
        description='Define a pattern for repeating the notification. This pattern is used to create Notifications after the initial notification as defined in the notificationDate.\n',
    )


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message260]] = None
    content: Optional[Content54] = None


class Message261(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message261]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsCustomnotificationsCustomNotificationIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message261]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsDeclarationsProcessPatchRequestItem(
    BaseModel
):
    id: UUID = Field(
        ...,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriodId: int = Field(
        ...,
        description='The year and period of the payroll period\n',
        examples=[202004],
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsProcessPatchRequest(
    RootModel[
        List[ProvidersEmployersEmployeesEmploymentsDeclarationsProcessPatchRequestItem]
    ]
):
    root: List[
        ProvidersEmployersEmployeesEmploymentsDeclarationsProcessPatchRequestItem
    ]


class Message263(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsProcessPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message263]] = None
    content: Optional[Dict[str, Any]] = None


class Message264(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsProcessPatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message264]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeclarationsProcessPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsProcessPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsReviewPatchRequestItem(
    BaseModel
):
    action: Action2 = Field(
        ...,
        description='The action to perform on the declaration resulting in a change of `declarationStatus`\nThe following transitions are allowed\n\n1. Open --> Accept or reject\n2. Goedgekeurd ---> Process\n3. Geweigerd ---> No changes possible\n5. Verwerkt ---> No changes possible\n6. Onverwerkbaar ---> No changes possible',
    )
    id: UUID = Field(
        ...,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsReviewPatchRequest(
    RootModel[
        List[ProvidersEmployersEmployeesEmploymentsDeclarationsReviewPatchRequestItem]
    ]
):
    root: List[ProvidersEmployersEmployeesEmploymentsDeclarationsReviewPatchRequestItem]


class Message265(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsReviewPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message265]] = None
    content: Optional[Dict[str, Any]] = None


class Message266(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsReviewPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message266]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeclarationsReviewPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsReviewPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message267(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class DeclarationStatus(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Open'])


class PayrollComponent5(BaseModel):
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Tijd voor tijd, UREN TVT 130%'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[11],
    )


class ProcessedInPayrollPeriod(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None, description='The last day of the period\n', examples=['2018-01-31']
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the payroll period\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None, description='The first day of the period\n', examples=['2018-01-01']
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None, description='The year of the payroll period\n', examples=[2017]
    )


class FieldEmbeddedItem22(BaseModel):
    dateOfLastChangeByEmployee: Optional[datetime] = Field(
        None,
        description='The time the declaration was last changed',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    dateOfSubmissionByEmployee: Optional[datetime] = Field(
        None,
        description='The time the declaration was submitted',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    declarationComment: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the employee',
        examples=['Overwerk project X'],
    )
    declarationDate: Optional[date_aliased] = Field(
        None,
        description='The date to which the declaration is applicable. As requested by the employee.',
        examples=['2017-11-01'],
    )
    declarationStatus: Optional[DeclarationStatus] = Field(
        None,
        description='The current status of the declaration\n\nThe status is changed by using the PATCH endpoint.\n1 Open --> Accept or reject 2 Goedgekeurd ---> Process (not yet implemented) 3 Geweigerd ---> No changes possible 5 Verwerkt ---> No changes possible 6 Onverwerkbaar ---> No changes possible',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    numberOfUnits: Optional[float] = Field(
        None, description='The number of units requested', examples=[8]
    )
    payrollComponent: Optional[PayrollComponent5] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period. \n',
    )
    processedInPayrollPeriod: Optional[ProcessedInPayrollPeriod] = Field(
        None,
        description='If the declaration has been succesfully processed then this object will show the payroll period for which a payrollPeriodData has been created.\n\nIf the declaration has not yet been processed, then the value of this object will be null.\n',
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsDeclarationIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    messages: Optional[List[Message267]] = None
    field_embedded: Optional[List[FieldEmbeddedItem22]] = Field(None, alias='_embedded')


class Message268(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsDeclarationIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message268]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeclarationsDeclarationIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsDeclarationIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsDeclarationIdAttachmentGetResponse(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsDeclarationIdAttachmentGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message269(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PerformedBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class Status4(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Approved'])


class FieldEmbeddedItem23(BaseModel):
    comment: Optional[constr(max_length=4000)] = Field(
        None, description='The comment for the action', examples=['Approved']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    performedBy: Optional[PerformedBy] = None
    performedOn: Optional[datetime] = Field(
        None,
        description='The date-time to which the action was performed',
        examples=['2017-11-01'],
    )
    status: Optional[Status4] = Field(
        None, description='The status after the action was performed'
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsDeclarationIdAudittrailGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message269]] = None
    field_embedded: Optional[List[FieldEmbeddedItem23]] = Field(None, alias='_embedded')


class Message270(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsDeclarationIdAudittrailGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message270]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeclarationsDeclarationIdAudittrailGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeclarationsDeclarationIdAudittrailGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message270]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message270]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message273(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class EndPeriod(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the last payroll period for which the record is applicable.\n',
        examples=[2017],
    )


class StartPeriod(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the record is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the record is applicable.\n',
        examples=[2017],
    )


class TypeOfDeviatingAwfContribution(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The type of deviating Deviating AWF contribution to be applied for this employment.',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the nationality', examples=['Hoog']
    )


class Content55(BaseModel):
    endPeriod: Optional[EndPeriod] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startPeriod: Optional[StartPeriod] = None
    typeOfDeviatingAwfContribution: Optional[TypeOfDeviatingAwfContribution] = None


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message273]] = None
    content: Optional[Content55] = None


class Message274(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message274]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdPutRequest(
    BaseModel
):
    endPeriod: Optional[EndPeriod] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startPeriod: Optional[StartPeriod] = None
    typeOfDeviatingAwfContribution: Optional[TypeOfDeviatingAwfContribution] = None


class Message275(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content56(BaseModel):
    endPeriod: Optional[EndPeriod] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startPeriod: Optional[StartPeriod] = None
    typeOfDeviatingAwfContribution: Optional[TypeOfDeviatingAwfContribution] = None


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message275]] = None
    content: Optional[Content56] = None


class Message276(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message276]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatingawfcontributionsDeviatingAwfContributionIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message276]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message276]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message276]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message280(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent6(BaseModel):
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['LOON/SALARIS'],
    )
    key: Optional[int] = Field(
        None, description='The number for the payroll component.\n', examples=[70]
    )


class FieldEmbeddedItem24(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent6] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this DeviatingHouryWage starts.\n\nA (broken chain)[./#section/Data/Date-chains] per DeviatingHouryWage is maintained within this resource. So multiple DeviatingHouryWages can be active at the same time but one specific DeviatingHouryWage can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.\n',
        examples=[50.87],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message280]] = None
    field_embedded: Optional[List[FieldEmbeddedItem24]] = Field(None, alias='_embedded')


class Message281(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message281]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdPutRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent6] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this DeviatingHouryWage starts.\n\nA (broken chain)[./#section/Data/Date-chains] per DeviatingHouryWage is maintained within this resource. So multiple DeviatingHouryWages can be active at the same time but one specific DeviatingHouryWage can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.\n',
        examples=[50.87],
    )


class Message282(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content57(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent6] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this DeviatingHouryWage starts.\n\nA (broken chain)[./#section/Data/Date-chains] per DeviatingHouryWage is maintained within this resource. So multiple DeviatingHouryWages can be active at the same time but one specific DeviatingHouryWage can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.\n',
        examples=[50.87],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message282]] = None
    content: Optional[Content57] = None


class Message283(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message283]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsDeviatinghourlywagesDeviatingHourlyWageIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message283]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message283]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message283]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message287(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Deviations6(BaseModel):
    employmentContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating employment contribution percentage. This value will overrule the value of the selected `fund`. Indicates percentage wise how much the employment has to contribute to the payment of the "fund" contribution.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[11],
    )
    totalContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating total contribution percentage. This value will overrule the value of the selected `fund`. The difference between `employmentContributionPercentage` and `totalContributionPercentage` will be paid by the employer.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[12.0007],
    )


class FieldEmbeddedItem25(BaseModel):
    deviations: Optional[Deviations6] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution2] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message287]] = None
    field_embedded: Optional[List[FieldEmbeddedItem25]] = Field(None, alias='_embedded')


class Message288(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message288]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Deviations7(BaseModel):
    employmentContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating employment contribution percentage. This value will overrule the value of the selected `fund`. Indicates percentage wise how much the employment has to contribute to the payment of the "fund" contribution.',
        examples=[11],
    )
    totalContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating total contribution percentage. This value will overrule the value of the selected `fund`. The difference between `employmentContributionPercentage` and `totalContributionPercentage` will be paid by the employer.',
        examples=[12.0007],
    )


class FixedContribution4(BaseModel):
    employmentContribution: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The employment contribution (in money) that the employee will pay instead of what the calculation of the `fund` indicates.',
        examples=[1789],
    )
    totalContribution: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The total contribution (in money) that the employer and employee pay instead of what the calculation of the `fund` indicates.',
        examples=[2569],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdPutRequest(
    BaseModel
):
    deviations: Optional[Deviations7] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution4] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class Message289(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Deviations8(BaseModel):
    employmentContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating employment contribution percentage. This value will overrule the value of the selected `fund`. Indicates percentage wise how much the employment has to contribute to the payment of the "fund" contribution.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[11],
    )
    totalContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating total contribution percentage. This value will overrule the value of the selected `fund`. The difference between `employmentContributionPercentage` and `totalContributionPercentage` will be paid by the employer.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[12.0007],
    )


class FixedContribution5(BaseModel):
    employmentContribution: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The employment contribution (in money) that the employee will pay instead of what the calculation of the `fund` indicates.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different range, from 0.00 up to 9999.99',
        examples=[1789],
    )
    totalContribution: Optional[confloat(ge=0.0, le=99999999.99)] = Field(
        None,
        description='The total contribution (in money) that the employer and employee pay instead of what the calculation of the `fund` indicates.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different range, from 0 up to 9999.99',
        examples=[2569],
    )


class Content58(BaseModel):
    deviations: Optional[Deviations8] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution5] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message289]] = None
    content: Optional[Content58] = None


class Message290(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message290]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentfundsEmploymentFundIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message290]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message290]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message290]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message294(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AdditionalTaxLiabilityGroup(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(min_length=0, max_length=100)] = Field(
        None, examples=['Standaard tarief (25% tot 2017)']
    )


class ReasonForNoAdditionalTaxLiability(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['(2) Werknemer heeft beschikking belastingdienst']
    )


class Content59(BaseModel):
    additionalTaxLiabilityGroup: Optional[AdditionalTaxLiabilityGroup] = Field(
        None,
        description='Indication for what additional tax liability percentage (bijtelling) should be used for calculating the tax liabiltiy in the payroll process.\n\nIt is possible to acquire a value for this field based on the RDW-registration of the vehicle registration number (license plate) by calling that supplementary endpoint.\n',
    )
    dateOfFirstAdmission: Optional[date_aliased] = Field(
        None,
        description='First day of admission for the vehicle (datum eerste toelating). It is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.',
        examples=['2018-01-01'],
    )
    deviatingAdditionalTaxLiability: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Normally Loket will calculate the applicable tax liability based on the value and tax liability group of the car. However this field may OVERRIDE any other values, and in that case this amount will be applied as the applicable tax liability amount.\n',
        examples=[20000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    licensePlateNumber: Optional[constr(min_length=0, max_length=15)] = Field(
        None,
        description='Vehicle registration number (license plate) of the fiscal company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    reasonForNoAdditionalTaxLiability: Optional[ReasonForNoAdditionalTaxLiability] = (
        Field(
            None,
            description='In case the employment does have a fiscal company car but no additional tax liability should be applied, then the reason should be provided for the payroll tax return.\n',
        )
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2021-01-01'],
    )
    taxableBenefitForPrivateUse: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Taxable benefit for private use (eigen bijdrage van de werknemer) may be entered here, this will lower the tax liability to be paid in the payrolling process.\n',
        examples=[2000],
    )
    valueForTaxPurposes: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The value of the car for tax purposes. This field may only be NULL if a reason for no additional tax liability (reden voor geen bijtelling) is provided.\nIt is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.\n',
        examples=[20000],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message294]] = None
    content: Optional[Content59] = None


class Message295(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message295]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdPutRequest(
    BaseModel
):
    additionalTaxLiabilityGroup: Optional[AdditionalTaxLiabilityGroup] = Field(
        None,
        description='Indication for what additional tax liability percentage (bijtelling) should be used for calculating the tax liabiltiy in the payroll process.\n\nIt is possible to acquire a value for this field based on the RDW-registration of the vehicle registration number (license plate) by calling that supplementary endpoint.\n',
    )
    dateOfFirstAdmission: Optional[date_aliased] = Field(
        None,
        description='First day of admission for the vehicle (datum eerste toelating). It is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.',
        examples=['2018-01-01'],
    )
    deviatingAdditionalTaxLiability: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Normally Loket will calculate the applicable tax liability based on the value and tax liability group of the car. However this field may OVERRIDE any other values, and in that case this amount will be applied as the applicable tax liability amount.\n',
        examples=[20000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    licensePlateNumber: Optional[constr(min_length=0, max_length=15)] = Field(
        None,
        description='Vehicle registration number (license plate) of the fiscal company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    reasonForNoAdditionalTaxLiability: Optional[ReasonForNoAdditionalTaxLiability] = (
        Field(
            None,
            description='In case the employment does have a fiscal company car but no additional tax liability should be applied, then the reason should be provided for the payroll tax return.\n',
        )
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2021-01-01'],
    )
    taxableBenefitForPrivateUse: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Taxable benefit for private use (eigen bijdrage van de werknemer) may be entered here, this will lower the tax liability to be paid in the payrolling process.\n',
        examples=[2000],
    )
    valueForTaxPurposes: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The value of the car for tax purposes. This field may only be NULL if a reason for no additional tax liability (reden voor geen bijtelling) is provided.\nIt is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.\n',
        examples=[20000],
    )


class Message296(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content60(BaseModel):
    additionalTaxLiabilityGroup: Optional[AdditionalTaxLiabilityGroup] = Field(
        None,
        description='Indication for what additional tax liability percentage (bijtelling) should be used for calculating the tax liabiltiy in the payroll process.\n\nIt is possible to acquire a value for this field based on the RDW-registration of the vehicle registration number (license plate) by calling that supplementary endpoint.\n',
    )
    dateOfFirstAdmission: Optional[date_aliased] = Field(
        None,
        description='First day of admission for the vehicle (datum eerste toelating). It is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.',
        examples=['2018-01-01'],
    )
    deviatingAdditionalTaxLiability: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Normally Loket will calculate the applicable tax liability based on the value and tax liability group of the car. However this field may OVERRIDE any other values, and in that case this amount will be applied as the applicable tax liability amount.\n',
        examples=[20000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    licensePlateNumber: Optional[constr(min_length=0, max_length=15)] = Field(
        None,
        description='Vehicle registration number (license plate) of the fiscal company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    reasonForNoAdditionalTaxLiability: Optional[ReasonForNoAdditionalTaxLiability] = (
        Field(
            None,
            description='In case the employment does have a fiscal company car but no additional tax liability should be applied, then the reason should be provided for the payroll tax return.\n',
        )
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2021-01-01'],
    )
    taxableBenefitForPrivateUse: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Taxable benefit for private use (eigen bijdrage van de werknemer) may be entered here, this will lower the tax liability to be paid in the payrolling process.\n',
        examples=[2000],
    )
    valueForTaxPurposes: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The value of the car for tax purposes. This field may only be NULL if a reason for no additional tax liability (reden voor geen bijtelling) is provided.\nIt is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.\n',
        examples=[20000],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message296]] = None
    content: Optional[Content60] = None


class Message297(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message297]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalcompanycarsFiscalCompanyCarIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message297]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message297]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message297]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message301(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ApplySalarysplit(BaseModel):
    key: Optional[Any] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the type of document',
        examples=['LB obv wereldinkomen (%NL/WI)'],
    )


class ContributionReductionEducation(BaseModel):
    key: Optional[Any] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the type of education',
        examples=['4. Opleiding hbo'],
    )


class DeviatingTaxTableCode(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=80)] = Field(
        None, examples=['999 Overige gevallen waarin geen tabel is toegepast']
    )


class SpecialIndication(BaseModel):
    four: Optional[int] = Field(None, description='Speciale aanduiding 4', examples=[1])
    one: Optional[int] = Field(None, description='Speciale aanduiding 1', examples=[1])
    three: Optional[int] = Field(
        None, description='Speciale aanduiding 3', examples=[1]
    )
    two: Optional[int] = Field(None, description='Speciale aanduiding 2', examples=[1])


class ThirtyPercentFacility(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Netto'])


class Content61(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=999999999.0)] = Field(
        None,
        description='The fiscal annual salary. NL: Fiscaal jaarloon',
        examples=[60000],
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax. NL: DagtabelToepassen',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable. NL: AfwijkendPercentageToepassen',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting). NL: ArbeidskortingToepassen',
        examples=[True],
    )
    applySalarysplit: Optional[ApplySalarysplit] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )
    applyStudentDeduction: Optional[bool] = Field(
        None,
        description='Apply the "Scholierenregeling". NL; ArbeidskortingToepassen',
        examples=[False],
    )
    contributionReductionEducation: Optional[ContributionReductionEducation] = Field(
        None, description='Afdr. verm. onderwijs\n'
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[confloat(ge=0.0, le=99.99)] = Field(
        None,
        description='Indicates the deviating payroll tax percentage which is to be applied. NL: AfwijkendLoonbelastingPercentage',
        examples=[25],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description="Indicates if there is a deviating payroll tax table is applicable (green vs white table). If 'Niet afwijkend', then the colour is based on the setting at the payroll administration level, either green or white. NL: AfwijkendeKleurLBtabel",
    )
    deviatingPercentageThirtyPercentFacility: Optional[
        confloat(ge=1e-06, le=29.999999)
    ] = Field(
        None,
        description='Indicates a deviating percentage which should be applied for the 30% facility (30%-regeling)',
        examples=[20.2345],
    )
    deviatingSmallJobsArrangement: Optional[bool] = Field(
        None, description='Kleine banenregeling', examples=[False]
    )
    deviatingTaxTableCode: Optional[DeviatingTaxTableCode] = Field(
        None,
        description='Indicates if the tax tabel code should be set to a specific code (code loonbelasting). Normally Loket will determine the tax table based on other properties of the employment, however this field allows the user to override this and set the tax table code to 999. Only in exceptional cases this field should have a value. NL: CodeLoonBelastingtabel',
    )
    doesWageIncludeAow: Optional[bool] = Field(
        None,
        description='Indicates whether wage include AOW pension (affects payrolling). NL: LoonInclusiefAowUitkering',
        examples=[False],
    )
    doesWageIncludeWajong: Optional[bool] = Field(
        None,
        description='Indicates whether wage include Wajong benefits (affects payrolling). NL: LoonInclusiefWajong',
        examples=[False],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    hasEmployeeLoan: Optional[bool] = Field(
        None,
        description='Whether an employee loan (Personeelslening) is applicable may be indicated here. The Personeelslening indirectly affects the income tax calculations.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    percentageForeignIncome: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='Indicates what percentage of the income of this employment is taxable outside the Netherlands. NL: PercentageBuitenlandsInkomen',
        examples=[50],
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen. NL: InwonerVan\n',
    )
    specialIndication: Optional[SpecialIndication] = Field(
        None, description='Indications This field is no longer used sinds 2005'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    thirtyPercentFacility: Optional[ThirtyPercentFacility] = Field(
        None,
        description='If the employee comes to work in the Netherlands from another country, the employer may grant an untaxed reimbursement. (30%-regeling).',
    )
    usesTransportByWithholdingAgent: Optional[bool] = Field(
        None,
        description="The so-called 'vervoer vanwege inhoudingsplichtige' is a tax rule that may apply. By example when the employer organizes the transport for the employee.",
        examples=[False],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message301]] = None
    content: Optional[Content61] = None


class Message302(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message302]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdPutRequest(
    BaseModel
):
    annualSalary: Optional[confloat(ge=0.0, le=999999999.0)] = Field(
        None,
        description='The fiscal annual salary. NL: Fiscaal jaarloon',
        examples=[60000],
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax. NL: DagtabelToepassen',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable. NL: AfwijkendPercentageToepassen',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting). NL: ArbeidskortingToepassen',
        examples=[True],
    )
    applySalarysplit: Optional[ApplySalarysplit] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )
    applyStudentDeduction: Optional[bool] = Field(
        None,
        description='Apply the "Scholierenregeling". NL; ArbeidskortingToepassen',
        examples=[False],
    )
    contributionReductionEducation: Optional[ContributionReductionEducation] = Field(
        None, description='Afdr. verm. onderwijs\n'
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[confloat(ge=0.0, le=99.99)] = Field(
        None,
        description='Indicates the deviating payroll tax percentage which is to be applied. NL: AfwijkendLoonbelastingPercentage',
        examples=[25],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description="Indicates if there is a deviating payroll tax table is applicable (green vs white table). If 'Niet afwijkend', then the colour is based on the setting at the payroll administration level, either green or white. NL: AfwijkendeKleurLBtabel",
    )
    deviatingPercentageThirtyPercentFacility: Optional[
        confloat(ge=1e-06, le=29.999999)
    ] = Field(
        None,
        description='Indicates a deviating percentage which should be applied for the 30% facility (30%-regeling)',
        examples=[20.2345],
    )
    deviatingSmallJobsArrangement: Optional[bool] = Field(
        None, description='Kleine banenregeling', examples=[False]
    )
    deviatingTaxTableCode: Optional[DeviatingTaxTableCode] = Field(
        None,
        description='Indicates if the tax tabel code should be set to a specific code (code loonbelasting). Normally Loket will determine the tax table based on other properties of the employment, however this field allows the user to override this and set the tax table code to 999. Only in exceptional cases this field should have a value. NL: CodeLoonBelastingtabel',
    )
    doesWageIncludeAow: Optional[bool] = Field(
        None,
        description='Indicates whether wage include AOW pension (affects payrolling). NL: LoonInclusiefAowUitkering',
        examples=[False],
    )
    doesWageIncludeWajong: Optional[bool] = Field(
        None,
        description='Indicates whether wage include Wajong benefits (affects payrolling). NL: LoonInclusiefWajong',
        examples=[False],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    hasEmployeeLoan: Optional[bool] = Field(
        None,
        description='Whether an employee loan (Personeelslening) is applicable may be indicated here. The Personeelslening indirectly affects the income tax calculations.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    percentageForeignIncome: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='Indicates what percentage of the income of this employment is taxable outside the Netherlands. NL: PercentageBuitenlandsInkomen',
        examples=[50],
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen. NL: InwonerVan\n',
    )
    specialIndication: Optional[SpecialIndication] = Field(
        None, description='Indications This field is no longer used sinds 2005'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    thirtyPercentFacility: Optional[ThirtyPercentFacility] = Field(
        None,
        description='If the employee comes to work in the Netherlands from another country, the employer may grant an untaxed reimbursement. (30%-regeling).',
    )
    usesTransportByWithholdingAgent: Optional[bool] = Field(
        None,
        description="The so-called 'vervoer vanwege inhoudingsplichtige' is a tax rule that may apply. By example when the employer organizes the transport for the employee.",
        examples=[False],
    )


class Message303(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content62(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=999999999.0)] = Field(
        None,
        description='The fiscal annual salary. NL: Fiscaal jaarloon',
        examples=[60000],
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax. NL: DagtabelToepassen',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable. NL: AfwijkendPercentageToepassen',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting). NL: ArbeidskortingToepassen',
        examples=[True],
    )
    applySalarysplit: Optional[ApplySalarysplit] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )
    applyStudentDeduction: Optional[bool] = Field(
        None,
        description='Apply the "Scholierenregeling". NL; ArbeidskortingToepassen',
        examples=[False],
    )
    contributionReductionEducation: Optional[ContributionReductionEducation] = Field(
        None, description='Afdr. verm. onderwijs\n'
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[confloat(ge=0.0, le=99.99)] = Field(
        None,
        description='Indicates the deviating payroll tax percentage which is to be applied. NL: AfwijkendLoonbelastingPercentage',
        examples=[25],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description="Indicates if there is a deviating payroll tax table is applicable (green vs white table). If 'Niet afwijkend', then the colour is based on the setting at the payroll administration level, either green or white. NL: AfwijkendeKleurLBtabel",
    )
    deviatingPercentageThirtyPercentFacility: Optional[
        confloat(ge=1e-06, le=29.999999)
    ] = Field(
        None,
        description='Indicates a deviating percentage which should be applied for the 30% facility (30%-regeling)',
        examples=[20.2345],
    )
    deviatingSmallJobsArrangement: Optional[bool] = Field(
        None, description='Kleine banenregeling', examples=[False]
    )
    deviatingTaxTableCode: Optional[DeviatingTaxTableCode] = Field(
        None,
        description='Indicates if the tax tabel code should be set to a specific code (code loonbelasting). Normally Loket will determine the tax table based on other properties of the employment, however this field allows the user to override this and set the tax table code to 999. Only in exceptional cases this field should have a value. NL: CodeLoonBelastingtabel',
    )
    doesWageIncludeAow: Optional[bool] = Field(
        None,
        description='Indicates whether wage include AOW pension (affects payrolling). NL: LoonInclusiefAowUitkering',
        examples=[False],
    )
    doesWageIncludeWajong: Optional[bool] = Field(
        None,
        description='Indicates whether wage include Wajong benefits (affects payrolling). NL: LoonInclusiefWajong',
        examples=[False],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    hasEmployeeLoan: Optional[bool] = Field(
        None,
        description='Whether an employee loan (Personeelslening) is applicable may be indicated here. The Personeelslening indirectly affects the income tax calculations.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    percentageForeignIncome: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='Indicates what percentage of the income of this employment is taxable outside the Netherlands. NL: PercentageBuitenlandsInkomen',
        examples=[50],
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen. NL: InwonerVan\n',
    )
    specialIndication: Optional[SpecialIndication] = Field(
        None, description='Indications This field is no longer used sinds 2005'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    thirtyPercentFacility: Optional[ThirtyPercentFacility] = Field(
        None,
        description='If the employee comes to work in the Netherlands from another country, the employer may grant an untaxed reimbursement. (30%-regeling).',
    )
    usesTransportByWithholdingAgent: Optional[bool] = Field(
        None,
        description="The so-called 'vervoer vanwege inhoudingsplichtige' is a tax rule that may apply. By example when the employer organizes the transport for the employee.",
        examples=[False],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message303]] = None
    content: Optional[Content62] = None


class Message304(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message304]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsFiscalpropertiesFiscalPropertiesIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message304]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message304]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message304]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message308(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class HealthcareInsuranceActType(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['(C/K) Wel verzekeringsplichtig, normaal tarief']
    )


class Content63(BaseModel):
    additionalContributionEmployer: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='If applicable, please enter any additional contribution (extra bijdrage werkgever) for the employer in relation to the Healthcare Insurance Act (Zorgverzekeringswet).',
        examples=[320],
    )
    additionalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='Additional premium (aanvullende premie) on top of the nomial premium may be registered here, if applicable.',
        examples=[120],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    healthcareInsuranceActType: Optional[HealthcareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nominalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='A nominal premium (nominale premie) for the Healthcare Insurance Act may be registered here, if applicable.',
        examples=[320],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message308]] = None
    content: Optional[Content63] = None


class Message309(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message309]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdPutRequest(
    BaseModel
):
    additionalContributionEmployer: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='If applicable, please enter any additional contribution (extra bijdrage werkgever) for the employer in relation to the Healthcare Insurance Act (Zorgverzekeringswet).',
        examples=[320],
    )
    additionalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='Additional premium (aanvullende premie) on top of the nomial premium may be registered here, if applicable.',
        examples=[120],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    healthcareInsuranceActType: Optional[HealthcareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nominalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='A nominal premium (nominale premie) for the Healthcare Insurance Act may be registered here, if applicable.',
        examples=[320],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class Message310(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content64(BaseModel):
    additionalContributionEmployer: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='If applicable, please enter any additional contribution (extra bijdrage werkgever) for the employer in relation to the Healthcare Insurance Act (Zorgverzekeringswet).',
        examples=[320],
    )
    additionalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='Additional premium (aanvullende premie) on top of the nomial premium may be registered here, if applicable.',
        examples=[120],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    healthcareInsuranceActType: Optional[HealthcareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nominalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='A nominal premium (nominale premie) for the Healthcare Insurance Act may be registered here, if applicable.',
        examples=[320],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message310]] = None
    content: Optional[Content64] = None


class Message311(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message311]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsHealthcareinsuranceactconfigurationsHealthcareInsuranceActConfigurationIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message311]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message311]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message311]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message315(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CostCenter(BaseModel):
    code: Optional[str] = Field(None, examples=['SAL073'])
    description: Optional[str] = Field(None, examples=['Sales Den Bosch'])
    key: Optional[int] = Field(None, examples=[2])


class CostUnit(BaseModel):
    code: Optional[str] = Field(None, examples=['01'])
    description: Optional[str] = Field(None, examples=['Cars'])
    key: Optional[int] = Field(None, examples=[2])


class AllocationBasedOnActualHours(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class AllocationBasedOnFixedWeight(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    weight: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='The weight (factor) determines the relative weight when allocating the costs for this specific combination of costCenter and costUnit.\n',
        examples=[1],
    )


class EndPeriod3(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the last payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class EndPeriod4(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class JournalProfile(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['General ledger supermarkets'])


class StartPeriod3(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class JournalProfileConfiguration(BaseModel):
    endPeriod: Optional[EndPeriod4] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfile: Optional[JournalProfile] = None
    startPeriod: Optional[StartPeriod3] = None


class StartPeriod4(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class Content65(BaseModel):
    allocationBasedOnActualHours: Optional[AllocationBasedOnActualHours] = Field(
        None,
        description='Provide the allocation details within this object in case allocation based on actual hours (=normuren) is applicable. Functional effect; when PayrollPeriodData (=Variabele Gegevens) are created for this Employment, then the default values for the fields costCenter and costUnit wil be based on the settings within this resource.  So if you are an external party and want to provide costUnit and/or costCenter when sending PayrollPeriodData,  make sure you first acquire the default values by calling the `/ defaults` for the PayrollPeriodData resource (!).\n\nPlease note that this object MUST be null when `allocationBasedOnFixedWeights` is to be applied. Only one of the two may be provided.\n',
    )
    allocationBasedOnFixedWeights: Optional[List[AllocationBasedOnFixedWeight]] = Field(
        None,
        description='Provide the allocation details within this object when allocation based on weights (=factor) is applicable. Functional effect; if the costCenter and/or costUnit are provided within this object than the journal run calculations will use these fixed weights when performing calculations. Any costCenters and costUnits in the PayrollPeriodData records will be ignored for the calculations in that case.\n\nPlease note that this object MUST be null when `allocationBasedOnActualHours` is to be applied. Only one of the two may be provided. \n',
    )
    endPeriod: Optional[EndPeriod3] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfileConfiguration: Optional[JournalProfileConfiguration] = Field(
        None,
        description='Indicates to which journal profiel configuration the record relates',
    )
    startPeriod: Optional[StartPeriod4] = None


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message315]] = None
    content: Optional[Content65] = None


class Message316(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message316]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class AllocationBasedOnActualHours1(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class AllocationBasedOnFixedWeight1(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    weight: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='The weight (factor) determines the relative weight when allocating the costs for this specific combination of costCenter and costUnit.\n',
        examples=[1],
    )


class EndPeriod5(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the last payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class EndPeriod6(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class StartPeriod5(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class JournalProfileConfiguration1(BaseModel):
    endPeriod: Optional[EndPeriod6] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfile: Optional[JournalProfile] = None
    startPeriod: Optional[StartPeriod5] = None


class StartPeriod6(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdPutRequest(
    BaseModel
):
    allocationBasedOnActualHours: Optional[AllocationBasedOnActualHours1] = Field(
        None,
        description='Provide the allocation details within this object in case allocation based on actual hours (=normuren) is applicable. Functional effect; when PayrollPeriodData (=Variabele Gegevens) are created for this Employment, then the default values for the fields costCenter and costUnit wil be based on the settings within this resource.  So if you are an external party and want to provide costUnit and/or costCenter when sending PayrollPeriodData,  make sure you first acquire the default values by calling the `/ defaults` for the PayrollPeriodData resource (!).\n\nPlease note that this object MUST be null when `allocationBasedOnFixedWeights` is to be applied. Only one of the two may be provided.\n',
    )
    allocationBasedOnFixedWeights: Optional[List[AllocationBasedOnFixedWeight1]] = (
        Field(
            None,
            description='Provide the allocation details within this object when allocation based on weights (=factor) is applicable. Functional effect; if the costCenter and/or costUnit are provided within this object than the journal run calculations will use these fixed weights when performing calculations. Any costCenters and costUnits in the PayrollPeriodData records will be ignored for the calculations in that case.\n\nPlease note that this object MUST be null when `allocationBasedOnActualHours` is to be applied. Only one of the two may be provided. \n',
        )
    )
    endPeriod: Optional[EndPeriod5] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfileConfiguration: Optional[JournalProfileConfiguration1] = Field(
        None,
        description='Indicates to which journal profiel configuration the record relates',
    )
    startPeriod: Optional[StartPeriod6] = None


class Message317(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AllocationBasedOnActualHours2(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class AllocationBasedOnFixedWeight2(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    weight: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='The weight (factor) determines the relative weight when allocating the costs for this specific combination of costCenter and costUnit.\n',
        examples=[1],
    )


class EndPeriod7(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the last payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class EndPeriod8(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class StartPeriod7(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class JournalProfileConfiguration2(BaseModel):
    endPeriod: Optional[EndPeriod8] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfile: Optional[JournalProfile] = None
    startPeriod: Optional[StartPeriod7] = None


class StartPeriod8(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class Content66(BaseModel):
    allocationBasedOnActualHours: Optional[AllocationBasedOnActualHours2] = Field(
        None,
        description='Provide the allocation details within this object in case allocation based on actual hours (=normuren) is applicable. Functional effect; when PayrollPeriodData (=Variabele Gegevens) are created for this Employment, then the default values for the fields costCenter and costUnit wil be based on the settings within this resource.  So if you are an external party and want to provide costUnit and/or costCenter when sending PayrollPeriodData,  make sure you first acquire the default values by calling the `/ defaults` for the PayrollPeriodData resource (!).\n\nPlease note that this object MUST be null when `allocationBasedOnFixedWeights` is to be applied. Only one of the two may be provided.\n',
    )
    allocationBasedOnFixedWeights: Optional[List[AllocationBasedOnFixedWeight2]] = (
        Field(
            None,
            description='Provide the allocation details within this object when allocation based on weights (=factor) is applicable. Functional effect; if the costCenter and/or costUnit are provided within this object than the journal run calculations will use these fixed weights when performing calculations. Any costCenters and costUnits in the PayrollPeriodData records will be ignored for the calculations in that case.\n\nPlease note that this object MUST be null when `allocationBasedOnActualHours` is to be applied. Only one of the two may be provided. \n',
        )
    )
    endPeriod: Optional[EndPeriod7] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfileConfiguration: Optional[JournalProfileConfiguration2] = Field(
        None,
        description='Indicates to which journal profiel configuration the record relates',
    )
    startPeriod: Optional[StartPeriod8] = None


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message317]] = None
    content: Optional[Content66] = None


class Message318(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message318]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsJournalallocationsJournalAllocationIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message318]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message318]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message318]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message322(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class LeaveType(BaseModel):
    balanceExceedsYear: Optional[bool] = Field(
        None,
        description='Indicates whether the balance at the end of the year for this leave type carries over to the next year.\n',
        examples=[True],
    )
    key: Optional[int] = Field(
        None, description='The key for the leave type.\n', examples=[1]
    )
    value: Optional[str] = Field(
        None,
        description='The description for the leave type. Note that leave types can be overridden at the employer level. In these cases the description at the employer level takes precedence over the default description of the leave type.\n',
        examples=['Verlof (bovenwettelijk)'],
    )


class LeaveUnitType(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the leave unit Type.\n', examples=[1]
    )
    value: Optional[str] = Field(
        None, description='The description for the leave unit type\n', examples=['Uren']
    )


class LeavePolicy(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveUnitType: Optional[LeaveUnitType] = Field(
        None, description='The type of leave units either days or hours'
    )
    value: Optional[str] = Field(
        None,
        description='The description of the leave regulation.\n',
        examples=['Default leave Regulations'],
    )


class MeansOfCreation(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the means of creation\n', examples=[1]
    )
    value: Optional[str] = Field(
        None,
        description='The description for the leave unit type\n',
        examples=['individual'],
    )


class Origin3(BaseModel):
    leavePolicy: Optional[LeavePolicy] = Field(
        None,
        description='The leave policy for which the record was created. Will only have a value if `meansOfCreation` indicates a leave policy\n\n`leavePolicy` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    meansOfCreation: Optional[MeansOfCreation] = Field(
        None, description='The means of creation  of the record'
    )


class RelatedLeave(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class RelatedLeaveRequest(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class UnitType(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the unit type\n', examples=[1]
    )
    value: Optional[str] = Field(
        None, description='The description for the unit type\n', examples=['Uren']
    )


class Content67(BaseModel):
    comment: Optional[constr(max_length=4000)] = Field(None, examples=['some comment'])
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        None,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveType: Optional[LeaveType] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.0, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    origin: Optional[Origin3] = None
    relatedLeave: Optional[RelatedLeave] = Field(
        None,
        description='Incase two leave records are linked to a single leave request the ID of the linked leave record is returned in this field. This is done because when deleting a leave record linked to a leave request the other leave record linked to that leave request is also deleted\n\nThe only functional scenario when this may occur is when a leave request is entered for leaveType 16 (Verlof). Depending on the leave balances, this might result in both a leave booking for Verlof (wettelijk) and Verlof (botenwettelijk).',
    )
    relatedLeaveRequest: Optional[RelatedLeaveRequest] = Field(
        None,
        description='Incase that the leave record is the result of the approval of a leave request this value will be set to the ID of that leave request.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message322]] = None
    content: Optional[Content67] = None


class Message323(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message323]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class LeavePolicy1(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveUnitType: Optional[LeaveUnitType] = Field(
        None, description='The type of leave units either days or hours'
    )
    value: Optional[str] = Field(
        None,
        description='The description of the leave regulation.\n',
        examples=['Default leave Regulations'],
    )


class Origin4(BaseModel):
    leavePolicy: Optional[LeavePolicy1] = Field(
        None,
        description='The leave policy for which the record was created. Will only have a value if `meansOfCreation` indicates a leave policy\n\n`leavePolicy` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    meansOfCreation: Optional[MeansOfCreation] = Field(
        None, description='The means of creation  of the record'
    )


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdPutRequest(BaseModel):
    comment: Optional[constr(max_length=4000)] = Field(None, examples=['some comment'])
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        None,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveType: Optional[LeaveType] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.0, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    origin: Optional[Origin4] = None
    relatedLeave: Optional[RelatedLeave] = Field(
        None,
        description='Incase two leave records are linked to a single leave request the ID of the linked leave record is returned in this field. This is done because when deleting a leave record linked to a leave request the other leave record linked to that leave request is also deleted\n\nThe only functional scenario when this may occur is when a leave request is entered for leaveType 16 (Verlof). Depending on the leave balances, this might result in both a leave booking for Verlof (wettelijk) and Verlof (botenwettelijk).',
    )
    relatedLeaveRequest: Optional[RelatedLeaveRequest] = Field(
        None,
        description='Incase that the leave record is the result of the approval of a leave request this value will be set to the ID of that leave request.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class Message324(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class LeavePolicy2(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveUnitType: Optional[LeaveUnitType] = Field(
        None, description='The type of leave units either days or hours'
    )
    value: Optional[str] = Field(
        None,
        description='The description of the leave regulation.\n',
        examples=['Default leave Regulations'],
    )


class Origin5(BaseModel):
    leavePolicy: Optional[LeavePolicy2] = Field(
        None,
        description='The leave policy for which the record was created. Will only have a value if `meansOfCreation` indicates a leave policy\n\n`leavePolicy` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    meansOfCreation: Optional[MeansOfCreation] = Field(
        None, description='The means of creation  of the record'
    )


class Content68(BaseModel):
    comment: Optional[constr(max_length=4000)] = Field(None, examples=['some comment'])
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        None,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveType: Optional[LeaveType] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.0, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    origin: Optional[Origin5] = None
    relatedLeave: Optional[RelatedLeave] = Field(
        None,
        description='Incase two leave records are linked to a single leave request the ID of the linked leave record is returned in this field. This is done because when deleting a leave record linked to a leave request the other leave record linked to that leave request is also deleted\n\nThe only functional scenario when this may occur is when a leave request is entered for leaveType 16 (Verlof). Depending on the leave balances, this might result in both a leave booking for Verlof (wettelijk) and Verlof (botenwettelijk).',
    )
    relatedLeaveRequest: Optional[RelatedLeaveRequest] = Field(
        None,
        description='Incase that the leave record is the result of the approval of a leave request this value will be set to the ID of that leave request.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message324]] = None
    content: Optional[Content68] = None


class Message325(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message325]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message325]] = None
    version: Optional[Version] = None


class Option(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the metadata field.\n', examples=[1]
    )
    value: Optional[str] = Field(
        None,
        description='The description for the metadata field\n',
        examples=['<Description>'],
    )


class FieldEmbeddedItem26(BaseModel):
    field: Optional[str] = Field(
        None,
        description='The field name of the metadata field\n',
        examples=['<name of the metadata field>'],
    )
    options: Optional[List[Option]] = None


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdMetadataGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message325]] = None
    field_embedded: Optional[List[FieldEmbeddedItem26]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdMetadataGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message325]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdMetadataGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsLeaveLeaveIdMetadataGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Action4(Enum):
    accept = 'accept'
    reject = 'reject'
    reopen = 'reopen'


class ProvidersEmployersEmployeesEmploymentsLeaverequestsPatchRequestItem(BaseModel):
    action: Action4 = Field(
        ...,
        description='The action to perform on the leave request resulting in a change of `leaveRequestStatus`\nThe following transitions are possible\n* leaveRequestStatus = submitted -> accept or reject\n* leaveRequestStatus = accepted -> no changes possible\n* leaveRequestStatus = rejected -> reopen\n* leaveRequestStatus = revoked by user -> no changes possible',
    )
    id: UUID = Field(
        ...,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsPatchRequest(
    RootModel[List[ProvidersEmployersEmployeesEmploymentsLeaverequestsPatchRequestItem]]
):
    root: List[ProvidersEmployersEmployeesEmploymentsLeaverequestsPatchRequestItem]


class Message329(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message329]] = None
    content: Optional[Dict[str, Any]] = None


class Message330(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message330]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsLeaverequestsPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message331(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class HandledBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. <lastname>", "<initials>" "<prefix>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['ABC']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class LeaveRequestStatus(BaseModel):
    key: Optional[int] = Field(None, examples=[9])
    value: Optional[str] = Field(None, examples=['Geaccepteerd'])


class LeaveType3(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Verlof (bovenwettelijk)'])


class SubmittedBy(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within a employer.',
        examples=[156],
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None,
        description='The last name of the partner of the employee',
        examples=['Wiel'],
    )
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the employee', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix of the partner of the employee',
        examples=['van de'],
    )


class Content69(BaseModel):
    commentEmployee: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the employee',
        examples=['Vakantie naar Spanje'],
    )
    commentHandler: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the person handling the leave request',
        examples=['Fijne vakantie!'],
    )
    currentlyAvailableUnits: Optional[float] = Field(
        None,
        description='The number of leave units (of the leaveType for this leave request) available to the employment.\nThis value can be negative.',
        examples=[140],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    handledBy: Optional[HandledBy] = None
    handledTime: Optional[datetime] = Field(
        None,
        description='The date and time the leave request was handled',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        False,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveRequestStatus: Optional[LeaveRequestStatus] = Field(
        None,
        description='The current status of the leave request\n\nThe leave request status is changed by using the PATCH endpoint (not the PUT).\n\nThe following transitions are possible\n* leaveRequestStatus = submitted -> accepted or rejected\n* leaveRequestStatus = accepted -> no changes possible\n* leaveRequestStatus = rejected -> submitted\n* leaveRequestStatus = revoked by user -> no changes possible\n* leaveRequestStatus = related leave deleted -> no changes possible',
    )
    leaveType: Optional[LeaveType3] = Field(
        None,
        description='The type of leave requested by the employee\n\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    submittedBy: Optional[SubmittedBy] = None
    submittedOn: Optional[datetime] = Field(
        None,
        description='The time the leave request was submitted',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsLeaveRequestIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message331]] = None
    content: Optional[Content69] = None


class Message332(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsLeaveRequestIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message332]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsLeaverequestsLeaveRequestIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsLeaveRequestIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsLeaveRequestIdPutRequest(
    BaseModel
):
    commentEmployee: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the employee',
        examples=['Vakantie naar Spanje'],
    )
    commentHandler: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the person handling the leave request',
        examples=['Fijne vakantie!'],
    )
    currentlyAvailableUnits: Optional[float] = Field(
        None,
        description='The number of leave units (of the leaveType for this leave request) available to the employment.\nThis value can be negative.',
        examples=[140],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    handledBy: Optional[HandledBy] = None
    handledTime: Optional[datetime] = Field(
        None,
        description='The date and time the leave request was handled',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        False,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveRequestStatus: Optional[LeaveRequestStatus] = Field(
        None,
        description='The current status of the leave request\n\nThe leave request status is changed by using the PATCH endpoint (not the PUT).\n\nThe following transitions are possible\n* leaveRequestStatus = submitted -> accepted or rejected\n* leaveRequestStatus = accepted -> no changes possible\n* leaveRequestStatus = rejected -> submitted\n* leaveRequestStatus = revoked by user -> no changes possible\n* leaveRequestStatus = related leave deleted -> no changes possible',
    )
    leaveType: Optional[LeaveType3] = Field(
        None,
        description='The type of leave requested by the employee\n\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    submittedBy: Optional[SubmittedBy] = None
    submittedOn: Optional[datetime] = Field(
        None,
        description='The time the leave request was submitted',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class Message333(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content70(BaseModel):
    commentEmployee: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the employee',
        examples=['Vakantie naar Spanje'],
    )
    commentHandler: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the person handling the leave request',
        examples=['Fijne vakantie!'],
    )
    currentlyAvailableUnits: Optional[float] = Field(
        None,
        description='The number of leave units (of the leaveType for this leave request) available to the employment.\nThis value can be negative.',
        examples=[140],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    handledBy: Optional[HandledBy] = None
    handledTime: Optional[datetime] = Field(
        None,
        description='The date and time the leave request was handled',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        False,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveRequestStatus: Optional[LeaveRequestStatus] = Field(
        None,
        description='The current status of the leave request\n\nThe leave request status is changed by using the PATCH endpoint (not the PUT).\n\nThe following transitions are possible\n* leaveRequestStatus = submitted -> accepted or rejected\n* leaveRequestStatus = accepted -> no changes possible\n* leaveRequestStatus = rejected -> submitted\n* leaveRequestStatus = revoked by user -> no changes possible\n* leaveRequestStatus = related leave deleted -> no changes possible',
    )
    leaveType: Optional[LeaveType3] = Field(
        None,
        description='The type of leave requested by the employee\n\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    submittedBy: Optional[SubmittedBy] = None
    submittedOn: Optional[datetime] = Field(
        None,
        description='The time the leave request was submitted',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsLeaveRequestIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message333]] = None
    content: Optional[Content70] = None


class Message334(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsLeaveRequestIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message334]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsLeaverequestsLeaveRequestIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsLeaveRequestIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsLeaverequestsLeaveRequestIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message334]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message334]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message334]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message338(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AccessibleBy(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for accessible by', examples=[1]
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the accessible by', examples=['Everyone']
    )


class CreatedBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class LastModifiedBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class FieldEmbeddedItem27(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message338]] = None
    field_embedded: Optional[List[FieldEmbeddedItem27]] = Field(None, alias='_embedded')


class Message339(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message339]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdPutRequest(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class Message340(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content71(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message340]] = None
    content: Optional[Content71] = None


class Message341(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message341]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsNotesNoteIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message341]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message341]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message341]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message345(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Department3(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Verkoop'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class DistributionUnit3(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Sales'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Function3(BaseModel):
    description: Optional[constr(max_length=50)] = Field(None, examples=['Directeur'])
    group: Optional[constr(max_length=5)] = Field(None, examples=['internal'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Content72(BaseModel):
    department: Optional[Department3] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[constr(max_length=50)] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[constr(max_length=5)] = Field(
        None,
        description='The deviating function group description of the employment. Only applies when a deviating function description is defined.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    function: Optional[Function3] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    internalTelephoneExtensionNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the standard working location (standplaats) for the employment.',
        examples=['678'],
    )
    placeOfEmployment: Optional[constr(max_length=24)] = Field(
        None,
        description='The standard working location (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message345]] = None
    content: Optional[Content72] = None


class Message346(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message346]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdPutRequest(
    BaseModel
):
    department: Optional[Department3] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[constr(max_length=50)] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[constr(max_length=5)] = Field(
        None,
        description='The deviating function group description of the employment. Only applies when a deviating function description is defined.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    function: Optional[Function3] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    internalTelephoneExtensionNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the standard working location (standplaats) for the employment.',
        examples=['678'],
    )
    placeOfEmployment: Optional[constr(max_length=24)] = Field(
        None,
        description='The standard working location (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class Message347(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content73(BaseModel):
    department: Optional[Department3] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[constr(max_length=50)] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[constr(max_length=5)] = Field(
        None,
        description='The deviating function group description of the employment. Only applies when a deviating function description is defined.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    function: Optional[Function3] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    internalTelephoneExtensionNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the standard working location (standplaats) for the employment.',
        examples=['678'],
    )
    placeOfEmployment: Optional[constr(max_length=24)] = Field(
        None,
        description='The standard working location (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message347]] = None
    content: Optional[Content73] = None


class Message348(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message348]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsOrganizationalentitiesOrganizationalEntityIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message348]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message348]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message348]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message352(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class InsuranceProperties(BaseModel):
    applicableForNoRiskPolicy: Optional[bool] = Field(
        None,
        description='Indicates if the employment is applicable for the "Looncompensatie bij ziekte (no-riskpolis)" as defined by the UWV.\n\nPlease check with the UWV to determine when to set the value to true.',
        examples=[False],
    )


class CollectiveLaborAgreementCodeHiringEmployer(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the CAO', examples=['2018-10-23']
    )
    key: Optional[int] = Field(None, examples=[151])
    startDate: Optional[date_aliased] = Field(
        None, description='The start date of the CAO', examples=['2018-01-01']
    )
    value: Optional[constr(max_length=90)] = Field(None, examples=['TUINBOUWVEILINGEN'])


class DeviatingPremiumGroup3(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['(1) Agrarisch bedrijf kort']
    )


class IncidentalIncomeDeduction(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Bevalling of zwangerschap']
    )


class OccupationalDisabilityPremiumDiscount(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=80)] = Field(
        None,
        examples=[
            '(7) Werknemer van 62, 63 of 64 jaar voor wie code 6 niet van toepassing is'
        ],
    )


class PhaseClassification(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=60)] = Field(
        None, examples=['(38) Fase A zonder uitzendbeding met uitsluiting van ldv']
    )


class TerminateIncomenumberFlexibleEmployment(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['(1) Einde werk/contract, geen werk aangeboden']
    )


class WageCostBenefit(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['LKV herplaatsen arbeidsgehandicapte werknemer']
    )


class PayrollProperties(BaseModel):
    applyMinimumWageVocationalLearningPathway: Optional[bool] = Field(
        None,
        description='Minimum wage vocational learning pathway (Minimumloon BBL) <to do>',
    )
    applyYearlyHoursNorm: Optional[bool] = Field(
        None,
        description='applyYearlyHoursNorm (jaarurennorm) indicates if the contract is based on a set numbers of hours per year and a set wage is payed every payroll period.',
        examples=[False],
    )
    collectiveLaborAgreementCodeHiringEmployer: Optional[
        CollectiveLaborAgreementCodeHiringEmployer
    ] = Field(
        None,
        description='"CAO code inlener" The CAO code to be used in the payrolltax taxreturn for an employment that is "hired through agents" / " hired through an intermediary/third party".\nFor more information when to set this value please check "Gegevensspecificaties aangifte loonheffingen 2020 v2.0 11 juli 2019"',
    )
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup3] = Field(
        None,
        description='Deviating premium group (Afwijkende premiegroep sectorfonds), indicates what deviating premie sector funds applies to the employment.  Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )
    incidentalIncomeDeduction: Optional[IncidentalIncomeDeduction] = Field(
        None,
        description='Incidental income deduction (Incidentele inkomstenvermindering) <to do>\n\nIndien gebruik gemaakt wordt van onbetaald verlof en/of ziekte uren dan wordt automatisch de code incidentele inkomstenvermindering in de loonaangifte bepaald (rubriek in de loonaangifte welke aangeeft dat het loon door ziekte of onbetaald verlof tijdelijk lager is dan het overeengekomen loon). In overige gevallen kan loket.nl niet automatisch bepalen of er sprake is van een incidentele inkomstenvermindering.  In deze rubriek dient dan de juiste waarde ingevuld te worden',
    )
    occupationalDisabilityDeductionAfter2009: Optional[
        confloat(ge=0.01, le=9999.99)
    ] = Field(
        None,
        description='(OccupationalDisability) Deduction after 2009 (Arbeidsgeh.krt na 2009 (tm 2009 WAO)) <to do>\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
        examples=[1],
    )
    occupationalDisabilityDeductionTo2009: Optional[confloat(ge=0.01, le=9999.99)] = (
        Field(
            None,
            description='(OccupationalDisability) Deduction to 2009 (including 2009) (Arbeidsgeh.krt (tm 2009 AWF/UFO))\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
            examples=[1],
        )
    )
    occupationalDisabilityPremiumDiscount: Optional[
        OccupationalDisabilityPremiumDiscount
    ] = Field(
        None,
        description='Occupational disability premium discount (arbeidsgehandicaptenkorting) not to be used after 2017. It indicates if "arbeidsgehandicaptenkorting" is applicable to this employment.\n\nIndicatie die aangeeft of er arbeidsgehandicaptenkorting of korting in dienst nemen van ouderen werknemer van toepassing is. Loket.nl zal bij invulling automatisch de juiste kortingen berekenen. Vanaf 2013 zijn alleen nog de codes 5 en 6 van toepassing. Indien codes 1 t/m 4 zijn ingevuld in 2013 dan interpreteert loket.nl als code 5.',
    )
    phaseClassification: Optional[PhaseClassification] = Field(
        None,
        description='Phase classification (Fase indeling) <to do>\n\nIndicatie die aangeeft in welke fase de inkomstenverhouding voor bepaalde tijd zich bevindt in het kader van de Wet Flexibiliteit en Zekerheid.',
    )
    terminateIncomenumberFlexibleEmployment: Optional[
        TerminateIncomenumberFlexibleEmployment
    ] = Field(
        None,
        description='Terminate incomenumber flexible employment (Einde inkomstenverh.Flexwerker) <to do>',
    )
    wageCostBenefit: Optional[WageCostBenefit] = Field(
        None,
        description='Wage cost benefit (loonkostenvoordeel (LKV)). If applicable select the correct option to reduces the costs for an employer to employ the employee. \n\n__UWV:__ Het loonkostenvoordeel (LKV) is een onderdeel van de Wet tegemoetkomingen loondomein (Wtl). Het LKV is een tegemoetkoming voor werkgevers die 1 of meer oudere werknemers en/of werknemers met een arbeidsbeperking in dienst nemen of houden.',
    )
    wajongWithWageDispensation: Optional[bool] = Field(
        None,
        description='wajongWithDispensation  (Wajong met loondispensatie (was Doelgroep banenafspraak)) indicates that the employer has the express premission to lower the wage of this employment (even below minimum wage). This indicator will disable the validation on minimum wage for this employment.',
        examples=[False],
    )


class DeviatingDisabilityInsuranceActPercentageForCordares(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['15- 25 %'])


class LeaveType6(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Politiek verlof'])


class LeaveAbp(BaseModel):
    leaveType: Optional[LeaveType6] = Field(
        None, description='Leave type (Verlofsoort ABP) for ABP. <to do>'
    )
    valueOfParticipationDuringLeave: Optional[conint(ge=1, le=100)] = Field(
        None,
        description='valueOfParticipation (waardeDeelnemerschap) (pensioen opbouw voor ambtenaren ABP)',
        examples=[1],
    )


class SpecificationOfIncomeRelationshipApg(BaseModel):
    code: Optional[constr(max_length=4)] = Field(None, examples=['WNE'])
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=75)] = Field(
        None, examples=['Geen bijzonderheden']
    )


class PensionProperties(BaseModel):
    annualCalculationBaseAbp: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='annualCalculationBase (jaargrondslag voor ABP) for ABP <to do>',
        examples=[1.5],
    )
    applyDispensationRiskFund: Optional[bool] = Field(
        None,
        description='applyDispensationRiskFund (Disp. risicofonds) <to do>',
        examples=[False],
    )
    compulsoryEducationDays: Optional[conint(ge=1, le=2)] = Field(
        None,
        description='compulsoryEducationDays (Aantal dagen leerplicht) <to do>',
        examples=[2],
    )
    deviatingDisabilityInsuranceActPercentageForCordares: Optional[
        DeviatingDisabilityInsuranceActPercentageForCordares
    ] = Field(
        None,
        description='deviatingDisabilityInsuranceActPercentageForCordares (WAO % Cordares) used for Cordares. <to do>',
    )
    leaveAbp: Optional[LeaveAbp] = Field(
        None,
        description="If both `leaveType` and `valueOfParticipationDuringLeave` are empty this parent object will be set to null. The same holds true when puting or posting this object. set `leaveAbp` to null when both `leaveType` and `valueOfParticipationDuringLeave` don't have a value",
    )
    occupationalPensionFund: Optional[conint(ge=1, le=99)] = Field(
        None, description='Occupational Pension Fund (BPF-code) <to do>', examples=[2]
    )
    specificationOfIncomeRelationshipApg: Optional[
        SpecificationOfIncomeRelationshipApg
    ] = Field(
        None,
        description='specificationOfIncomeRelationship (APGVerbijzonderingInkomstenverhouding) used for the APG pension fund. <to do>',
    )


class FieldEmbeddedItem28(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    insuranceProperties: Optional[InsuranceProperties] = None
    payrollProperties: Optional[PayrollProperties] = None
    pensionProperties: Optional[PensionProperties] = None
    productivityPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='productivityPercentage (Productiviteitspercentage) can be used to indicate the productivity percentage of an employment.',
        examples=[100],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this record starts.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained with this record.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message352]] = None
    field_embedded: Optional[List[FieldEmbeddedItem28]] = Field(None, alias='_embedded')


class Message353(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message353]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollProperties1(BaseModel):
    applyMinimumWageVocationalLearningPathway: Optional[bool] = Field(
        None,
        description='Minimum wage vocational learning pathway (Minimumloon BBL) <to do>',
    )
    applyYearlyHoursNorm: Optional[bool] = Field(
        None,
        description='applyYearlyHoursNorm (jaarurennorm) indicates if the contract is based on a set numbers of hours per year and a set wage is payed every payroll period.',
        examples=[False],
    )
    collectiveLaborAgreementCodeHiringEmployer: Optional[
        CollectiveLaborAgreementCodeHiringEmployer
    ] = Field(
        None,
        description='"CAO code inlener" The CAO code to be used in the payrolltax taxreturn for an employment that is "hired through agents" / " hired through an intermediary/third party".\nFor more information when to set this value please check "Gegevensspecificaties aangifte loonheffingen 2020 v2.0 11 juli 2019"',
    )
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup3] = Field(
        None,
        description='Deviating premium group (Afwijkende premiegroep sectorfonds), indicates what deviating premie sector funds applies to the employment.  Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )
    incidentalIncomeDeduction: Optional[IncidentalIncomeDeduction] = Field(
        None,
        description='Incidental income deduction (Incidentele inkomstenvermindering) <to do>\n\nIndien gebruik gemaakt wordt van onbetaald verlof en/of ziekte uren dan wordt automatisch de code incidentele inkomstenvermindering in de loonaangifte bepaald (rubriek in de loonaangifte welke aangeeft dat het loon door ziekte of onbetaald verlof tijdelijk lager is dan het overeengekomen loon). In overige gevallen kan loket.nl niet automatisch bepalen of er sprake is van een incidentele inkomstenvermindering.  In deze rubriek dient dan de juiste waarde ingevuld te worden',
    )
    occupationalDisabilityDeductionAfter2009: Optional[
        confloat(ge=0.01, le=9999.99)
    ] = Field(
        None,
        description='(OccupationalDisability) Deduction after 2009 (Arbeidsgeh.krt na 2009 (tm 2009 WAO)) <to do>\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
        examples=[1],
    )
    occupationalDisabilityDeductionTo2009: Optional[confloat(ge=0.01, le=9999.99)] = (
        Field(
            None,
            description='(OccupationalDisability) Deduction to 2009 (including 2009) (Arbeidsgeh.krt (tm 2009 AWF/UFO))\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
            examples=[1],
        )
    )
    occupationalDisabilityPremiumDiscount: Optional[
        OccupationalDisabilityPremiumDiscount
    ] = Field(
        None,
        description='Occupational disability premium discount (arbeidsgehandicaptenkorting) not to be used after 2017. It indicates if "arbeidsgehandicaptenkorting" is applicable to this employment.\n\nIndicatie die aangeeft of er arbeidsgehandicaptenkorting of korting in dienst nemen van ouderen werknemer van toepassing is. Loket.nl zal bij invulling automatisch de juiste kortingen berekenen. Vanaf 2013 zijn alleen nog de codes 5 en 6 van toepassing. Indien codes 1 t/m 4 zijn ingevuld in 2013 dan interpreteert loket.nl als code 5.',
    )
    phaseClassification: Optional[PhaseClassification] = Field(
        None,
        description='Phase classification (Fase indeling) <to do>\n\nIndicatie die aangeeft in welke fase de inkomstenverhouding voor bepaalde tijd zich bevindt in het kader van de Wet Flexibiliteit en Zekerheid.',
    )
    terminateIncomenumberFlexibleEmployment: Optional[
        TerminateIncomenumberFlexibleEmployment
    ] = Field(
        None,
        description='Terminate incomenumber flexible employment (Einde inkomstenverh.Flexwerker) <to do>',
    )
    wageCostBenefit: Optional[WageCostBenefit] = Field(
        None,
        description='Wage cost benefit (loonkostenvoordeel (LKV)). If applicable select the correct option to reduces the costs for an employer to employ the employee. \n\n__UWV:__ Het loonkostenvoordeel (LKV) is een onderdeel van de Wet tegemoetkomingen loondomein (Wtl). Het LKV is een tegemoetkoming voor werkgevers die 1 of meer oudere werknemers en/of werknemers met een arbeidsbeperking in dienst nemen of houden.',
    )
    wajongWithWageDispensation: Optional[bool] = Field(
        None,
        description='wajongWithDispensation  (Wajong met loondispensatie (was Doelgroep banenafspraak)) indicates that the employer has the express premission to lower the wage of this employment (even below minimum wage). This indicator will disable the validation on minimum wage for this employment.',
        examples=[False],
    )


class LeaveAbp1(BaseModel):
    leaveType: Optional[LeaveType6] = Field(
        None, description='Leave type (Verlofsoort ABP) for ABP. <to do>'
    )
    valueOfParticipationDuringLeave: Optional[conint(ge=1, le=100)] = Field(
        None,
        description='valueOfParticipation (waardeDeelnemerschap) (pensioen opbouw voor ambtenaren ABP)',
        examples=[1],
    )


class PensionProperties1(BaseModel):
    annualCalculationBaseAbp: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='annualCalculationBase (jaargrondslag voor ABP) for ABP <to do>',
        examples=[1.5],
    )
    applyDispensationRiskFund: Optional[bool] = Field(
        None,
        description='applyDispensationRiskFund (Disp. risicofonds) <to do>',
        examples=[False],
    )
    compulsoryEducationDays: Optional[conint(ge=1, le=2)] = Field(
        None,
        description='compulsoryEducationDays (Aantal dagen leerplicht) <to do>',
        examples=[2],
    )
    deviatingDisabilityInsuranceActPercentageForCordares: Optional[
        DeviatingDisabilityInsuranceActPercentageForCordares
    ] = Field(
        None,
        description='deviatingDisabilityInsuranceActPercentageForCordares (WAO % Cordares) used for Cordares. <to do>',
    )
    leaveAbp: Optional[LeaveAbp1] = Field(
        None,
        description="If both `leaveType` and `valueOfParticipationDuringLeave` are empty this parent object will be set to null. The same holds true when puting or posting this object. set `leaveAbp` to null when both `leaveType` and `valueOfParticipationDuringLeave` don't have a value",
    )
    occupationalPensionFund: Optional[conint(ge=1, le=99)] = Field(
        None, description='Occupational Pension Fund (BPF-code) <to do>', examples=[2]
    )
    specificationOfIncomeRelationshipApg: Optional[
        SpecificationOfIncomeRelationshipApg
    ] = Field(
        None,
        description='specificationOfIncomeRelationship (APGVerbijzonderingInkomstenverhouding) used for the APG pension fund. <to do>',
    )


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdPutRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    insuranceProperties: Optional[InsuranceProperties] = None
    payrollProperties: Optional[PayrollProperties1] = None
    pensionProperties: Optional[PensionProperties1] = None
    productivityPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='productivityPercentage (Productiviteitspercentage) can be used to indicate the productivity percentage of an employment.',
        examples=[100],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this record starts.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained with this record.',
        examples=['2018-01-01'],
    )


class Message354(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollProperties2(BaseModel):
    applyMinimumWageVocationalLearningPathway: Optional[bool] = Field(
        None,
        description='Minimum wage vocational learning pathway (Minimumloon BBL) <to do>',
    )
    applyYearlyHoursNorm: Optional[bool] = Field(
        None,
        description='applyYearlyHoursNorm (jaarurennorm) indicates if the contract is based on a set numbers of hours per year and a set wage is payed every payroll period.',
        examples=[False],
    )
    collectiveLaborAgreementCodeHiringEmployer: Optional[
        CollectiveLaborAgreementCodeHiringEmployer
    ] = Field(
        None,
        description='"CAO code inlener" The CAO code to be used in the payrolltax taxreturn for an employment that is "hired through agents" / " hired through an intermediary/third party".\nFor more information when to set this value please check "Gegevensspecificaties aangifte loonheffingen 2020 v2.0 11 juli 2019"',
    )
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup3] = Field(
        None,
        description='Deviating premium group (Afwijkende premiegroep sectorfonds), indicates what deviating premie sector funds applies to the employment.  Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )
    incidentalIncomeDeduction: Optional[IncidentalIncomeDeduction] = Field(
        None,
        description='Incidental income deduction (Incidentele inkomstenvermindering) <to do>\n\nIndien gebruik gemaakt wordt van onbetaald verlof en/of ziekte uren dan wordt automatisch de code incidentele inkomstenvermindering in de loonaangifte bepaald (rubriek in de loonaangifte welke aangeeft dat het loon door ziekte of onbetaald verlof tijdelijk lager is dan het overeengekomen loon). In overige gevallen kan loket.nl niet automatisch bepalen of er sprake is van een incidentele inkomstenvermindering.  In deze rubriek dient dan de juiste waarde ingevuld te worden',
    )
    occupationalDisabilityDeductionAfter2009: Optional[
        confloat(ge=0.01, le=9999.99)
    ] = Field(
        None,
        description='(OccupationalDisability) Deduction after 2009 (Arbeidsgeh.krt na 2009 (tm 2009 WAO)) <to do>\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
        examples=[1],
    )
    occupationalDisabilityDeductionTo2009: Optional[confloat(ge=0.01, le=9999.99)] = (
        Field(
            None,
            description='(OccupationalDisability) Deduction to 2009 (including 2009) (Arbeidsgeh.krt (tm 2009 AWF/UFO))\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
            examples=[1],
        )
    )
    occupationalDisabilityPremiumDiscount: Optional[
        OccupationalDisabilityPremiumDiscount
    ] = Field(
        None,
        description='Occupational disability premium discount (arbeidsgehandicaptenkorting) not to be used after 2017. It indicates if "arbeidsgehandicaptenkorting" is applicable to this employment.\n\nIndicatie die aangeeft of er arbeidsgehandicaptenkorting of korting in dienst nemen van ouderen werknemer van toepassing is. Loket.nl zal bij invulling automatisch de juiste kortingen berekenen. Vanaf 2013 zijn alleen nog de codes 5 en 6 van toepassing. Indien codes 1 t/m 4 zijn ingevuld in 2013 dan interpreteert loket.nl als code 5.',
    )
    phaseClassification: Optional[PhaseClassification] = Field(
        None,
        description='Phase classification (Fase indeling) <to do>\n\nIndicatie die aangeeft in welke fase de inkomstenverhouding voor bepaalde tijd zich bevindt in het kader van de Wet Flexibiliteit en Zekerheid.',
    )
    terminateIncomenumberFlexibleEmployment: Optional[
        TerminateIncomenumberFlexibleEmployment
    ] = Field(
        None,
        description='Terminate incomenumber flexible employment (Einde inkomstenverh.Flexwerker) <to do>',
    )
    wageCostBenefit: Optional[WageCostBenefit] = Field(
        None,
        description='Wage cost benefit (loonkostenvoordeel (LKV)). If applicable select the correct option to reduces the costs for an employer to employ the employee. \n\n__UWV:__ Het loonkostenvoordeel (LKV) is een onderdeel van de Wet tegemoetkomingen loondomein (Wtl). Het LKV is een tegemoetkoming voor werkgevers die 1 of meer oudere werknemers en/of werknemers met een arbeidsbeperking in dienst nemen of houden.',
    )
    wajongWithWageDispensation: Optional[bool] = Field(
        None,
        description='wajongWithDispensation  (Wajong met loondispensatie (was Doelgroep banenafspraak)) indicates that the employer has the express premission to lower the wage of this employment (even below minimum wage). This indicator will disable the validation on minimum wage for this employment.',
        examples=[False],
    )


class LeaveAbp2(BaseModel):
    leaveType: Optional[LeaveType6] = Field(
        None, description='Leave type (Verlofsoort ABP) for ABP. <to do>'
    )
    valueOfParticipationDuringLeave: Optional[conint(ge=1, le=100)] = Field(
        None,
        description='valueOfParticipation (waardeDeelnemerschap) (pensioen opbouw voor ambtenaren ABP)',
        examples=[1],
    )


class PensionProperties2(BaseModel):
    annualCalculationBaseAbp: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='annualCalculationBase (jaargrondslag voor ABP) for ABP <to do>',
        examples=[1.5],
    )
    applyDispensationRiskFund: Optional[bool] = Field(
        None,
        description='applyDispensationRiskFund (Disp. risicofonds) <to do>',
        examples=[False],
    )
    compulsoryEducationDays: Optional[conint(ge=1, le=2)] = Field(
        None,
        description='compulsoryEducationDays (Aantal dagen leerplicht) <to do>',
        examples=[2],
    )
    deviatingDisabilityInsuranceActPercentageForCordares: Optional[
        DeviatingDisabilityInsuranceActPercentageForCordares
    ] = Field(
        None,
        description='deviatingDisabilityInsuranceActPercentageForCordares (WAO % Cordares) used for Cordares. <to do>',
    )
    leaveAbp: Optional[LeaveAbp2] = Field(
        None,
        description="If both `leaveType` and `valueOfParticipationDuringLeave` are empty this parent object will be set to null. The same holds true when puting or posting this object. set `leaveAbp` to null when both `leaveType` and `valueOfParticipationDuringLeave` don't have a value",
    )
    occupationalPensionFund: Optional[conint(ge=1, le=99)] = Field(
        None, description='Occupational Pension Fund (BPF-code) <to do>', examples=[2]
    )
    specificationOfIncomeRelationshipApg: Optional[
        SpecificationOfIncomeRelationshipApg
    ] = Field(
        None,
        description='specificationOfIncomeRelationship (APGVerbijzonderingInkomstenverhouding) used for the APG pension fund. <to do>',
    )


class Content74(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    insuranceProperties: Optional[InsuranceProperties] = None
    payrollProperties: Optional[PayrollProperties2] = None
    pensionProperties: Optional[PensionProperties2] = None
    productivityPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='productivityPercentage (Productiviteitspercentage) can be used to indicate the productivity percentage of an employment.',
        examples=[100],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this record starts.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained with this record.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message354]] = None
    content: Optional[Content74] = None


class Message355(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message355]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsOtherPayrollVariablesOtherPayrollVariablesIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message355]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message355]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message355]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message359(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country19(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Bank(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary bank\n', examples=['Via Roma 3']
    )
    bankIdentifierCode: Optional[constr(min_length=1, max_length=11)] = Field(
        None, description='BIC /SWIFT code for the bank\n', examples=['AUDFDE21']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary bank\n', examples=['Rome']
    )
    country: Optional[Country19] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of benificiary bank\n', examples=['Ben Hur']
    )


class Country20(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\n\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Beneficiary3(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary\n', examples=['Via Roma 3']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    country: Optional[Country20] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of the beneficiary\n', examples=['Ben Hur']
    )


class PayrollComponent9(BaseModel):
    key: Optional[int] = Field(
        None, description='The number for the payroll component\n', examples=[260]
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['NETTOLOON'],
    )


class Content75(BaseModel):
    bank: Optional[Bank] = Field(
        None,
        description='Information regarding the bank coresponding with the bank account number',
    )
    bankAccountNumber: Optional[constr(min_length=1, max_length=34)] = Field(
        None, description='The bank account number\n', examples=['0403830171874018']
    )
    beneficiary: Optional[Beneficiary3] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent9] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\nEach payroll component can only be used once per employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message359]] = None
    content: Optional[Content75] = None


class Message360(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message360]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Country21(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Bank1(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary bank\n', examples=['Via Roma 3']
    )
    bankIdentifierCode: Optional[constr(min_length=1, max_length=11)] = Field(
        None, description='BIC /SWIFT code for the bank\n', examples=['AUDFDE21']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary bank\n', examples=['Rome']
    )
    country: Optional[Country21] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of benificiary bank\n', examples=['Ben Hur']
    )


class Country22(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\n\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Beneficiary4(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary\n', examples=['Via Roma 3']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    country: Optional[Country22] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of the beneficiary\n', examples=['Ben Hur']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdPutRequest(
    BaseModel
):
    bank: Optional[Bank1] = Field(
        None,
        description='Information regarding the bank coresponding with the bank account number',
    )
    bankAccountNumber: Optional[constr(min_length=1, max_length=34)] = Field(
        None, description='The bank account number\n', examples=['0403830171874018']
    )
    beneficiary: Optional[Beneficiary4] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent9] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\nEach payroll component can only be used once per employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class Message361(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country23(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Bank2(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary bank\n', examples=['Via Roma 3']
    )
    bankIdentifierCode: Optional[constr(min_length=1, max_length=11)] = Field(
        None, description='BIC /SWIFT code for the bank\n', examples=['AUDFDE21']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary bank\n', examples=['Rome']
    )
    country: Optional[Country23] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of benificiary bank\n', examples=['Ben Hur']
    )


class Country24(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\n\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Beneficiary5(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary\n', examples=['Via Roma 3']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    country: Optional[Country24] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of the beneficiary\n', examples=['Ben Hur']
    )


class Content76(BaseModel):
    bank: Optional[Bank2] = Field(
        None,
        description='Information regarding the bank coresponding with the bank account number',
    )
    bankAccountNumber: Optional[constr(min_length=1, max_length=34)] = Field(
        None, description='The bank account number\n', examples=['0403830171874018']
    )
    beneficiary: Optional[Beneficiary5] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent9] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\nEach payroll component can only be used once per employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message361]] = None
    content: Optional[Content76] = None


class Message362(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message362]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationnonsepaPaymentInformationNonSepaIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message362]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message362]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message362]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message366(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent12(BaseModel):
    key: Optional[int] = Field(None, examples=[260])
    value: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )


class Content77(BaseModel):
    bic: Optional[constr(min_length=1, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary.\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary.\n', examples=['Ben Hur']
    )
    payrollComponent: Optional[PayrollComponent12] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message366]] = None
    content: Optional[Content77] = None


class Beneficiary6(BaseModel):
    city: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary.\n', examples=['Rome']
    )
    name: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary.\n', examples=['Ben Hur']
    )


class PayrollComponent13(BaseModel):
    description: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )
    key: Optional[int] = Field(None, examples=[260])


class Content78(BaseModel):
    beneficiary: Optional[Beneficiary6] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    bic: Optional[constr(min_length=0, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=0, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent13] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message366]] = None
    content: Optional[Content78] = None


class Message368(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdGetResponse2(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message368]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdGetResponse4(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollComponent14(BaseModel):
    key: Optional[int] = Field(None, examples=[260])
    value: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdPutRequest(
    BaseModel
):
    bic: Optional[constr(min_length=1, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary.\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary.\n', examples=['Ben Hur']
    )
    payrollComponent: Optional[PayrollComponent14] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class PayrollComponent15(BaseModel):
    description: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )
    key: Optional[int] = Field(None, examples=[260])


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdPutRequest1(
    BaseModel
):
    beneficiary: Optional[Beneficiary6] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    bic: Optional[constr(min_length=0, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=0, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent15] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class Message369(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent16(BaseModel):
    key: Optional[int] = Field(None, examples=[260])
    value: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )


class Content79(BaseModel):
    bic: Optional[constr(min_length=1, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary.\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary.\n', examples=['Ben Hur']
    )
    payrollComponent: Optional[PayrollComponent16] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message369]] = None
    content: Optional[Content79] = None


class PayrollComponent17(BaseModel):
    description: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )
    key: Optional[int] = Field(None, examples=[260])


class Content80(BaseModel):
    beneficiary: Optional[Beneficiary6] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    bic: Optional[constr(min_length=0, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=0, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent17] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message369]] = None
    content: Optional[Content80] = None


class Message371(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdPutResponse2(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message371]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdPutResponse4(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaPaymentInformationSepaIdPutResponse5(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message371]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message371]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message371]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message375(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content81(BaseModel):
    amount: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The amount to be split from the net salary', examples=[32]
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary\n', examples=['Ben Hur']
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message375]] = None
    content: Optional[Content81] = None


class Message376(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message376]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdPutRequest(
    BaseModel
):
    amount: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The amount to be split from the net salary', examples=[32]
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary\n', examples=['Ben Hur']
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )


class Message377(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message377]] = None
    content: Optional[Content81] = None


class Message378(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message378]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsPaymentinformationsepaseparatepaymentsPaymentInformationSepaSeparatePaymentIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message378]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message378]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message378]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message382(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent19(BaseModel):
    canBeSupplemented: Optional[bool] = Field(
        None,
        description='Indicates whether the atribute for this payroll component can have the value `supplement`. Refer to the description of the attribute field for an explanation.\n',
        examples=[False],
    )
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[1],
    )


class PayrollComponent18(BaseModel):
    isSupplement: Optional[bool] = Field(
        None,
        description='This boolean determines what the salary calculation will do with the value of the payroll component if the payroll component has values in both the payroll period specific data (this endpoint) and in the non-payroll period specific configuration of the employment (it is possible to configure values for payroll components that span multiple payroll periods and even parts thereof).\n\n* When set to `false`, the value of the payroll component will overwrite the value specified in the non-payroll period specific data with the given value in the payroll period specific date.\n\n* When set to `true`, the value of the payroll period specific data will be added to the value of the non-payroll period specific data. Note that a value can be a negative number. For instance, a payroll period specific value of 20 and a non-payroll period specific value of -8 will effectively result in 12 for salary calculation.\n\nThis boolean can only be set to `true` in components for which `payrollComponent.canBesupplemented = true`.\n',
        examples=[False],
    )
    payrollComponent: Optional[PayrollComponent19] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period.  <br/>  Please note: Business rules may differ per component! Understanding these business rules and corresponding validations requires functional knowledge of Loket.\n',
    )
    value: Optional[float] = Field(
        None,
        description='Depending on the selected payroll component the possible value(s) for this field change (dynamic business rules).\n',
        examples=[144],
    )


class PayrollPeriod(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period to which the payroll period data applies\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the payroll period in which the payroll data is to be processed.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period to which the payroll period data applies\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the payroll period in which the payroll data is to be processed\n',
        examples=[2017],
    )


class PayslipType(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Bijzonder tarief strook'])


class Shift3(BaseModel):
    bonusPercentage: Optional[float] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift.\n',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[float] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.\n',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None,
        description='The number for the shift. Loket.nl supports a maximum of 5 shifts per payroll administration.\n',
        examples=[1],
    )


class Content83(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The cost center on which the payroll period data for this record will be booked for the ledger.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The cost unit on which the data for this record will be booked for the ledger\n',
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponents: Optional[List[PayrollComponent18]] = None
    payrollPeriod: Optional[PayrollPeriod] = None
    payslipText: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='A custom text to be displayed on the payslip.\n',
        examples=['Additional payslip for bonus'],
    )
    payslipType: Optional[PayslipType] = Field(
        None,
        description='The type of payslip (as defined by the Dutch tax authorities)\n',
    )
    shift: Optional[Shift3] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n',
    )


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message382]] = None
    content: Optional[Content83] = None


class Message383(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message383]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollComponent21(BaseModel):
    canBeSupplemented: Optional[bool] = Field(
        None,
        description='Indicates whether the atribute for this payroll component can have the value `supplement`. Refer to the description of the attribute field for an explanation.\n',
        examples=[False],
    )
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[1],
    )


class PayrollComponent20(BaseModel):
    isSupplement: Optional[bool] = Field(
        None,
        description='This boolean determines what the salary calculation will do with the value of the payroll component if the payroll component has values in both the payroll period specific data (this endpoint) and in the non-payroll period specific configuration of the employment (it is possible to configure values for payroll components that span multiple payroll periods and even parts thereof).\n\n* When set to `false`, the value of the payroll component will overwrite the value specified in the non-payroll period specific data with the given value in the payroll period specific date.\n\n* When set to `true`, the value of the payroll period specific data will be added to the value of the non-payroll period specific data. Note that a value can be a negative number. For instance, a payroll period specific value of 20 and a non-payroll period specific value of -8 will effectively result in 12 for salary calculation.\n\nThis boolean can only be set to `true` in components for which `payrollComponent.canBesupplemented = true`.\n',
        examples=[False],
    )
    payrollComponent: Optional[PayrollComponent21] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period.  <br/>  Please note: Business rules may differ per component! Understanding these business rules and corresponding validations requires functional knowledge of Loket.\n',
    )
    value: Optional[float] = Field(
        None,
        description='Depending on the selected payroll component the possible value(s) for this field change (dynamic business rules).\n',
        examples=[144],
    )


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdPutRequest(
    BaseModel
):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The cost center on which the payroll period data for this record will be booked for the ledger.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The cost unit on which the data for this record will be booked for the ledger\n',
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponents: Optional[List[PayrollComponent20]] = None
    payrollPeriod: Optional[PayrollPeriod] = None
    payslipText: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='A custom text to be displayed on the payslip.\n',
        examples=['Additional payslip for bonus'],
    )
    payslipType: Optional[PayslipType] = Field(
        None,
        description='The type of payslip (as defined by the Dutch tax authorities)\n',
    )
    shift: Optional[Shift3] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n',
    )


class Message384(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent23(BaseModel):
    canBeSupplemented: Optional[bool] = Field(
        None,
        description='Indicates whether the atribute for this payroll component can have the value `supplement`. Refer to the description of the attribute field for an explanation.\n',
        examples=[False],
    )
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[1],
    )


class PayrollComponent22(BaseModel):
    isSupplement: Optional[bool] = Field(
        None,
        description='This boolean determines what the salary calculation will do with the value of the payroll component if the payroll component has values in both the payroll period specific data (this endpoint) and in the non-payroll period specific configuration of the employment (it is possible to configure values for payroll components that span multiple payroll periods and even parts thereof).\n\n* When set to `false`, the value of the payroll component will overwrite the value specified in the non-payroll period specific data with the given value in the payroll period specific date.\n\n* When set to `true`, the value of the payroll period specific data will be added to the value of the non-payroll period specific data. Note that a value can be a negative number. For instance, a payroll period specific value of 20 and a non-payroll period specific value of -8 will effectively result in 12 for salary calculation.\n\nThis boolean can only be set to `true` in components for which `payrollComponent.canBesupplemented = true`.\n',
        examples=[False],
    )
    payrollComponent: Optional[PayrollComponent23] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period.  <br/>  Please note: Business rules may differ per component! Understanding these business rules and corresponding validations requires functional knowledge of Loket.\n',
    )
    value: Optional[float] = Field(
        None,
        description='Depending on the selected payroll component the possible value(s) for this field change (dynamic business rules).\n',
        examples=[144],
    )


class Content84(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The cost center on which the payroll period data for this record will be booked for the ledger.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The cost unit on which the data for this record will be booked for the ledger\n',
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponents: Optional[List[PayrollComponent22]] = None
    payrollPeriod: Optional[PayrollPeriod] = None
    payslipText: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='A custom text to be displayed on the payslip.\n',
        examples=['Additional payslip for bonus'],
    )
    payslipType: Optional[PayslipType] = Field(
        None,
        description='The type of payslip (as defined by the Dutch tax authorities)\n',
    )
    shift: Optional[Shift3] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n',
    )


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message384]] = None
    content: Optional[Content84] = None


class Message385(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message385]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsPayrollperioddataPayrollperioddataIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message385]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message385]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message385]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message389(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem29(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payout: Optional[confloat(ge=0.0, le=100000.0)] = Field(
        None, description='The ammount of (gross) pension received', examples=[2569]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this pension benefit starts\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message389]] = None
    field_embedded: Optional[List[FieldEmbeddedItem29]] = Field(None, alias='_embedded')


class Message390(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message390]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdPutRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payout: Optional[confloat(ge=0.0, le=100000.0)] = Field(
        None, description='The ammount of (gross) pension received', examples=[2569]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this pension benefit starts\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class Message391(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content85(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payout: Optional[confloat(ge=0.0, le=100000.0)] = Field(
        None, description='The ammount of (gross) pension received', examples=[2569]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this pension benefit starts\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message391]] = None
    content: Optional[Content85] = None


class Message392(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message392]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsPensionbenefitsPensionBenefitIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message392]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message392]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message392]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message396(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content86(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for protected earning (based on the start- and enddate, not based on the payroll period of the payroll run).\n',
        examples=['2018-01-01'],
    )
    threshold: Optional[Any] = Field(
        None,
        description='The total amount of net wage that is protected.',
        examples=[50],
    )


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message396]] = None
    content: Optional[Content86] = None


class Message397(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message397]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdPutRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for protected earning (based on the start- and enddate, not based on the payroll period of the payroll run).\n',
        examples=['2018-01-01'],
    )
    threshold: Optional[Any] = Field(
        None,
        description='The total amount of net wage that is protected.',
        examples=[50],
    )


class Message398(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message398]] = None
    content: Optional[Content86] = None


class Message399(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message399]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsProtectedearningsProtectedEarningsIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message399]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message399]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message399]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message403(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Type3(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Suppleren (bruto)'])


class Supplementation(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='If supplementation is applied then the supplementation percentage (up to) is registered here.\n',
        examples=[35],
    )
    type: Optional[Type3] = Field(
        None,
        description='Indicates whether and how supplementation should be applied. This is used when the employer supplements the pay out percentage.\n',
    )


class Type4(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['ZW eigen risico'])


class Benefit(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Pay out percentage of the benefit (deviating from the administration). This value determines the percentage to be applied, the only exception is when type of benefit is set to AOW where the percentage cannot be in altered (=0).\n',
        examples=[35],
    )
    type: Optional[Type4] = Field(
        None,
        description='The type of social security benefit that is applicable. Per type of benefit a so-called closed-chain input validation is used. This field cannot be changed after the initial post.\n',
    )


class Content88(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    supplementation: Optional[Supplementation] = None
    benefit: Optional[Benefit] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message403]] = None
    content: Optional[Content88] = None


class Message404(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message404]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Type5(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Suppleren (bruto)'])


class Supplementation1(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='If supplementation is applied then the supplementation percentage (up to) is registered here.\n',
        examples=[35],
    )
    type: Optional[Type5] = Field(
        None,
        description='Indicates whether and how supplementation should be applied. This is used when the employer supplements the pay out percentage.\n',
    )


class Benefit1(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Pay out percentage of the benefit (deviating from the administration). This value determines the percentage to be applied, the only exception is when type of benefit is set to AOW where the percentage cannot be in altered (=0).\n',
        examples=[35],
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdPutRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    supplementation: Optional[Supplementation1] = None
    benefit: Optional[Benefit1] = None


class Message405(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Supplementation2(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='If supplementation is applied then the supplementation percentage (up to) is registered here.\n',
        examples=[35],
    )
    type: Optional[Type5] = Field(
        None,
        description='Indicates whether and how supplementation should be applied. This is used when the employer supplements the pay out percentage.\n',
    )


class Type7(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['ZW eigen risico'])


class Benefit2(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Pay out percentage of the benefit (deviating from the administration). This value determines the percentage to be applied, the only exception is when type of benefit is set to AOW where the percentage cannot be in altered (=0).\n',
        examples=[35],
    )
    type: Optional[Type7] = Field(
        None,
        description='The type of social security benefit that is applicable. Per type of benefit a so-called closed-chain input validation is used. This field cannot be changed after the initial post.\n',
    )


class Content89(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    supplementation: Optional[Supplementation2] = None
    benefit: Optional[Benefit2] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message405]] = None
    content: Optional[Content89] = None


class Message406(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message406]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecuritybenefitsSocialSecurityBenefitIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message406]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message406]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message406]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message410(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content90(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[True],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[True],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[True],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message410]] = None
    content: Optional[Content90] = None


class Message411(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message411]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdPutRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[True],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[True],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[True],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class Message412(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message412]] = None
    content: Optional[Content90] = None


class Message413(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message413]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsSocialsecurityconfigurationsSocialSecurityConfigurationIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message413]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message413]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message413]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message417(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem30(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this wachtgeld record starts.\n\nA (linked chain)[./#section/Data/Date-chains] per wachtgeld is maintained within this resource. So only one wachtgeld record can be active at the same time. ',
        examples=['2021-06-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None, description='The value for the wachtgeld.\n', examples=[50.87]
    )
    valueAdditionalIncomeCivilService: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value of additional income civil service (Neveninkomsten ambtelijk).\n',
        examples=[50.87],
    )
    valueAdditionalIncomeNonCivilService: Optional[confloat(ge=0.01, le=99999.99)] = (
        Field(
            None,
            description='The value of additional income non civil service (Neveninkomsten niet ambtelijk).\n',
            examples=[50.87],
        )
    )


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message417]] = None
    field_embedded: Optional[List[FieldEmbeddedItem30]] = Field(None, alias='_embedded')


class Message418(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message418]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdPutRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this wachtgeld record starts.\n\nA (linked chain)[./#section/Data/Date-chains] per wachtgeld is maintained within this resource. So only one wachtgeld record can be active at the same time. ',
        examples=['2021-06-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None, description='The value for the wachtgeld.\n', examples=[50.87]
    )
    valueAdditionalIncomeCivilService: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value of additional income civil service (Neveninkomsten ambtelijk).\n',
        examples=[50.87],
    )
    valueAdditionalIncomeNonCivilService: Optional[confloat(ge=0.01, le=99999.99)] = (
        Field(
            None,
            description='The value of additional income non civil service (Neveninkomsten niet ambtelijk).\n',
            examples=[50.87],
        )
    )


class Message419(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content92(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this wachtgeld record starts.\n\nA (linked chain)[./#section/Data/Date-chains] per wachtgeld is maintained within this resource. So only one wachtgeld record can be active at the same time. ',
        examples=['2021-06-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None, description='The value for the wachtgeld.\n', examples=[50.87]
    )
    valueAdditionalIncomeCivilService: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value of additional income civil service (Neveninkomsten ambtelijk).\n',
        examples=[50.87],
    )
    valueAdditionalIncomeNonCivilService: Optional[confloat(ge=0.01, le=99999.99)] = (
        Field(
            None,
            description='The value of additional income non civil service (Neveninkomsten niet ambtelijk).\n',
            examples=[50.87],
        )
    )


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message419]] = None
    content: Optional[Content92] = None


class Message420(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message420]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsWachtgeldWachtegeldenIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message420]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsWagesWageIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message420]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWagesWageIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message420]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWagesWageIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsWagesWageIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message424(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class EmployerCostsType(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['hourly'])


class PayrollPeriodType(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Maand'])


class Content93(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected.\n',
        examples=[True],
    )
    employerCosts: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The cost for the employer for this employee.\n',
        examples=[3500],
    )
    employerCostsType: Optional[EmployerCostsType] = Field(
        None,
        description='Indicates whether the employer costs are hourly costs or periodic costs. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    grossWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross wage for the employee\n', examples=[2300]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a Periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isGrossWageFullTime: Optional[bool] = Field(
        None,
        description='Indicates whether the given grossWage is either a full-time wage or a part-time wage. Full-time wage is the default value (isGrossWageFulltime = true) and Loket.nl recommends to use this option. A full-time wage takes into account the part-time percentage of an employment. While a part-time wage does not. E.g. A full-time wage of 2400 euro’s is registered. The employments works 20 out of 40 hours (40 fours is a full-time shift) thus having a 20/40 = 50% part-time percentage. The part-time hours (deviatingHoursPerWeek) are accessible through the endpoint for working hours of an employement. In the wage calculation Loket.nl will divide the grossWage component by 50% resulting in a grossWage of 1200 euro’s. In the case of a part-time wage the part-time percentage will be ignored.\n',
        examples=[True],
    )
    netWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='Net wage for the employment\n', examples=[2400]
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description="A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee's level, rank or status within the employer's organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n",
    )
    payrollPeriodType: Optional[PayrollPeriodType] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4). The value of this field is used to further specify the meaning of grossWageType, netWageType and employerCostsType. When the key fields of these three wage types have a value 1 (meaning periodic wage), the payrollPeriodType field shows the period type (month, 4 weeks or week) applicable to the wages for the employment. E.g. If the value for grossWageType.key = 1 (periodic wage) and the value for payrollPeriodType.key = 1 (meaning Month), then the wage registerd in grossWage is a monthly wage. Note that in cases where the wage type is an hourly wage (grossWageType.key = 2), the payrollPeriodType should be ignored.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n__Note__ It is posible to have no wage record.\n',
        examples=['1995-05-21'],
    )


class ProvidersEmployersEmployeesEmploymentsWagesWageIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message424]] = None
    content: Optional[Content93] = None


class Message425(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsWagesWageIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message425]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWagesWageIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsWagesWageIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsWagesWageIdPutRequest(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected.\n',
        examples=[True],
    )
    employerCosts: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The cost for the employer for this employee.\n',
        examples=[3500],
    )
    employerCostsType: Optional[EmployerCostsType] = Field(
        None,
        description='Indicates whether the employer costs are hourly costs or periodic costs. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    grossWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross wage for the employee\n', examples=[2300]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a Periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isGrossWageFullTime: Optional[bool] = Field(
        None,
        description='Indicates whether the given grossWage is either a full-time wage or a part-time wage. Full-time wage is the default value (isGrossWageFulltime = true) and Loket.nl recommends to use this option. A full-time wage takes into account the part-time percentage of an employment. While a part-time wage does not. E.g. A full-time wage of 2400 euro’s is registered. The employments works 20 out of 40 hours (40 fours is a full-time shift) thus having a 20/40 = 50% part-time percentage. The part-time hours (deviatingHoursPerWeek) are accessible through the endpoint for working hours of an employement. In the wage calculation Loket.nl will divide the grossWage component by 50% resulting in a grossWage of 1200 euro’s. In the case of a part-time wage the part-time percentage will be ignored.\n',
        examples=[True],
    )
    netWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='Net wage for the employment\n', examples=[2400]
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description="A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee's level, rank or status within the employer's organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n",
    )
    payrollPeriodType: Optional[PayrollPeriodType] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4). The value of this field is used to further specify the meaning of grossWageType, netWageType and employerCostsType. When the key fields of these three wage types have a value 1 (meaning periodic wage), the payrollPeriodType field shows the period type (month, 4 weeks or week) applicable to the wages for the employment. E.g. If the value for grossWageType.key = 1 (periodic wage) and the value for payrollPeriodType.key = 1 (meaning Month), then the wage registerd in grossWage is a monthly wage. Note that in cases where the wage type is an hourly wage (grossWageType.key = 2), the payrollPeriodType should be ignored.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n__Note__ It is posible to have no wage record.\n',
        examples=['1995-05-21'],
    )


class Message426(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content94(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected.\n',
        examples=[True],
    )
    employerCosts: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The cost for the employer for this employee.\n',
        examples=[3500],
    )
    employerCostsType: Optional[EmployerCostsType] = Field(
        None,
        description='Indicates whether the employer costs are hourly costs or periodic costs. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    grossWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross wage for the employee\n', examples=[2300]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a Periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isGrossWageFullTime: Optional[bool] = Field(
        None,
        description='Indicates whether the given grossWage is either a full-time wage or a part-time wage. Full-time wage is the default value (isGrossWageFulltime = true) and Loket.nl recommends to use this option. A full-time wage takes into account the part-time percentage of an employment. While a part-time wage does not. E.g. A full-time wage of 2400 euro’s is registered. The employments works 20 out of 40 hours (40 fours is a full-time shift) thus having a 20/40 = 50% part-time percentage. The part-time hours (deviatingHoursPerWeek) are accessible through the endpoint for working hours of an employement. In the wage calculation Loket.nl will divide the grossWage component by 50% resulting in a grossWage of 1200 euro’s. In the case of a part-time wage the part-time percentage will be ignored.\n',
        examples=[True],
    )
    netWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='Net wage for the employment\n', examples=[2400]
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description="A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee's level, rank or status within the employer's organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n",
    )
    payrollPeriodType: Optional[PayrollPeriodType] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4). The value of this field is used to further specify the meaning of grossWageType, netWageType and employerCostsType. When the key fields of these three wage types have a value 1 (meaning periodic wage), the payrollPeriodType field shows the period type (month, 4 weeks or week) applicable to the wages for the employment. E.g. If the value for grossWageType.key = 1 (periodic wage) and the value for payrollPeriodType.key = 1 (meaning Month), then the wage registerd in grossWage is a monthly wage. Note that in cases where the wage type is an hourly wage (grossWageType.key = 2), the payrollPeriodType should be ignored.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n__Note__ It is posible to have no wage record.\n',
        examples=['1995-05-21'],
    )


class ProvidersEmployersEmployeesEmploymentsWagesWageIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message426]] = None
    content: Optional[Content94] = None


class Message427(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsWagesWageIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message427]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWagesWageIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsWagesWageIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsWagesWageIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message427]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message427]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message427]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message431(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CalculateUsingWorkPattern3(BaseModel):
    daysDailyRate: Optional[bool] = Field(
        None,
        description='Indicates whether the number of days of dailyrate should be calculated based on the workpattern. The number of days are normally calculated by the working hours.',
        examples=[False],
    )
    deviatingDaysAndHours: Optional[bool] = Field(
        None,
        description='Indication whether  the deviating hours per week and deviating SV-days per period are to be automatically calculated based on the workpattern. Please note (!) that any values in the deviatingHoursPerWeek and deviatingSvDaysPerPeriod fields (of this workingHours record) will be overwritten based on this calculation if true (and endDate=NULL)!',
        examples=[False],
    )
    hoursBrokenPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern in broken periods. These are periods of in or out of service.',
        examples=[False],
    )
    hoursRegularPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern for regular periods.',
        examples=[False],
    )
    leaveHours: Optional[bool] = Field(
        None,
        description='Indicates whether then leave balances (verlof) are to be calculated based on the workpattern.  If set to false and the user is not linked to a leave policy with `applyLeaveSchedule` set to true the following fields are used for the calculation `deviatingHoursPerWeek` if null `shift.fullTimeHoursPerWeek` is used\n',
        examples=[True],
    )


class FlexibleHoursContract3(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Minimum uren contract']
    )


class Shift6(BaseModel):
    bonusPercentage: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift.\n',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.\n',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None, description='The number for the shift.\n', examples=[1]
    )


class ShiftRateSickLeave(BaseModel):
    bonusPercentage: Optional[confloat(ge=1.0, le=99.0)] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift.\n',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[confloat(ge=1.0, le=99.0)] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.\n',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None,
        description='The key number to identify the shift to be used for calculation of daily rate in case of sick leave (ziekte).\n',
        examples=[1],
    )


class WorkPattern3(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class Content95(BaseModel):
    aggregatedHoursPerWeek: Optional[confloat(ge=0.01, le=168.0)] = Field(
        None,
        description="This read-only field provides the user with a single point of knowledge as to what number of hours per week employment is actually registered in regards to the payrolling process. This number may be respectively based on the workpattern, deviating hours per week or shift hours. If the employment is an 'on call employment' (oproepkracht/invalkracht) the number is either NULL or represents the min-hours if that is applicable.\nThis field is especially useful for third-parties that want to know the number of hours per week (without having to apply specific Loket logic). I.e. this field is not visible in Loket GUI.",
        examples=[24],
    )
    averageHoursPerWeek: Optional[confloat(ge=0.0, le=168.0)] = Field(
        None,
        description='This field can be used to register the average hours per week an employment with varying hours works. For example, 0 hour contracts and min max contracts. The value of this field does NOT directly affect the payrolling proces.',
        examples=[32],
    )
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor, purely for administrative purposes. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100. \nPlease note that this field is not used in the actual payroll proces! For the payroll process the number of hours is used.',
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern3] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object). Onderliggende elementen geven aan of specifieke waardes berekend moeten worden op basis van het twee wekelijks werkpatroon `workPattern`\n',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='If this field is empty the fulltime hours are based as defined by the shift, this optional field is used to register an overwriting value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[conint(ge=1, le=23)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value.',
        examples=[20],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.\n',
        examples=['2018-10-23'],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract3] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.',
        examples=[True],
    )
    shift: Optional[Shift6] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    shiftRateSickLeave: Optional[ShiftRateSickLeave] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shiftRateSickLeave` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n',
        examples=['2018-01-01'],
    )
    workPattern: Optional[WorkPattern3] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message431]] = None
    content: Optional[Content95] = None


class Message432(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message432]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class WorkPattern4(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdPutRequest(
    BaseModel
):
    aggregatedHoursPerWeek: Optional[confloat(ge=0.01, le=168.0)] = Field(
        None,
        description="This read-only field provides the user with a single point of knowledge as to what number of hours per week employment is actually registered in regards to the payrolling process. This number may be respectively based on the workpattern, deviating hours per week or shift hours. If the employment is an 'on call employment' (oproepkracht/invalkracht) the number is either NULL or represents the min-hours if that is applicable.\nThis field is especially useful for third-parties that want to know the number of hours per week (without having to apply specific Loket logic). I.e. this field is not visible in Loket GUI.",
        examples=[24],
    )
    averageHoursPerWeek: Optional[confloat(ge=0.0, le=168.0)] = Field(
        None,
        description='This field can be used to register the average hours per week an employment with varying hours works. For example, 0 hour contracts and min max contracts. The value of this field does NOT directly affect the payrolling proces.',
        examples=[32],
    )
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor, purely for administrative purposes. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100. \nPlease note that this field is not used in the actual payroll proces! For the payroll process the number of hours is used.',
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern3] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object). Onderliggende elementen geven aan of specifieke waardes berekend moeten worden op basis van het twee wekelijks werkpatroon `workPattern`\n',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='If this field is empty the fulltime hours are based as defined by the shift, this optional field is used to register an overwriting value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[conint(ge=1, le=23)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value.',
        examples=[20],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.\n',
        examples=['2018-10-23'],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract3] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.',
        examples=[True],
    )
    shift: Optional[Shift6] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    shiftRateSickLeave: Optional[ShiftRateSickLeave] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shiftRateSickLeave` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n',
        examples=['2018-01-01'],
    )
    workPattern: Optional[WorkPattern4] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class Message433(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class WorkPattern5(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class Content96(BaseModel):
    aggregatedHoursPerWeek: Optional[confloat(ge=0.01, le=168.0)] = Field(
        None,
        description="This read-only field provides the user with a single point of knowledge as to what number of hours per week employment is actually registered in regards to the payrolling process. This number may be respectively based on the workpattern, deviating hours per week or shift hours. If the employment is an 'on call employment' (oproepkracht/invalkracht) the number is either NULL or represents the min-hours if that is applicable.\nThis field is especially useful for third-parties that want to know the number of hours per week (without having to apply specific Loket logic). I.e. this field is not visible in Loket GUI.",
        examples=[24],
    )
    averageHoursPerWeek: Optional[confloat(ge=0.0, le=168.0)] = Field(
        None,
        description='This field can be used to register the average hours per week an employment with varying hours works. For example, 0 hour contracts and min max contracts. The value of this field does NOT directly affect the payrolling proces.',
        examples=[32],
    )
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor, purely for administrative purposes. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100. \nPlease note that this field is not used in the actual payroll proces! For the payroll process the number of hours is used.',
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern3] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object). Onderliggende elementen geven aan of specifieke waardes berekend moeten worden op basis van het twee wekelijks werkpatroon `workPattern`\n',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='If this field is empty the fulltime hours are based as defined by the shift, this optional field is used to register an overwriting value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[conint(ge=1, le=23)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value.',
        examples=[20],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.\n',
        examples=['2018-10-23'],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract3] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.',
        examples=[True],
    )
    shift: Optional[Shift6] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    shiftRateSickLeave: Optional[ShiftRateSickLeave] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shiftRateSickLeave` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n',
        examples=['2018-01-01'],
    )
    workPattern: Optional[WorkPattern5] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message433]] = None
    content: Optional[Content96] = None


class Message434(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message434]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsWorkinghoursWorkinghoursIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message434]] = None
    version: Optional[Version] = None


class Message436(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within a employer.',
        examples=[156],
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None,
        description='The last name of the partner of the employee',
        examples=['Wiel'],
    )
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the employee', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix of the partner of the employee',
        examples=['van de'],
    )


class EmploymentCategoryType(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Ouderschapsverlof'])


class EmploymentContractType3(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Arbeidsovereenkomst (excl BBL)'])


class EndOfEmploymentReason(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the reason for the end of the employment.',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the reason for the end of the employment.',
        examples=['VUT'],
    )


class EndOfEmploymentReasonTaxAuthorities(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the reason for the end of the employment.',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the reason for the end of the employment.',
        examples=[
            'Beëindiging arbeidsovereenkomst met wederzijds goedvinden op initiatief van de werkgever.'
        ],
    )


class NonPayrollAdministration3(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None,
        description='Name of the non payroll administration',
        examples=['HR only employees'],
    )


class PayrollAdministration3(BaseModel):
    clientNumber: Optional[int] = Field(
        None,
        description='The client number is a unique number for administrations that are used for payrolling. This field has no value if the administration is not used for payrolling.',
        examples=[1234],
    )
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None,
        description='Name of the payroll administration',
        examples=['ABC accountants'],
    )


class SendToExternalParty(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['n.v.t.'])


class TemporaryTaxExemption(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Nee.'])


class TypeOfParticipation3(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[str] = Field(None, examples=['n.vt.'])


class Content97(BaseModel):
    employee: Optional[Employee] = None
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period. NL: Completeren/Berekenen uren\n',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer. NL: DatumOpzegging',
        examples=['2018-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerknemer',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerkgever',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties. NL: PeriodeOpzegTermijn',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end. NL: AanstellingTot',
        examples=['2019-01-01'],
    )
    commissionUntilDate1: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #1. NL: AanstellingTot1',
        examples=['2018-05-31'],
    )
    commissionUntilDate2: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #2. NL: AanstellingTot2',
        examples=['2018-05-31'],
    )
    commissionUntilDate3: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #3. NL: AanstellingTot3',
        examples=['2018-05-31'],
    )
    commissionUntilDate4: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #4. NL: AanstellingTot4',
        examples=['2018-05-31'],
    )
    commissionUntilDate5: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #5. NL: AanstellingTot5',
        examples=['2018-05-31'],
    )
    commissionUntilDate6: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #6. NL: AanstellingTot6',
        examples=['2018-05-31'],
    )
    deviatingCLAExternalParty: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for external parties . NL: CaoKlantgroepAfwijkend',
        examples=[2],
    )
    deviatingCLATaxReturn: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns. NL: CAOUWV',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. NL: EmailVerlofaanvraag',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level. NL: WerknemerProfielID\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    employmentCategoryType: Optional[EmploymentCategoryType] = Field(
        None,
        description='A selection of special pre defined employment-types for the employment.  NL: Type dienstverband',
    )
    employmentContractType: Optional[EmploymentContractType3] = Field(
        None,
        description='The type of employment applicable for the employment. NL: BasisDienstverband',
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None,
        description='A selection of pre defined durations for the employment. NL: SoortDienstverband',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends. NL: DatumUitDienst',
        examples=['2018-10-23'],
    )
    endOfEmploymentDueToIllness: Optional[bool] = Field(
        None,
        description='Indicates whether the reason for the termination of an employment is due to long-term illness. NL: ZiekUitDienst',
        examples=[False],
    )
    endOfEmploymentReason: Optional[EndOfEmploymentReason] = Field(
        None,
        description="The reason for the end of the employment. NL: RedenEindeDienstverband\n\n__Note:__ as of 2020-01-01 `endOfEmploymentReasonTaxAuthorities` replaces this field as the main reason for the end of the employment. We say 'main reason' as in certain cases this field still has a purpose. \nPlease set this field to 8 (Others) unless one of the following integrations is used for this employment\n  * UPA-pensioenaangifte\n  * Cordares\n  * APG-pensioenaangifte\n  * Achmea",
    )
    endOfEmploymentReasonTaxAuthorities: Optional[
        EndOfEmploymentReasonTaxAuthorities
    ] = Field(
        None,
        description='The reason for the end of the employment as specified by the Dutch Tax authorties. NL: RedenEindeDienstverbandAangifte\n\n__Note:__ This field replaces `endOfEmploymentReason` as of 2020-01-01. `endOfEmploymentReason` will remain as a field in the resource as several integration require this field still.',
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations. Standard-set means the standard set defined for the administration will be applied for this employment. NULL means no set will be defined for this employment (so no access to any components). NL : ExportsetID\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user.',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht). NL: CodeUitzondering',
    )
    exemptionPremiumWaiverMarginalLabour: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. waiver) on the premium marginal labour (vrijstelling marginale arbeid) applies for this employment. NL: PremieVrijstellingMarginaleArbeid',
        examples=[False],
    )
    exemptionWorkRelatedExpenseScheme: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. non-participation) on the work-related expense scheme (werkkostenregeling) applies for this employment. NL: WerkkostenRegelingUitsluiting',
        examples=[False],
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether a first-day notification (EersteDagsMelding) was created for the employment. Attention: this indication cannot be altered after an employment has been created. NL: EersteDagsMelding ',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation. NL: SoortOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company. NL: HistorischeDatumInDienst',
        examples=['2012-05-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment. NL: NummerInkomstenVerhouding',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None,
        description='An employee that wants to remain anonymous related to social security instances. NL: IsAnoniemeWerknemer\n',
        examples=[True],
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a director and major shareholder (Dutch: directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsDirecteurGrootAandeelhouder',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsFamilieVanEigenaar',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Werknemerverzekering. NL: IsGemoedsbezwaardWerknemerverzekering\n',
        examples=[True],
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Volksverzekering. NL: IsGemoedsbezwaardVolksverzekering\n',
        examples=[True],
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment. This field can be `null` in cases where it is unknown whether the employment is an on-call employment. NL: IsOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsVorigeEigenaar',
        examples=[False],
    )
    linkedEmployment: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment. NL: NaamLoonstrook',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration3] = Field(
        None,
        description='Id of the non-payroll administration. This field cannot simultaneously have a value with payrollAdministration (only one can have a value at a time)\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment. NL: Deelname55Plus',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration3] = Field(
        None,
        description='Id of the payroll administration. This field cannot simultaneously have a value with nonPayrollAdministration (only one can have a value at a time)\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    payrollId: Optional[int] = Field(
        None,
        description='The payrolling number for this employment of the employee. Used by the payroll engine. This number is automatically generated and cannot be changed by the user. NL: PersoneelsnummerVerloning',
        examples=[2],
    )
    periodPayGradeAdjustment: Optional[conint(ge=1, le=52)] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’. NL: PeriodeSalarisPeriodiek',
        examples=[2],
    )
    professionCode: Optional[conint(ge=1, le=999)] = Field(
        None,
        description='A code field for a profession. This field only applies in case of a specific CLA (Bouw / Infra). Please leave empty if not applicable. NL: BeroepUWV',
        examples=[4],
    )
    sendToExternalParty: Optional[SendToExternalParty] = Field(
        None,
        description='Indicates whether payroll information of this employment is sent to external pension funds. Attention: this indication ONLY applies regarding the information to pension funds. If NULL then setting according to regulation is leading. NL: AanleveringExternePartij',
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment. NL: SalarisschaalSignaleren',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None,
        description='Indicates the special income ratio. NL: SpecialeInkomstenVerhouding',
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month. NL: AanvangOpzegtermijn',
        examples=['2018-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts. NL: DatumInDienst',
        examples=['2018-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. NL: Startdatum onbepaalde tijd This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    temporaryTaxExemption: Optional[TemporaryTaxExemption] = Field(
        None,
        description='Indicates whether there a temporary tax exemption is to be applied for the employment. NL: TijdelijkeHeffingskorting',
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment. NL: SoortWerknemer',
    )
    typeOfParticipation: Optional[TypeOfParticipation3] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: AardDeelnemerschap',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s. NL: Vakantiebonnen',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: WaardeDeelnemerschap',
    )
    wachtgeldOldRegulation: Optional[bool] = Field(
        None,
        description='Indicates whether the (old) wachtgeld regulation is applicable for the employment. NL: WachtgeldOudeRegeling',
        examples=[False],
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Did the employment and employer make a written contract? NL: Schriftelijke overeenkomst',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message436]] = None
    content: Optional[Content97] = None


class Message437(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message437]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPatchRequest(BaseModel):
    employmentCategoryType: Optional[EmploymentCategoryType] = Field(
        None,
        description='A selection of special pre defined employment-types for the employment.  NL: Type dienstverband',
    )
    linkedEmployment: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message438(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content98(BaseModel):
    employmentCategoryType: Optional[EmploymentCategoryType] = Field(
        None,
        description='A selection of special pre defined employment-types for the employment.  NL: Type dienstverband',
    )
    linkedEmployment: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message438]] = None
    content: Optional[Content98] = None


class Message439(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message439]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPatchResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message439]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPutRequest(BaseModel):
    employee: Optional[Employee] = None
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period. NL: Completeren/Berekenen uren\n',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer. NL: DatumOpzegging',
        examples=['2018-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerknemer',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerkgever',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties. NL: PeriodeOpzegTermijn',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end. NL: AanstellingTot',
        examples=['2019-01-01'],
    )
    commissionUntilDate1: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #1. NL: AanstellingTot1',
        examples=['2018-05-31'],
    )
    commissionUntilDate2: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #2. NL: AanstellingTot2',
        examples=['2018-05-31'],
    )
    commissionUntilDate3: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #3. NL: AanstellingTot3',
        examples=['2018-05-31'],
    )
    commissionUntilDate4: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #4. NL: AanstellingTot4',
        examples=['2018-05-31'],
    )
    commissionUntilDate5: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #5. NL: AanstellingTot5',
        examples=['2018-05-31'],
    )
    commissionUntilDate6: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #6. NL: AanstellingTot6',
        examples=['2018-05-31'],
    )
    deviatingCLAExternalParty: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for external parties . NL: CaoKlantgroepAfwijkend',
        examples=[2],
    )
    deviatingCLATaxReturn: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns. NL: CAOUWV',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. NL: EmailVerlofaanvraag',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level. NL: WerknemerProfielID\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    employmentCategoryType: Optional[EmploymentCategoryType] = Field(
        None,
        description='A selection of special pre defined employment-types for the employment.  NL: Type dienstverband',
    )
    employmentContractType: Optional[EmploymentContractType3] = Field(
        None,
        description='The type of employment applicable for the employment. NL: BasisDienstverband',
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None,
        description='A selection of pre defined durations for the employment. NL: SoortDienstverband',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends. NL: DatumUitDienst',
        examples=['2018-10-23'],
    )
    endOfEmploymentDueToIllness: Optional[bool] = Field(
        None,
        description='Indicates whether the reason for the termination of an employment is due to long-term illness. NL: ZiekUitDienst',
        examples=[False],
    )
    endOfEmploymentReason: Optional[EndOfEmploymentReason] = Field(
        None,
        description="The reason for the end of the employment. NL: RedenEindeDienstverband\n\n__Note:__ as of 2020-01-01 `endOfEmploymentReasonTaxAuthorities` replaces this field as the main reason for the end of the employment. We say 'main reason' as in certain cases this field still has a purpose. \nPlease set this field to 8 (Others) unless one of the following integrations is used for this employment\n  * UPA-pensioenaangifte\n  * Cordares\n  * APG-pensioenaangifte\n  * Achmea",
    )
    endOfEmploymentReasonTaxAuthorities: Optional[
        EndOfEmploymentReasonTaxAuthorities
    ] = Field(
        None,
        description='The reason for the end of the employment as specified by the Dutch Tax authorties. NL: RedenEindeDienstverbandAangifte\n\n__Note:__ This field replaces `endOfEmploymentReason` as of 2020-01-01. `endOfEmploymentReason` will remain as a field in the resource as several integration require this field still.',
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations. Standard-set means the standard set defined for the administration will be applied for this employment. NULL means no set will be defined for this employment (so no access to any components). NL : ExportsetID\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user.',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht). NL: CodeUitzondering',
    )
    exemptionPremiumWaiverMarginalLabour: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. waiver) on the premium marginal labour (vrijstelling marginale arbeid) applies for this employment. NL: PremieVrijstellingMarginaleArbeid',
        examples=[False],
    )
    exemptionWorkRelatedExpenseScheme: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. non-participation) on the work-related expense scheme (werkkostenregeling) applies for this employment. NL: WerkkostenRegelingUitsluiting',
        examples=[False],
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether a first-day notification (EersteDagsMelding) was created for the employment. Attention: this indication cannot be altered after an employment has been created. NL: EersteDagsMelding ',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation. NL: SoortOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company. NL: HistorischeDatumInDienst',
        examples=['2012-05-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment. NL: NummerInkomstenVerhouding',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None,
        description='An employee that wants to remain anonymous related to social security instances. NL: IsAnoniemeWerknemer\n',
        examples=[True],
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a director and major shareholder (Dutch: directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsDirecteurGrootAandeelhouder',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsFamilieVanEigenaar',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Werknemerverzekering. NL: IsGemoedsbezwaardWerknemerverzekering\n',
        examples=[True],
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Volksverzekering. NL: IsGemoedsbezwaardVolksverzekering\n',
        examples=[True],
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment. This field can be `null` in cases where it is unknown whether the employment is an on-call employment. NL: IsOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsVorigeEigenaar',
        examples=[False],
    )
    linkedEmployment: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment. NL: NaamLoonstrook',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration3] = Field(
        None,
        description='Id of the non-payroll administration. This field cannot simultaneously have a value with payrollAdministration (only one can have a value at a time)\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment. NL: Deelname55Plus',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration3] = Field(
        None,
        description='Id of the payroll administration. This field cannot simultaneously have a value with nonPayrollAdministration (only one can have a value at a time)\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    payrollId: Optional[int] = Field(
        None,
        description='The payrolling number for this employment of the employee. Used by the payroll engine. This number is automatically generated and cannot be changed by the user. NL: PersoneelsnummerVerloning',
        examples=[2],
    )
    periodPayGradeAdjustment: Optional[conint(ge=1, le=52)] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’. NL: PeriodeSalarisPeriodiek',
        examples=[2],
    )
    professionCode: Optional[conint(ge=1, le=999)] = Field(
        None,
        description='A code field for a profession. This field only applies in case of a specific CLA (Bouw / Infra). Please leave empty if not applicable. NL: BeroepUWV',
        examples=[4],
    )
    sendToExternalParty: Optional[SendToExternalParty] = Field(
        None,
        description='Indicates whether payroll information of this employment is sent to external pension funds. Attention: this indication ONLY applies regarding the information to pension funds. If NULL then setting according to regulation is leading. NL: AanleveringExternePartij',
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment. NL: SalarisschaalSignaleren',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None,
        description='Indicates the special income ratio. NL: SpecialeInkomstenVerhouding',
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month. NL: AanvangOpzegtermijn',
        examples=['2018-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts. NL: DatumInDienst',
        examples=['2018-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. NL: Startdatum onbepaalde tijd This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    temporaryTaxExemption: Optional[TemporaryTaxExemption] = Field(
        None,
        description='Indicates whether there a temporary tax exemption is to be applied for the employment. NL: TijdelijkeHeffingskorting',
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment. NL: SoortWerknemer',
    )
    typeOfParticipation: Optional[TypeOfParticipation3] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: AardDeelnemerschap',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s. NL: Vakantiebonnen',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: WaardeDeelnemerschap',
    )
    wachtgeldOldRegulation: Optional[bool] = Field(
        None,
        description='Indicates whether the (old) wachtgeld regulation is applicable for the employment. NL: WachtgeldOudeRegeling',
        examples=[False],
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Did the employment and employer make a written contract? NL: Schriftelijke overeenkomst',
        examples=[True],
    )


class Message441(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content99(BaseModel):
    employee: Optional[Employee] = None
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period. NL: Completeren/Berekenen uren\n',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer. NL: DatumOpzegging',
        examples=['2018-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerknemer',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerkgever',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties. NL: PeriodeOpzegTermijn',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end. NL: AanstellingTot',
        examples=['2019-01-01'],
    )
    commissionUntilDate1: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #1. NL: AanstellingTot1',
        examples=['2018-05-31'],
    )
    commissionUntilDate2: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #2. NL: AanstellingTot2',
        examples=['2018-05-31'],
    )
    commissionUntilDate3: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #3. NL: AanstellingTot3',
        examples=['2018-05-31'],
    )
    commissionUntilDate4: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #4. NL: AanstellingTot4',
        examples=['2018-05-31'],
    )
    commissionUntilDate5: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #5. NL: AanstellingTot5',
        examples=['2018-05-31'],
    )
    commissionUntilDate6: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #6. NL: AanstellingTot6',
        examples=['2018-05-31'],
    )
    deviatingCLAExternalParty: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for external parties . NL: CaoKlantgroepAfwijkend',
        examples=[2],
    )
    deviatingCLATaxReturn: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns. NL: CAOUWV',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. NL: EmailVerlofaanvraag',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level. NL: WerknemerProfielID\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    employmentCategoryType: Optional[EmploymentCategoryType] = Field(
        None,
        description='A selection of special pre defined employment-types for the employment.  NL: Type dienstverband',
    )
    employmentContractType: Optional[EmploymentContractType3] = Field(
        None,
        description='The type of employment applicable for the employment. NL: BasisDienstverband',
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None,
        description='A selection of pre defined durations for the employment. NL: SoortDienstverband',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends. NL: DatumUitDienst',
        examples=['2018-10-23'],
    )
    endOfEmploymentDueToIllness: Optional[bool] = Field(
        None,
        description='Indicates whether the reason for the termination of an employment is due to long-term illness. NL: ZiekUitDienst',
        examples=[False],
    )
    endOfEmploymentReason: Optional[EndOfEmploymentReason] = Field(
        None,
        description="The reason for the end of the employment. NL: RedenEindeDienstverband\n\n__Note:__ as of 2020-01-01 `endOfEmploymentReasonTaxAuthorities` replaces this field as the main reason for the end of the employment. We say 'main reason' as in certain cases this field still has a purpose. \nPlease set this field to 8 (Others) unless one of the following integrations is used for this employment\n  * UPA-pensioenaangifte\n  * Cordares\n  * APG-pensioenaangifte\n  * Achmea",
    )
    endOfEmploymentReasonTaxAuthorities: Optional[
        EndOfEmploymentReasonTaxAuthorities
    ] = Field(
        None,
        description='The reason for the end of the employment as specified by the Dutch Tax authorties. NL: RedenEindeDienstverbandAangifte\n\n__Note:__ This field replaces `endOfEmploymentReason` as of 2020-01-01. `endOfEmploymentReason` will remain as a field in the resource as several integration require this field still.',
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations. Standard-set means the standard set defined for the administration will be applied for this employment. NULL means no set will be defined for this employment (so no access to any components). NL : ExportsetID\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user.',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht). NL: CodeUitzondering',
    )
    exemptionPremiumWaiverMarginalLabour: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. waiver) on the premium marginal labour (vrijstelling marginale arbeid) applies for this employment. NL: PremieVrijstellingMarginaleArbeid',
        examples=[False],
    )
    exemptionWorkRelatedExpenseScheme: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. non-participation) on the work-related expense scheme (werkkostenregeling) applies for this employment. NL: WerkkostenRegelingUitsluiting',
        examples=[False],
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether a first-day notification (EersteDagsMelding) was created for the employment. Attention: this indication cannot be altered after an employment has been created. NL: EersteDagsMelding ',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation. NL: SoortOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company. NL: HistorischeDatumInDienst',
        examples=['2012-05-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment. NL: NummerInkomstenVerhouding',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None,
        description='An employee that wants to remain anonymous related to social security instances. NL: IsAnoniemeWerknemer\n',
        examples=[True],
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a director and major shareholder (Dutch: directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsDirecteurGrootAandeelhouder',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsFamilieVanEigenaar',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Werknemerverzekering. NL: IsGemoedsbezwaardWerknemerverzekering\n',
        examples=[True],
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Volksverzekering. NL: IsGemoedsbezwaardVolksverzekering\n',
        examples=[True],
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment. This field can be `null` in cases where it is unknown whether the employment is an on-call employment. NL: IsOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsVorigeEigenaar',
        examples=[False],
    )
    linkedEmployment: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment. NL: NaamLoonstrook',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration3] = Field(
        None,
        description='Id of the non-payroll administration. This field cannot simultaneously have a value with payrollAdministration (only one can have a value at a time)\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment. NL: Deelname55Plus',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration3] = Field(
        None,
        description='Id of the payroll administration. This field cannot simultaneously have a value with nonPayrollAdministration (only one can have a value at a time)\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    payrollId: Optional[int] = Field(
        None,
        description='The payrolling number for this employment of the employee. Used by the payroll engine. This number is automatically generated and cannot be changed by the user. NL: PersoneelsnummerVerloning',
        examples=[2],
    )
    periodPayGradeAdjustment: Optional[conint(ge=1, le=52)] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’. NL: PeriodeSalarisPeriodiek',
        examples=[2],
    )
    professionCode: Optional[conint(ge=1, le=999)] = Field(
        None,
        description='A code field for a profession. This field only applies in case of a specific CLA (Bouw / Infra). Please leave empty if not applicable. NL: BeroepUWV',
        examples=[4],
    )
    sendToExternalParty: Optional[SendToExternalParty] = Field(
        None,
        description='Indicates whether payroll information of this employment is sent to external pension funds. Attention: this indication ONLY applies regarding the information to pension funds. If NULL then setting according to regulation is leading. NL: AanleveringExternePartij',
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment. NL: SalarisschaalSignaleren',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None,
        description='Indicates the special income ratio. NL: SpecialeInkomstenVerhouding',
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month. NL: AanvangOpzegtermijn',
        examples=['2018-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts. NL: DatumInDienst',
        examples=['2018-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. NL: Startdatum onbepaalde tijd This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    temporaryTaxExemption: Optional[TemporaryTaxExemption] = Field(
        None,
        description='Indicates whether there a temporary tax exemption is to be applied for the employment. NL: TijdelijkeHeffingskorting',
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment. NL: SoortWerknemer',
    )
    typeOfParticipation: Optional[TypeOfParticipation3] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: AardDeelnemerschap',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s. NL: Vakantiebonnen',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: WaardeDeelnemerschap',
    )
    wachtgeldOldRegulation: Optional[bool] = Field(
        None,
        description='Indicates whether the (old) wachtgeld regulation is applicable for the employment. NL: WachtgeldOudeRegeling',
        examples=[False],
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Did the employment and employer make a written contract? NL: Schriftelijke overeenkomst',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message441]] = None
    content: Optional[Content99] = None


class Message442(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message442]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message442]] = None
    version: Optional[Version] = None


class Message444(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Deviations9(BaseModel):
    employmentContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating employment contribution percentage. This value will overrule the value of the selected `fund`. Indicates percentage wise how much the employment has to contribute to the payment of the "fund" contribution.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[11],
    )
    totalContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating total contribution percentage. This value will overrule the value of the selected `fund`. The difference between `employmentContributionPercentage` and `totalContributionPercentage` will be paid by the employer.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[12.007],
    )


class FieldEmbeddedItem31(BaseModel):
    deviations: Optional[Deviations9] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution5] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAbpfundsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message444]] = None
    field_embedded: Optional[List[FieldEmbeddedItem31]] = Field(None, alias='_embedded')


class Message445(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAbpfundsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message445]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAbpfundsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAbpfundsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAbpfundsPostRequest(BaseModel):
    deviations: Optional[Deviations9] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution5] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class Message446(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content100(BaseModel):
    deviations: Optional[Deviations9] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution5] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAbpfundsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message446]] = None
    content: Optional[Content100] = None


class Message447(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAbpfundsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message447]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAbpfundsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAbpfundsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message448(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Beneficiary9(BaseModel):
    city: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    name: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of the beneficiary\n', examples=['Ben Hur']
    )


class Type8(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Preferente schuldeiser']
    )


class Creditor3(BaseModel):
    priority: Optional[conint(ge=0)] = Field(
        None,
        description='The priority of a creditor within the type of creditors. 0 is the highest priority followed by 1 etc. Priority dictates the order in which creditor receives their payment.  The amount of earnings that can be used for payments can be limited (see attachment-exempt threshold).  The system will then divide the available earnings starting with the creditor with the highest priority.  If all available earnings are spend all other attachments will not receive payment until the time that earnings are available to meet them.',
        examples=[0],
    )
    type: Optional[Type8] = Field(
        None,
        description='The type of creditor. A preferent creditor has priority over non-preferent creditors.',
    )


class TotalAmount3(BaseModel):
    owed: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The total amount to be paid to the creditor', examples=[320]
    )
    paid: Optional[Paid] = None


class FieldEmbeddedItem32(BaseModel):
    beneficiary: Optional[Beneficiary9] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    creditor: Optional[Creditor3] = Field(
        None, description='Information regarding the creditor'
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    descriptionPayslip: Optional[constr(min_length=1, max_length=14)] = Field(
        None,
        description='This value is shown on the payslip to identify the attachment.\n',
        examples=['payment to creditor x'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    fixedPaymentPerPayrollPeriod: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None,
        description='Set a fixed sum to be payed every payroll period.\n\n__Note:__ If left empty the "available" earnings will be calculated in the payroll run by subtracting the protected earnings threshold (beslagvrijevoet) from the netwage. This method can lead to variable payments per payroll period.',
        examples=[50],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )
    totalAmount: Optional[TotalAmount3] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAttachmentsofearningsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message448]] = None
    field_embedded: Optional[List[FieldEmbeddedItem32]] = Field(None, alias='_embedded')


class Message449(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAttachmentsofearningsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message449]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAttachmentsofearningsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAttachmentsofearningsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Creditor4(BaseModel):
    priority: Optional[conint(ge=0)] = Field(
        None,
        description='The priority of a creditor within the type of creditors. 0 is the highest priority followed by 1 etc. Priority dictates the order in which creditor receives their payment.  The amount of earnings that can be used for payments can be limited (see attachment-exempt threshold).  The system will then divide the available earnings starting with the creditor with the highest priority.  If all available earnings are spend all other attachments will not receive payment until the time that earnings are available to meet them.',
        examples=[0],
    )
    type: Optional[Type8] = Field(
        None,
        description='The type of creditor. A preferent creditor has priority over non-preferent creditors.',
    )


class TotalAmount4(BaseModel):
    owed: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The total amount to be paid to the creditor', examples=[320]
    )
    paid: Optional[Paid] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAttachmentsofearningsPostRequest(
    BaseModel
):
    beneficiary: Optional[Beneficiary9] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    creditor: Optional[Creditor4] = Field(
        None, description='Information regarding the creditor'
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    descriptionPayslip: Optional[constr(min_length=1, max_length=14)] = Field(
        None,
        description='This value is shown on the payslip to identify the attachment.\n',
        examples=['payment to creditor x'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    fixedPaymentPerPayrollPeriod: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None,
        description='Set a fixed sum to be payed every payroll period.\n\n__Note:__ If left empty the "available" earnings will be calculated in the payroll run by subtracting the protected earnings threshold (beslagvrijevoet) from the netwage. This method can lead to variable payments per payroll period.',
        examples=[50],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )
    totalAmount: Optional[TotalAmount4] = None


class Message450(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Creditor5(BaseModel):
    priority: Optional[conint(ge=0)] = Field(
        None,
        description='The priority of a creditor within the type of creditors. 0 is the highest priority followed by 1 etc. Priority dictates the order in which creditor receives their payment.  The amount of earnings that can be used for payments can be limited (see attachment-exempt threshold).  The system will then divide the available earnings starting with the creditor with the highest priority.  If all available earnings are spend all other attachments will not receive payment until the time that earnings are available to meet them.',
        examples=[0],
    )
    type: Optional[Type8] = Field(
        None,
        description='The type of creditor. A preferent creditor has priority over non-preferent creditors.',
    )


class TotalAmount5(BaseModel):
    owed: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The total amount to be paid to the creditor', examples=[320]
    )
    paid: Optional[Paid] = None


class Content101(BaseModel):
    beneficiary: Optional[Beneficiary9] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    creditor: Optional[Creditor5] = Field(
        None, description='Information regarding the creditor'
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    descriptionPayslip: Optional[constr(min_length=1, max_length=14)] = Field(
        None,
        description='This value is shown on the payslip to identify the attachment.\n',
        examples=['payment to creditor x'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    fixedPaymentPerPayrollPeriod: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None,
        description='Set a fixed sum to be payed every payroll period.\n\n__Note:__ If left empty the "available" earnings will be calculated in the payroll run by subtracting the protected earnings threshold (beslagvrijevoet) from the netwage. This method can lead to variable payments per payroll period.',
        examples=[50],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )
    totalAmount: Optional[TotalAmount5] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAttachmentsofearningsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message450]] = None
    content: Optional[Content101] = None


class Message451(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAttachmentsofearningsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message451]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAttachmentsofearningsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdAttachmentsofearningsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message452(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Deviations12(BaseModel):
    financialReservationPercentage: Optional[confloat(ge=0.0, le=999.999999)] = Field(
        None,
        description='deviation from the financial reservation percentage',
        examples=[10.000007],
    )
    percentage: Optional[confloat(ge=0.0, le=999.999999)] = Field(
        None, description='Deviation from the percentage', examples=[8]
    )
    reservationPercentage: Optional[confloat(ge=0.0, le=999.999999)] = Field(
        None,
        description='deviation from the reservation percentage',
        examples=[12.0007],
    )


class FieldEmbeddedItem33(BaseModel):
    ageBasedMaximum: Optional[AgeBasedMaximum] = Field(
        None, description='This fields indicates how the age based maximum is applied\n'
    )
    ageBasedMinimum: Optional[AgeBasedMinimum] = Field(
        None, description='This fields indicates how the age based minimum is applied\n'
    )
    deviations: Optional[Deviations12] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `base`. \nSet `deviations` to null if no deviations apply.\n\nDeviating is done on either all the fields or none.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base is maintained within this resource.\nSo multiple bases can be active at the same time but one specific base can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    base: Optional[Base] = Field(
        None,
        description='`base` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforcalculationGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message452]] = None
    field_embedded: Optional[List[FieldEmbeddedItem33]] = Field(None, alias='_embedded')


class Message453(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforcalculationGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message453]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforcalculationGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforcalculationGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforcalculationPostRequest(
    BaseModel
):
    ageBasedMaximum: Optional[AgeBasedMaximum] = Field(
        None, description='This fields indicates how the age based maximum is applied\n'
    )
    ageBasedMinimum: Optional[AgeBasedMinimum] = Field(
        None, description='This fields indicates how the age based minimum is applied\n'
    )
    deviations: Optional[Deviations12] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `base`. \nSet `deviations` to null if no deviations apply.\n\nDeviating is done on either all the fields or none.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base is maintained within this resource.\nSo multiple bases can be active at the same time but one specific base can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    base: Optional[Base] = Field(
        None,
        description='`base` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class Message454(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content102(BaseModel):
    ageBasedMaximum: Optional[AgeBasedMaximum] = Field(
        None, description='This fields indicates how the age based maximum is applied\n'
    )
    ageBasedMinimum: Optional[AgeBasedMinimum] = Field(
        None, description='This fields indicates how the age based minimum is applied\n'
    )
    deviations: Optional[Deviations12] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `base`. \nSet `deviations` to null if no deviations apply.\n\nDeviating is done on either all the fields or none.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base is maintained within this resource.\nSo multiple bases can be active at the same time but one specific base can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    base: Optional[Base] = Field(
        None,
        description='`base` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforcalculationPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message454]] = None
    content: Optional[Content102] = None


class Message455(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforcalculationPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message455]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforcalculationPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforcalculationPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message456(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Origin6(BaseModel):
    key: Optional[int] = Field(
        None, description='The number for the origin\n', examples=[1]
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the origin\n',
        examples=['Normale wijziging'],
    )


class PayrollComponent24(BaseModel):
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['JAAR GRSL3'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component.                      \n',
        examples=[545],
    )


class FieldEmbeddedItem34(BaseModel):
    base: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The base (amount of money) to be used in the fund calculation\n',
        examples=[25000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    origin: Optional[Origin6] = Field(
        None,
        description='Indicates the method by which the record was created/changed, its origin. The origin influences certain business processes. For example if a record exists with origin manually entered (Normale wijziging) the process that calculates the base automatically will not do so as a manually entered value allready exists.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base for calculation starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base for calculation is maintained within this resource. So multiple bases can be active at the same time for different payrollcomponents',
        examples=['2018-01-01'],
    )
    payrollComponent: Optional[PayrollComponent24] = Field(
        None,
        description='A payroll component is the link to the salary calculation. In this case only specific payrollcomponents are available. The payroll components that are reserved for use as the base for fund calculations\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforemploymentfundcalculationGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message456]] = None
    field_embedded: Optional[List[FieldEmbeddedItem34]] = Field(None, alias='_embedded')


class Message457(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforemploymentfundcalculationGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message457]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforemploymentfundcalculationGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforemploymentfundcalculationGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforemploymentfundcalculationPostRequest(
    BaseModel
):
    base: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The base (amount of money) to be used in the fund calculation\n',
        examples=[25000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    origin: Optional[Origin6] = Field(
        None,
        description='Indicates the method by which the record was created/changed, its origin. The origin influences certain business processes. For example if a record exists with origin manually entered (Normale wijziging) the process that calculates the base automatically will not do so as a manually entered value allready exists.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base for calculation starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base for calculation is maintained within this resource. So multiple bases can be active at the same time for different payrollcomponents',
        examples=['2018-01-01'],
    )
    payrollComponent: Optional[PayrollComponent24] = Field(
        None,
        description='A payroll component is the link to the salary calculation. In this case only specific payrollcomponents are available. The payroll components that are reserved for use as the base for fund calculations\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class Message458(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content103(BaseModel):
    base: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The base (amount of money) to be used in the fund calculation\n',
        examples=[25000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    origin: Optional[Origin6] = Field(
        None,
        description='Indicates the method by which the record was created/changed, its origin. The origin influences certain business processes. For example if a record exists with origin manually entered (Normale wijziging) the process that calculates the base automatically will not do so as a manually entered value allready exists.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this base for calculation starts.\n\nA (linked chain)[./#section/Data/Date-chains] per base for calculation is maintained within this resource. So multiple bases can be active at the same time for different payrollcomponents',
        examples=['2018-01-01'],
    )
    payrollComponent: Optional[PayrollComponent24] = Field(
        None,
        description='A payroll component is the link to the salary calculation. In this case only specific payrollcomponents are available. The payroll components that are reserved for use as the base for fund calculations\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforemploymentfundcalculationPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message458]] = None
    content: Optional[Content103] = None


class Message459(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforemploymentfundcalculationPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message459]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforemploymentfundcalculationPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBasesforemploymentfundcalculationPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message460(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem35(BaseModel):
    benefitInKindType: Optional[BenefitInKindType] = Field(
        None,
        description='The benefit in kind of the employment. `benefitinkind` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    brand: Optional[constr(max_length=30)] = Field(
        None, description='The brand of the benefit in kind.', examples=['Apple']
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the benefit in kind',
        examples=['geen bijzonderheden'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this BenefitInKind starts.\n\nSo multiple Benefits in kind can be active at the same time but one specific BenefitsInKind can never be active multiple times at the same time.\n',
        examples=['2018-01-01'],
    )
    supplier: Optional[constr(max_length=30)] = Field(
        None,
        description='The supplier of the benefit in kind.',
        examples=['Mediamarkt'],
    )
    type: Optional[constr(max_length=30)] = Field(
        None, description='The type of the benefit in kind.', examples=['Iphone 11']
    )
    value: Optional[confloat(ge=0.0)] = Field(
        None, description='The value for the selected benefit of kind.', examples=[1100]
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsInKindGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message460]] = None
    field_embedded: Optional[List[FieldEmbeddedItem35]] = Field(None, alias='_embedded')


class Message461(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsInKindGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message461]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsInKindGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsInKindGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsInKindPostRequest(
    BaseModel
):
    benefitInKindType: Optional[BenefitInKindType] = Field(
        None,
        description='The benefit in kind of the employment. `benefitinkind` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    brand: Optional[constr(max_length=30)] = Field(
        None, description='The brand of the benefit in kind.', examples=['Apple']
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the benefit in kind',
        examples=['geen bijzonderheden'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this BenefitInKind starts.\n\nSo multiple Benefits in kind can be active at the same time but one specific BenefitsInKind can never be active multiple times at the same time.\n',
        examples=['2018-01-01'],
    )
    supplier: Optional[constr(max_length=30)] = Field(
        None,
        description='The supplier of the benefit in kind.',
        examples=['Mediamarkt'],
    )
    type: Optional[constr(max_length=30)] = Field(
        None, description='The type of the benefit in kind.', examples=['Iphone 11']
    )
    value: Optional[confloat(ge=0.0)] = Field(
        None, description='The value for the selected benefit of kind.', examples=[1100]
    )


class Message462(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content104(BaseModel):
    benefitInKindType: Optional[BenefitInKindType] = Field(
        None,
        description='The benefit in kind of the employment. `benefitinkind` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    brand: Optional[constr(max_length=30)] = Field(
        None, description='The brand of the benefit in kind.', examples=['Apple']
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the benefit in kind',
        examples=['geen bijzonderheden'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this BenefitInKind starts.\n\nSo multiple Benefits in kind can be active at the same time but one specific BenefitsInKind can never be active multiple times at the same time.\n',
        examples=['2018-01-01'],
    )
    supplier: Optional[constr(max_length=30)] = Field(
        None,
        description='The supplier of the benefit in kind.',
        examples=['Mediamarkt'],
    )
    type: Optional[constr(max_length=30)] = Field(
        None, description='The type of the benefit in kind.', examples=['Iphone 11']
    )
    value: Optional[confloat(ge=0.0)] = Field(
        None, description='The value for the selected benefit of kind.', examples=[1100]
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsInKindPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message462]] = None
    content: Optional[Content104] = None


class Message463(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsInKindPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message463]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsInKindPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsInKindPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message464(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent27(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. There are six viable categories for this resource: <br/> 7,  Bruto vergoeding volgens tabel<br/> 9,  Netto vergoeding<br/> 30, Bedrag per eenheid<br/> 12, Bruto inhouding<br/> 13, Netto inhouding<br/> 11, Fiscale bijtelling <br/> 17, Afdrachtvermindering<br/>\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None, description='The number for the payroll component.\n', examples=[1]
    )


class FieldEmbeddedItem36(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent27] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] per payroll component is maintained within this resource.\n',
        examples=['1995-05-21'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.    <br/>\n',
        examples=[50.87],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsanddeductionsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message464]] = None
    field_embedded: Optional[List[FieldEmbeddedItem36]] = Field(None, alias='_embedded')


class Message465(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsanddeductionsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message465]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsanddeductionsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsanddeductionsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollComponent28(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None, description='The number for the payroll component.\n', examples=[1]
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsanddeductionsPostRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent28] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] per payroll component is maintained with this resource.\n',
        examples=['1995-05-21'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.\n',
        examples=[50.87],
    )


class Message466(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent29(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. There are six viable categories for this resource: <br/> 7,  Bruto vergoeding volgens tabel<br/> 9,  Netto vergoeding<br/> 30, Bedrag per eenheid<br/> 12, Bruto inhouding<br/> 13, Netto inhouding<br/> 11, Fiscale bijtelling <br/> 17, Afdrachtvermindering<br/>\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None, description='The number for the payroll component.\n', examples=[1]
    )


class Content105(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent29] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] per payroll component is maintained within this resource.\n',
        examples=['1995-05-21'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.    <br/>\n',
        examples=[50.87],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsanddeductionsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message466]] = None
    content: Optional[Content105] = None


class Message467(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsanddeductionsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message467]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsanddeductionsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdBenefitsanddeductionsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message468(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem37(BaseModel):
    brand: Optional[str] = Field(
        None, description='Brand of the vehicle.\n', examples=['Volvo']
    )
    catalogValue: Optional[confloat(le=999999.99)] = Field(
        None, description='The catalog value of the car.\n', examples=[20000]
    )
    comments: Optional[str] = Field(
        None,
        description='Any comments on the car or the contract.\n',
        examples=['This car is very nice'],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    fuelCardNumber: Optional[str] = Field(
        None,
        description='Registration number of the fuel card.\n',
        examples=['B100.323.903'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    kilometersPrivateUse: Optional[int] = Field(
        None,
        description='The number kilometers per year the employee can use the car for private purposes.\n',
        examples=[10000],
    )
    lease: Optional[Lease] = Field(None, description='Details of the leasecontract\n')
    leaseOrBuy: Optional[LeaseOrBuy] = Field(
        None, description='Indication of the ownership of the company car.\n'
    )
    licensePlateNumber: Optional[constr(min_length=1, max_length=8)] = Field(
        None,
        description='Vehicle registration number (license plate) of the  company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    model: Optional[str] = Field(
        None, description='Model of the vehicle.\n', examples=['V60']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The start date of the entity.', examples=['2021-01-01']
    )
    supplier: Optional[str] = Field(
        None,
        description='Name of the company the delivered the company car.\n',
        examples=['Leasemaatschappij Tilburg'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCompanycarsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message468]] = None
    field_embedded: Optional[List[FieldEmbeddedItem37]] = Field(None, alias='_embedded')


class Message469(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCompanycarsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message469]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCompanycarsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCompanycarsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCompanycarsPostRequest(
    BaseModel
):
    brand: Optional[str] = Field(
        None, description='Brand of the vehicle.\n', examples=['Volvo']
    )
    catalogValue: Optional[confloat(le=999999.99)] = Field(
        None, description='The catalog value of the car.\n', examples=[20000]
    )
    comments: Optional[str] = Field(
        None,
        description='Any comments on the car or the contract.\n',
        examples=['This car is very nice'],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    fuelCardNumber: Optional[str] = Field(
        None,
        description='Registration number of the fuel card.\n',
        examples=['B100.323.903'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    kilometersPrivateUse: Optional[int] = Field(
        None,
        description='The number kilometers per year the employee can use the car for private purposes.\n',
        examples=[10000],
    )
    lease: Optional[Lease] = Field(None, description='Details of the leasecontract\n')
    leaseOrBuy: Optional[LeaseOrBuy] = Field(
        None, description='Indication of the ownership of the company car.\n'
    )
    licensePlateNumber: Optional[constr(min_length=1, max_length=8)] = Field(
        None,
        description='Vehicle registration number (license plate) of the  company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    model: Optional[str] = Field(
        None, description='Model of the vehicle.\n', examples=['V60']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The start date of the entity.', examples=['2021-01-01']
    )
    supplier: Optional[str] = Field(
        None,
        description='Name of the company the delivered the company car.\n',
        examples=['Leasemaatschappij Tilburg'],
    )


class Message470(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content106(BaseModel):
    brand: Optional[str] = Field(
        None, description='Brand of the vehicle.\n', examples=['Volvo']
    )
    catalogValue: Optional[confloat(le=999999.99)] = Field(
        None, description='The catalog value of the car.\n', examples=[20000]
    )
    comments: Optional[str] = Field(
        None,
        description='Any comments on the car or the contract.\n',
        examples=['This car is very nice'],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    fuelCardNumber: Optional[str] = Field(
        None,
        description='Registration number of the fuel card.\n',
        examples=['B100.323.903'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    kilometersPrivateUse: Optional[int] = Field(
        None,
        description='The number kilometers per year the employee can use the car for private purposes.\n',
        examples=[10000],
    )
    lease: Optional[Lease] = Field(None, description='Details of the leasecontract\n')
    leaseOrBuy: Optional[LeaseOrBuy] = Field(
        None, description='Indication of the ownership of the company car.\n'
    )
    licensePlateNumber: Optional[constr(min_length=1, max_length=8)] = Field(
        None,
        description='Vehicle registration number (license plate) of the  company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    model: Optional[str] = Field(
        None, description='Model of the vehicle.\n', examples=['V60']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The start date of the entity.', examples=['2021-01-01']
    )
    supplier: Optional[str] = Field(
        None,
        description='Name of the company the delivered the company car.\n',
        examples=['Leasemaatschappij Tilburg'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCompanycarsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message470]] = None
    content: Optional[Content106] = None


class Message471(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCompanycarsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message471]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCompanycarsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCompanycarsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCorrectstartdatePatchRequest(
    BaseModel
):
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts (=first day of the employment).\n',
        examples=['2018-01-01'],
    )


class Message472(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCorrectstartdatePatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message472]] = None
    content: Optional[Dict[str, Any]] = None


class Message473(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCorrectstartdatePatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message473]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCorrectstartdatePatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCorrectstartdatePatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCorrectstartdatePatchResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message473]] = None
    version: Optional[Version] = None


class Message475(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem38(BaseModel):
    costPerHour: Optional[confloat(ge=-99999.99, le=99999.99)] = Field(
        None, description='The cost per hour for the employment\n', examples=[21.2]
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[PayrollPeriods] = Field(
        None, description='The period of the kpu record.'
    )
    registrationMethod: Optional[RegistrationMethod] = Field(
        None,
        description='This object indicates how the cost per hour was aquired. Possible values are Verloning, Schatting and Handmatig',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCostperhourGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message475]] = None
    field_embedded: Optional[List[FieldEmbeddedItem38]] = Field(None, alias='_embedded')


class Message476(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCostperhourGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message476]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCostperhourGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCostperhourGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCostperhourPostRequest(
    BaseModel
):
    costPerHour: Optional[confloat(ge=-99999.99, le=99999.99)] = Field(
        None, description='The cost per hour for the employment\n', examples=[21.2]
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[PayrollPeriods] = Field(
        None, description='The period of the kpu record.'
    )
    registrationMethod: Optional[RegistrationMethod] = Field(
        None,
        description='This object indicates how the cost per hour was aquired. Possible values are Verloning, Schatting and Handmatig',
    )


class Message477(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content107(BaseModel):
    costPerHour: Optional[confloat(ge=-99999.99, le=99999.99)] = Field(
        None, description='The cost per hour for the employment\n', examples=[21.2]
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[PayrollPeriods] = Field(
        None, description='The period of the kpu record.'
    )
    registrationMethod: Optional[RegistrationMethod] = Field(
        None,
        description='This object indicates how the cost per hour was aquired. Possible values are Verloning, Schatting and Handmatig',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCostperhourPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message477]] = None
    content: Optional[Content107] = None


class Message478(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCostperhourPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message478]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCostperhourPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCostperhourPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message479(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem39(BaseModel):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employment',
        examples=['41'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomfieldsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message479]] = None
    field_embedded: Optional[List[FieldEmbeddedItem39]] = Field(None, alias='_embedded')


class Message480(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomfieldsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message480]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomfieldsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomfieldsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomfieldsPostRequest(
    BaseModel
):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employment',
        examples=['41'],
    )


class Message481(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content108(BaseModel):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employment',
        examples=['41'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomfieldsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message481]] = None
    content: Optional[Content108] = None


class Message482(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomfieldsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message482]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomfieldsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomfieldsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message483(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class RecurrencePattern3(BaseModel):
    numberOfRepetitionsAfterFirstNotification: Optional[conint(ge=1, le=99)] = Field(
        None,
        description='The number of times the notification will be repeated after the first Notification. Setting the value 99 will result in repeating the notification indefinite.\n',
        examples=[4],
    )
    recurrenceNumber: Optional[conint(ge=1, le=365)] = Field(
        None,
        description='The number of the recurrence pattern. An example recurrence pattern is: repeat every 2 weeks.\n',
        examples=[2],
    )
    recurrencePeriod: Optional[RecurrencePeriod] = Field(
        None,
        description='The period of the recurrence pattern An example recurrence pattern is: repeat every 2 weeks.\n',
    )


class FieldEmbeddedItem40(BaseModel):
    expirationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the Notification will expire.',
        examples=['2021-01-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    notificationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the first notification occurs.',
        examples=['2021-01-01'],
    )
    notificationText: Optional[str] = Field(
        None,
        description='The description of the signal',
        examples=['Signal renew document'],
    )
    recurrencePattern: Optional[RecurrencePattern3] = Field(
        None,
        description='Define a pattern for repeating the notification. This pattern is used to create Notifications after the initial notification as defined in the notificationDate.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomnotificationsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message483]] = None
    field_embedded: Optional[List[FieldEmbeddedItem40]] = Field(None, alias='_embedded')


class Message484(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomnotificationsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message484]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomnotificationsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomnotificationsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class RecurrencePattern4(BaseModel):
    numberOfRepetitionsAfterFirstNotification: Optional[conint(ge=1, le=99)] = Field(
        None,
        description='The number of times the notification will be repeated after the first Notification. Setting the value 99 will result in repeating the notification indefinite.\n',
        examples=[4],
    )
    recurrenceNumber: Optional[conint(ge=1, le=365)] = Field(
        None,
        description='The number of the recurrence pattern. An example recurrence pattern is: repeat every 2 weeks.\n',
        examples=[2],
    )
    recurrencePeriod: Optional[RecurrencePeriod] = Field(
        None,
        description='The period of the recurrence pattern An example recurrence pattern is: repeat every 2 weeks.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomnotificationsPostRequest(
    BaseModel
):
    expirationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the Notification will expire.',
        examples=['2021-01-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    notificationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the first notification occurs.',
        examples=['2021-01-01'],
    )
    notificationText: Optional[str] = Field(
        None,
        description='The description of the signal',
        examples=['Signal renew document'],
    )
    recurrencePattern: Optional[RecurrencePattern4] = Field(
        None,
        description='Define a pattern for repeating the notification. This pattern is used to create Notifications after the initial notification as defined in the notificationDate.\n',
    )


class Message485(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class RecurrencePattern5(BaseModel):
    numberOfRepetitionsAfterFirstNotification: Optional[conint(ge=1, le=99)] = Field(
        None,
        description='The number of times the notification will be repeated after the first Notification. Setting the value 99 will result in repeating the notification indefinite.\n',
        examples=[4],
    )
    recurrenceNumber: Optional[conint(ge=1, le=365)] = Field(
        None,
        description='The number of the recurrence pattern. An example recurrence pattern is: repeat every 2 weeks.\n',
        examples=[2],
    )
    recurrencePeriod: Optional[RecurrencePeriod] = Field(
        None,
        description='The period of the recurrence pattern An example recurrence pattern is: repeat every 2 weeks.\n',
    )


class Content109(BaseModel):
    expirationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the Notification will expire.',
        examples=['2021-01-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    notificationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the first notification occurs.',
        examples=['2021-01-01'],
    )
    notificationText: Optional[str] = Field(
        None,
        description='The description of the signal',
        examples=['Signal renew document'],
    )
    recurrencePattern: Optional[RecurrencePattern5] = Field(
        None,
        description='Define a pattern for repeating the notification. This pattern is used to create Notifications after the initial notification as defined in the notificationDate.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomnotificationsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message485]] = None
    content: Optional[Content109] = None


class Message486(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomnotificationsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message486]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomnotificationsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdCustomnotificationsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message487(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent30(BaseModel):
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Tijd voor tijd, UREN TVT 130%'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[11],
    )


class FieldEmbeddedItem41(BaseModel):
    dateOfLastChangeByEmployee: Optional[datetime] = Field(
        None,
        description='The time the declaration was last changed',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    dateOfSubmissionByEmployee: Optional[datetime] = Field(
        None,
        description='The time the declaration was submitted',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    declarationComment: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the employee',
        examples=['Overwerk project X'],
    )
    declarationDate: Optional[date_aliased] = Field(
        None,
        description='The date to which the declaration is applicable. As requested by the employee.',
        examples=['2017-11-01'],
    )
    declarationStatus: Optional[DeclarationStatus] = Field(
        None,
        description='The current status of the declaration\n\nThe status is changed by using the PATCH endpoint.\n1 Open --> Accept or reject 2 Goedgekeurd ---> Process (not yet implemented) 3 Geweigerd ---> No changes possible 5 Verwerkt ---> No changes possible 6 Onverwerkbaar ---> No changes possible',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    numberOfUnits: Optional[float] = Field(
        None, description='The number of units requested', examples=[8]
    )
    payrollComponent: Optional[PayrollComponent30] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period. \n',
    )
    processedInPayrollPeriod: Optional[ProcessedInPayrollPeriod] = Field(
        None,
        description='If the declaration has been succesfully processed then this object will show the payroll period for which a payrollPeriodData has been created.\n\nIf the declaration has not yet been processed, then the value of this object will be null.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeclarationsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message487]] = None
    field_embedded: Optional[List[FieldEmbeddedItem41]] = Field(None, alias='_embedded')


class Message488(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeclarationsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message488]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeclarationsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeclarationsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message489(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class EndPeriod9(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the last payroll period for which the record is applicable.\n',
        examples=[2017],
    )


class StartPeriod9(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the record is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the record is applicable.\n',
        examples=[2017],
    )


class FieldEmbeddedItem42(BaseModel):
    endPeriod: Optional[EndPeriod9] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startPeriod: Optional[StartPeriod9] = None
    typeOfDeviatingAwfContribution: Optional[TypeOfDeviatingAwfContribution] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatingawfcontributionsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message489]] = None
    field_embedded: Optional[List[FieldEmbeddedItem42]] = Field(None, alias='_embedded')


class Message490(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatingawfcontributionsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message490]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatingawfcontributionsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatingawfcontributionsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatingawfcontributionsPostRequest(
    BaseModel
):
    endPeriod: Optional[EndPeriod9] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startPeriod: Optional[StartPeriod9] = None
    typeOfDeviatingAwfContribution: Optional[TypeOfDeviatingAwfContribution] = None


class Message491(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content110(BaseModel):
    endPeriod: Optional[EndPeriod9] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startPeriod: Optional[StartPeriod9] = None
    typeOfDeviatingAwfContribution: Optional[TypeOfDeviatingAwfContribution] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatingawfcontributionsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message491]] = None
    content: Optional[Content110] = None


class Message492(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatingawfcontributionsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message492]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatingawfcontributionsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatingawfcontributionsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message493(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent31(BaseModel):
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['LOON/SALARIS'],
    )
    key: Optional[int] = Field(
        None, description='The number for the payroll component.\n', examples=[70]
    )


class FieldEmbeddedItem43(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent31] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this DeviatingHouryWage starts.\n\nA (broken chain)[./#section/Data/Date-chains] per DeviatingHouryWage is maintained within this resource. So multiple DeviatingHouryWages can be active at the same time but one specific DeviatingHouryWage can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.\n',
        examples=[50.87],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatinghourlywagesGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message493]] = None
    field_embedded: Optional[List[FieldEmbeddedItem43]] = Field(None, alias='_embedded')


class Message494(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatinghourlywagesGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message494]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatinghourlywagesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatinghourlywagesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatinghourlywagesPostRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent31] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this DeviatingHouryWage starts.\n\nA (broken chain)[./#section/Data/Date-chains] per DeviatingHouryWage is maintained within this resource. So multiple DeviatingHouryWages can be active at the same time but one specific DeviatingHouryWage can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.\n',
        examples=[50.87],
    )


class Message495(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content111(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent31] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this DeviatingHouryWage starts.\n\nA (broken chain)[./#section/Data/Date-chains] per DeviatingHouryWage is maintained within this resource. So multiple DeviatingHouryWages can be active at the same time but one specific DeviatingHouryWage can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.\n',
        examples=[50.87],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatinghourlywagesPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message495]] = None
    content: Optional[Content111] = None


class Message496(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatinghourlywagesPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message496]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatinghourlywagesPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDeviatinghourlywagesPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message497(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class SignDocumentStatus3(BaseModel):
    key: Optional[str] = Field(None, examples=['Se'])
    value: Optional[str] = Field(None, examples=['Onderteken-verzoek verzonden'])


class FieldEmbeddedItem44(BaseModel):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    category: Optional[constr(max_length=4000)] = Field(
        None,
        description='The category of the document. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    isReadBy: Optional[IsReadBy] = None
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    submittedBy: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the user that has submitted the document. Qwoater: Docfield 34 Gebruiker\n',
        examples=['Bowls, John'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )
    filename: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    isInitiateSignDocumentRequestPossible: Optional[bool] = Field(
        None,
        description='Indicates whether initiate sign document request is possible.\n',
        examples=[True],
    )
    signDocumentStatus: Optional[SignDocumentStatus3] = Field(
        None, description='Status of the signature.\n'
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message497]] = None
    field_embedded: Optional[List[FieldEmbeddedItem44]] = Field(None, alias='_embedded')


class Message498(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message498]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsPostRequest(BaseModel):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    category: Optional[constr(max_length=4000)] = Field(
        None,
        description='The category of the document. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    isReadBy: Optional[IsReadBy] = None
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    submittedBy: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the user that has submitted the document. Qwoater: Docfield 34 Gebruiker\n',
        examples=['Bowls, John'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )
    filename: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    file: Optional[str] = Field(
        None, description='base64 encoded document file.', examples=['YQ==']
    )
    sendEmailNotification: Optional[bool] = Field(
        False,
        description='Indicate whether to send an email to the employee.',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsPostResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message498]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsPostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message498]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message498]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdGetResponse(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdPutRequest(
    BaseModel
):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    category: Optional[constr(max_length=4000)] = Field(
        None,
        description='The category of the document. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    isReadBy: Optional[IsReadBy] = None
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    submittedBy: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the user that has submitted the document. Qwoater: Docfield 34 Gebruiker\n',
        examples=['Bowls, John'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message498]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdPutResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdPutResponse3(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message498]] = None
    version: Optional[Version] = None


class Message504(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem45(BaseModel):
    attribute: Optional[str] = Field(
        None, description='Qwoater: Kenmerk\n', examples=['']
    )
    category: Optional[str] = Field(
        None, description='Qwoater: DocumentType\n', examples=['']
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time the declaration was submitted. Qwoater: Signaleringsdatum\n',
        examples=['2018-05-08'],
    )
    description: Optional[str] = Field(
        None, description='Qwoater: Omschrijving\n', examples=['VSP004']
    )
    endUser: Optional[str] = Field(
        None, description='Qwoater: EndUser\n', examples=['Hur, Ben']
    )
    event: Optional[str] = Field(
        None, description='Qwoater: Event\n', examples=['Audittrail opgevraagd']
    )
    eventDate: Optional[datetime] = Field(
        None,
        description='The time the declaration was submitted. Qwoater: AuditEventDate\n',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    role: Optional[str] = Field(
        None, description='Qwoater: Role\n', examples=['Provider']
    )
    year: Optional[str] = Field(None, description='Qwoater: Jaar\n', examples=['2020'])


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdAudittrailGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message504]] = None
    field_embedded: Optional[List[FieldEmbeddedItem45]] = Field(None, alias='_embedded')


class Message505(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdAudittrailGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message505]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdAudittrailGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdAudittrailGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureDeleteResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message505]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureDeleteResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message507(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class SignDocumentStatus4(BaseModel):
    Key: Optional[str] = Field(
        None, description='The key of the status', examples=['Ne']
    )
    Value: Optional[str] = Field(
        None,
        description='The description of the status.',
        examples=['Nieuw onderteken-verzoek'],
    )


class FieldEmbedded1(BaseModel):
    signDocumentStatus: Optional[SignDocumentStatus4] = Field(
        None, description='Status of the signature at document level'
    )
    signerStatus: Optional[List[SignerStatu]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureGetResponse(
    BaseModel
):
    messages: Optional[List[Message507]] = None
    field_embedded: Optional[FieldEmbedded1] = Field(None, alias='_embedded')


class Message508(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message508]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureInitiatePostRequestItem(
    BaseModel
):
    emailAddress: Optional[str] = Field(
        None, description='The email address of the signer.', examples=['test@test.com']
    )
    mobilePhoneNumber: Optional[str] = Field(
        None,
        description='The mobile phone number of the signer. In E.164 format',
        examples=['+31612345678'],
    )
    name: Optional[str] = Field(
        None, description='The name of the signer', examples=['Ben Hur']
    )
    signingOrder: Optional[int] = Field(
        None,
        description='When filled, this integer is used to set the order in which the signers have to sign the document. An email will be sent to all signers with the first SigningOrder number. When signed an email will be sent to all signers with the second SingingOrder. Etcetera.',
        examples=['2'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureInitiatePostRequest(
    RootModel[
        List[
            ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureInitiatePostRequestItem
        ]
    ]
):
    root: List[
        ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureInitiatePostRequestItem
    ]


class Message509(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content112(BaseModel):
    signDocumentStatus: Optional[SignDocumentStatus4] = Field(
        None, description='Status of the signature at document level'
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureInitiatePostResponse(
    BaseModel
):
    messages: Optional[List[Message509]] = None
    content: Optional[Content112] = None


class Message510(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureInitiatePostResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message510]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureInitiatePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureInitiatePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureReportGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message510]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureReportGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumentsDocumentIdSignatureReportGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumenttemplatesDocumentIdGeneratedocumentPostRequest(
    BaseModel
):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The date at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    filename: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    referenceDate: Optional[date_aliased] = Field(
        None,
        description='This date will be used to select date depending data such as department and function.\n',
        examples=['2020-05-08'],
    )
    templateEmployerId: Optional[UUID] = Field(
        None,
        description='The unique identifier of the employer to which the template belongs (GUID/UUID).',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )
    sendEmailNotification: Optional[bool] = Field(
        False,
        description='Indicate whether to send an email to the employee.',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumenttemplatesDocumentIdGeneratedocumentPostResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message510]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumenttemplatesDocumentIdGeneratedocumentPostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumenttemplatesDocumentIdGeneratedocumentPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumenttemplatesDocumentIdGeneratedocumentPreviewPostRequest(
    BaseModel
):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The date at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    filename: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    referenceDate: Optional[date_aliased] = Field(
        None,
        description='This date will be used to select date depending data such as department and function.\n',
        examples=['2020-05-08'],
    )
    templateEmployerId: Optional[UUID] = Field(
        None,
        description='The unique identifier of the employer to which the template belongs (GUID/UUID).',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumenttemplatesDocumentIdGeneratedocumentPreviewPostResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message510]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumenttemplatesDocumentIdGeneratedocumentPreviewPostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdDocumenttemplatesDocumentIdGeneratedocumentPreviewPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmployeeprofilePatchRequest(
    BaseModel
):
    activationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the profile should be activated.',
        examples=['2021-01-01'],
    )
    employeeProfileId: Optional[int] = Field(
        None,
        description='The Id of the employeeProfile. If not provided, the employeeProfile which is set at employment level, is used.',
        examples=[1],
    )


class Message514(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content113(BaseModel):
    basesForCalculation: Optional[List[UUID]] = None
    benefitsAndDeductions: Optional[List[UUID]] = None
    employmentFunds: Optional[List[UUID]] = None
    employmentFundsABP: Optional[List[UUID]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmployeeprofilePatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message514]] = None
    content: Optional[Content113] = None


class Message515(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmployeeprofilePatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message515]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmployeeprofilePatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmployeeprofilePatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message516(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Deviations15(BaseModel):
    employmentContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating employment contribution percentage. This value will overrule the value of the selected `fund`. Indicates percentage wise how much the employment has to contribute to the payment of the "fund" contribution.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[11],
    )
    totalContributionPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Deviating total contribution percentage. This value will overrule the value of the selected `fund`. The difference between `employmentContributionPercentage` and `totalContributionPercentage` will be paid by the employer.\n\n__Note:__ Records with a `startDate` before 1-1-2014 have a different regular expression__:__ ^(\\d{1,3})(\\.\\d{1,3})?$ (a scale of 3 instead of 4).',
        examples=[12.0007],
    )


class FieldEmbeddedItem46(BaseModel):
    deviations: Optional[Deviations15] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution5] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmploymentfundsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message516]] = None
    field_embedded: Optional[List[FieldEmbeddedItem46]] = Field(None, alias='_embedded')


class Message517(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmploymentfundsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message517]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmploymentfundsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmploymentfundsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmploymentfundsPostRequest(
    BaseModel
):
    deviations: Optional[Deviations15] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution5] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class Message518(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content114(BaseModel):
    deviations: Optional[Deviations15] = Field(
        None,
        description='Only set a value for the underlying fields if you want to deviate from the values as defined by the selected `fund`.\n\nDeviating is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    fixedContribution: Optional[FixedContribution5] = Field(
        None,
        description='With the underlying elements fixed values (money) can be set as the result of the Fund calculation.  In doing so the actual calculation for the `fund` will no longer take place as the outcome is fixed. This has the side effect that the "grondslag" is no longer calculated.  In the data exchange with certain parties the "grondslag" has to be communicated allongside the contribution.  In those cases do not use this option as the calculation is disabled.\n\nSetting a fixed contribution is done on either all the fields or none.\n\n__Note:__ `deviations` and `fixedContribution` are mutually exclusive.',
    )
    fund: Optional[Fund] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this fund starts.\n\nA (linked chain)[./#section/Data/Date-chains] per fund is maintained within this resource. So multiple funds can be active at the same time but one specific fund can never be active multiple times at the same time.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmploymentfundsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message518]] = None
    content: Optional[Content114] = None


class Message519(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmploymentfundsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message519]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmploymentfundsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdEmploymentfundsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message520(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem47(BaseModel):
    additionalTaxLiabilityGroup: Optional[AdditionalTaxLiabilityGroup] = Field(
        None,
        description='Indication for what additional tax liability percentage (bijtelling) should be used for calculating the tax liabiltiy in the payroll process.\n\nIt is possible to acquire a value for this field based on the RDW-registration of the vehicle registration number (license plate) by calling that supplementary endpoint.\n',
    )
    dateOfFirstAdmission: Optional[date_aliased] = Field(
        None,
        description='First day of admission for the vehicle (datum eerste toelating). It is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.',
        examples=['2018-01-01'],
    )
    deviatingAdditionalTaxLiability: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Normally Loket will calculate the applicable tax liability based on the value and tax liability group of the car. However this field may OVERRIDE any other values, and in that case this amount will be applied as the applicable tax liability amount.\n',
        examples=[20000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    licensePlateNumber: Optional[constr(min_length=0, max_length=15)] = Field(
        None,
        description='Vehicle registration number (license plate) of the fiscal company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    reasonForNoAdditionalTaxLiability: Optional[ReasonForNoAdditionalTaxLiability] = (
        Field(
            None,
            description='In case the employment does have a fiscal company car but no additional tax liability should be applied, then the reason should be provided for the payroll tax return.\n',
        )
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2021-01-01'],
    )
    taxableBenefitForPrivateUse: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Taxable benefit for private use (eigen bijdrage van de werknemer) may be entered here, this will lower the tax liability to be paid in the payrolling process.\n',
        examples=[2000],
    )
    valueForTaxPurposes: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The value of the car for tax purposes. This field may only be NULL if a reason for no additional tax liability (reden voor geen bijtelling) is provided.\nIt is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.\n',
        examples=[20000],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalcompanycarsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message520]] = None
    field_embedded: Optional[List[FieldEmbeddedItem47]] = Field(None, alias='_embedded')


class Message521(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalcompanycarsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message521]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalcompanycarsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalcompanycarsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalcompanycarsPostRequest(
    BaseModel
):
    additionalTaxLiabilityGroup: Optional[AdditionalTaxLiabilityGroup] = Field(
        None,
        description='Indication for what additional tax liability percentage (bijtelling) should be used for calculating the tax liabiltiy in the payroll process.\n\nIt is possible to acquire a value for this field based on the RDW-registration of the vehicle registration number (license plate) by calling that supplementary endpoint.\n',
    )
    dateOfFirstAdmission: Optional[date_aliased] = Field(
        None,
        description='First day of admission for the vehicle (datum eerste toelating). It is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.',
        examples=['2018-01-01'],
    )
    deviatingAdditionalTaxLiability: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Normally Loket will calculate the applicable tax liability based on the value and tax liability group of the car. However this field may OVERRIDE any other values, and in that case this amount will be applied as the applicable tax liability amount.\n',
        examples=[20000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    licensePlateNumber: Optional[constr(min_length=0, max_length=15)] = Field(
        None,
        description='Vehicle registration number (license plate) of the fiscal company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    reasonForNoAdditionalTaxLiability: Optional[ReasonForNoAdditionalTaxLiability] = (
        Field(
            None,
            description='In case the employment does have a fiscal company car but no additional tax liability should be applied, then the reason should be provided for the payroll tax return.\n',
        )
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2021-01-01'],
    )
    taxableBenefitForPrivateUse: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Taxable benefit for private use (eigen bijdrage van de werknemer) may be entered here, this will lower the tax liability to be paid in the payrolling process.\n',
        examples=[2000],
    )
    valueForTaxPurposes: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The value of the car for tax purposes. This field may only be NULL if a reason for no additional tax liability (reden voor geen bijtelling) is provided.\nIt is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.\n',
        examples=[20000],
    )


class Message522(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content115(BaseModel):
    additionalTaxLiabilityGroup: Optional[AdditionalTaxLiabilityGroup] = Field(
        None,
        description='Indication for what additional tax liability percentage (bijtelling) should be used for calculating the tax liabiltiy in the payroll process.\n\nIt is possible to acquire a value for this field based on the RDW-registration of the vehicle registration number (license plate) by calling that supplementary endpoint.\n',
    )
    dateOfFirstAdmission: Optional[date_aliased] = Field(
        None,
        description='First day of admission for the vehicle (datum eerste toelating). It is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.',
        examples=['2018-01-01'],
    )
    deviatingAdditionalTaxLiability: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Normally Loket will calculate the applicable tax liability based on the value and tax liability group of the car. However this field may OVERRIDE any other values, and in that case this amount will be applied as the applicable tax liability amount.\n',
        examples=[20000],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2023-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    licensePlateNumber: Optional[constr(min_length=0, max_length=15)] = Field(
        None,
        description='Vehicle registration number (license plate) of the fiscal company car. The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    reasonForNoAdditionalTaxLiability: Optional[ReasonForNoAdditionalTaxLiability] = (
        Field(
            None,
            description='In case the employment does have a fiscal company car but no additional tax liability should be applied, then the reason should be provided for the payroll tax return.\n',
        )
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2021-01-01'],
    )
    taxableBenefitForPrivateUse: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='Taxable benefit for private use (eigen bijdrage van de werknemer) may be entered here, this will lower the tax liability to be paid in the payrolling process.\n',
        examples=[2000],
    )
    valueForTaxPurposes: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The value of the car for tax purposes. This field may only be NULL if a reason for no additional tax liability (reden voor geen bijtelling) is provided.\nIt is possible to acquire a value for this field based on the RDW-registration by calling that supplementary endpoint.\n',
        examples=[20000],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalcompanycarsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message522]] = None
    content: Optional[Content115] = None


class Message523(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalcompanycarsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message523]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalcompanycarsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalcompanycarsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message524(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem48(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=999999999.0)] = Field(
        None,
        description='The fiscal annual salary. NL: Fiscaal jaarloon',
        examples=[60000],
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax. NL: DagtabelToepassen',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable. NL: AfwijkendPercentageToepassen',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting). NL: ArbeidskortingToepassen',
        examples=[True],
    )
    applySalarysplit: Optional[ApplySalarysplit] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )
    applyStudentDeduction: Optional[bool] = Field(
        None,
        description='Apply the "Scholierenregeling". NL; ArbeidskortingToepassen',
        examples=[False],
    )
    contributionReductionEducation: Optional[ContributionReductionEducation] = Field(
        None, description='Afdr. verm. onderwijs\n'
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[confloat(ge=0.0, le=99.99)] = Field(
        None,
        description='Indicates the deviating payroll tax percentage which is to be applied. NL: AfwijkendLoonbelastingPercentage',
        examples=[25],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description="Indicates if there is a deviating payroll tax table is applicable (green vs white table). If 'Niet afwijkend', then the colour is based on the setting at the payroll administration level, either green or white. NL: AfwijkendeKleurLBtabel",
    )
    deviatingPercentageThirtyPercentFacility: Optional[
        confloat(ge=1e-06, le=29.999999)
    ] = Field(
        None,
        description='Indicates a deviating percentage which should be applied for the 30% facility (30%-regeling)',
        examples=[20.2345],
    )
    deviatingSmallJobsArrangement: Optional[bool] = Field(
        None, description='Kleine banenregeling', examples=[False]
    )
    deviatingTaxTableCode: Optional[DeviatingTaxTableCode] = Field(
        None,
        description='Indicates if the tax tabel code should be set to a specific code (code loonbelasting). Normally Loket will determine the tax table based on other properties of the employment, however this field allows the user to override this and set the tax table code to 999. Only in exceptional cases this field should have a value. NL: CodeLoonBelastingtabel',
    )
    doesWageIncludeAow: Optional[bool] = Field(
        None,
        description='Indicates whether wage include AOW pension (affects payrolling). NL: LoonInclusiefAowUitkering',
        examples=[False],
    )
    doesWageIncludeWajong: Optional[bool] = Field(
        None,
        description='Indicates whether wage include Wajong benefits (affects payrolling). NL: LoonInclusiefWajong',
        examples=[False],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    hasEmployeeLoan: Optional[bool] = Field(
        None,
        description='Whether an employee loan (Personeelslening) is applicable may be indicated here. The Personeelslening indirectly affects the income tax calculations.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    percentageForeignIncome: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='Indicates what percentage of the income of this employment is taxable outside the Netherlands. NL: PercentageBuitenlandsInkomen',
        examples=[50],
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen. NL: InwonerVan\n',
    )
    specialIndication: Optional[SpecialIndication] = Field(
        None, description='Indications This field is no longer used sinds 2005'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    thirtyPercentFacility: Optional[ThirtyPercentFacility] = Field(
        None,
        description='If the employee comes to work in the Netherlands from another country, the employer may grant an untaxed reimbursement. (30%-regeling).',
    )
    usesTransportByWithholdingAgent: Optional[bool] = Field(
        None,
        description="The so-called 'vervoer vanwege inhoudingsplichtige' is a tax rule that may apply. By example when the employer organizes the transport for the employee.",
        examples=[False],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalpropertiesGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message524]] = None
    field_embedded: Optional[List[FieldEmbeddedItem48]] = Field(None, alias='_embedded')


class Message525(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalpropertiesGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message525]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalpropertiesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalpropertiesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalpropertiesPostRequest(
    BaseModel
):
    annualSalary: Optional[confloat(ge=0.0, le=999999999.0)] = Field(
        None,
        description='The fiscal annual salary. NL: Fiscaal jaarloon',
        examples=[60000],
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax. NL: DagtabelToepassen',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable. NL: AfwijkendPercentageToepassen',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting). NL: ArbeidskortingToepassen',
        examples=[True],
    )
    applySalarysplit: Optional[ApplySalarysplit] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )
    applyStudentDeduction: Optional[bool] = Field(
        None,
        description='Apply the "Scholierenregeling". NL; ArbeidskortingToepassen',
        examples=[False],
    )
    contributionReductionEducation: Optional[ContributionReductionEducation] = Field(
        None, description='Afdr. verm. onderwijs\n'
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[confloat(ge=0.0, le=99.99)] = Field(
        None,
        description='Indicates the deviating payroll tax percentage which is to be applied. NL: AfwijkendLoonbelastingPercentage',
        examples=[25],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description="Indicates if there is a deviating payroll tax table is applicable (green vs white table). If 'Niet afwijkend', then the colour is based on the setting at the payroll administration level, either green or white. NL: AfwijkendeKleurLBtabel",
    )
    deviatingPercentageThirtyPercentFacility: Optional[
        confloat(ge=1e-06, le=29.999999)
    ] = Field(
        None,
        description='Indicates a deviating percentage which should be applied for the 30% facility (30%-regeling)',
        examples=[20.2345],
    )
    deviatingSmallJobsArrangement: Optional[bool] = Field(
        None, description='Kleine banenregeling', examples=[False]
    )
    deviatingTaxTableCode: Optional[DeviatingTaxTableCode] = Field(
        None,
        description='Indicates if the tax tabel code should be set to a specific code (code loonbelasting). Normally Loket will determine the tax table based on other properties of the employment, however this field allows the user to override this and set the tax table code to 999. Only in exceptional cases this field should have a value. NL: CodeLoonBelastingtabel',
    )
    doesWageIncludeAow: Optional[bool] = Field(
        None,
        description='Indicates whether wage include AOW pension (affects payrolling). NL: LoonInclusiefAowUitkering',
        examples=[False],
    )
    doesWageIncludeWajong: Optional[bool] = Field(
        None,
        description='Indicates whether wage include Wajong benefits (affects payrolling). NL: LoonInclusiefWajong',
        examples=[False],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    hasEmployeeLoan: Optional[bool] = Field(
        None,
        description='Whether an employee loan (Personeelslening) is applicable may be indicated here. The Personeelslening indirectly affects the income tax calculations.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    percentageForeignIncome: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='Indicates what percentage of the income of this employment is taxable outside the Netherlands. NL: PercentageBuitenlandsInkomen',
        examples=[50],
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen. NL: InwonerVan\n',
    )
    specialIndication: Optional[SpecialIndication] = Field(
        None, description='Indications This field is no longer used sinds 2005'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    thirtyPercentFacility: Optional[ThirtyPercentFacility] = Field(
        None,
        description='If the employee comes to work in the Netherlands from another country, the employer may grant an untaxed reimbursement. (30%-regeling).',
    )
    usesTransportByWithholdingAgent: Optional[bool] = Field(
        None,
        description="The so-called 'vervoer vanwege inhoudingsplichtige' is a tax rule that may apply. By example when the employer organizes the transport for the employee.",
        examples=[False],
    )


class Message526(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content116(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=999999999.0)] = Field(
        None,
        description='The fiscal annual salary. NL: Fiscaal jaarloon',
        examples=[60000],
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax. NL: DagtabelToepassen',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable. NL: AfwijkendPercentageToepassen',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting). NL: ArbeidskortingToepassen',
        examples=[True],
    )
    applySalarysplit: Optional[ApplySalarysplit] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )
    applyStudentDeduction: Optional[bool] = Field(
        None,
        description='Apply the "Scholierenregeling". NL; ArbeidskortingToepassen',
        examples=[False],
    )
    contributionReductionEducation: Optional[ContributionReductionEducation] = Field(
        None, description='Afdr. verm. onderwijs\n'
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[confloat(ge=0.0, le=99.99)] = Field(
        None,
        description='Indicates the deviating payroll tax percentage which is to be applied. NL: AfwijkendLoonbelastingPercentage',
        examples=[25],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description="Indicates if there is a deviating payroll tax table is applicable (green vs white table). If 'Niet afwijkend', then the colour is based on the setting at the payroll administration level, either green or white. NL: AfwijkendeKleurLBtabel",
    )
    deviatingPercentageThirtyPercentFacility: Optional[
        confloat(ge=1e-06, le=29.999999)
    ] = Field(
        None,
        description='Indicates a deviating percentage which should be applied for the 30% facility (30%-regeling)',
        examples=[20.2345],
    )
    deviatingSmallJobsArrangement: Optional[bool] = Field(
        None, description='Kleine banenregeling', examples=[False]
    )
    deviatingTaxTableCode: Optional[DeviatingTaxTableCode] = Field(
        None,
        description='Indicates if the tax tabel code should be set to a specific code (code loonbelasting). Normally Loket will determine the tax table based on other properties of the employment, however this field allows the user to override this and set the tax table code to 999. Only in exceptional cases this field should have a value. NL: CodeLoonBelastingtabel',
    )
    doesWageIncludeAow: Optional[bool] = Field(
        None,
        description='Indicates whether wage include AOW pension (affects payrolling). NL: LoonInclusiefAowUitkering',
        examples=[False],
    )
    doesWageIncludeWajong: Optional[bool] = Field(
        None,
        description='Indicates whether wage include Wajong benefits (affects payrolling). NL: LoonInclusiefWajong',
        examples=[False],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    hasEmployeeLoan: Optional[bool] = Field(
        None,
        description='Whether an employee loan (Personeelslening) is applicable may be indicated here. The Personeelslening indirectly affects the income tax calculations.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    percentageForeignIncome: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='Indicates what percentage of the income of this employment is taxable outside the Netherlands. NL: PercentageBuitenlandsInkomen',
        examples=[50],
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen. NL: InwonerVan\n',
    )
    specialIndication: Optional[SpecialIndication] = Field(
        None, description='Indications This field is no longer used sinds 2005'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    thirtyPercentFacility: Optional[ThirtyPercentFacility] = Field(
        None,
        description='If the employee comes to work in the Netherlands from another country, the employer may grant an untaxed reimbursement. (30%-regeling).',
    )
    usesTransportByWithholdingAgent: Optional[bool] = Field(
        None,
        description="The so-called 'vervoer vanwege inhoudingsplichtige' is a tax rule that may apply. By example when the employer organizes the transport for the employee.",
        examples=[False],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalpropertiesPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message526]] = None
    content: Optional[Content116] = None


class Message527(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalpropertiesPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message527]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalpropertiesPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdFiscalpropertiesPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message528(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem49(BaseModel):
    additionalContributionEmployer: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='If applicable, please enter any additional contribution (extra bijdrage werkgever) for the employer in relation to the Healthcare Insurance Act (Zorgverzekeringswet).',
        examples=[320],
    )
    additionalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='Additional premium (aanvullende premie) on top of the nomial premium may be registered here, if applicable.',
        examples=[120],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    healthcareInsuranceActType: Optional[HealthcareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nominalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='A nominal premium (nominale premie) for the Healthcare Insurance Act may be registered here, if applicable.',
        examples=[320],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdHealthcareinsuranceactconfigurationsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message528]] = None
    field_embedded: Optional[List[FieldEmbeddedItem49]] = Field(None, alias='_embedded')


class Message529(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdHealthcareinsuranceactconfigurationsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message529]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdHealthcareinsuranceactconfigurationsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdHealthcareinsuranceactconfigurationsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdHealthcareinsuranceactconfigurationsPostRequest(
    BaseModel
):
    additionalContributionEmployer: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='If applicable, please enter any additional contribution (extra bijdrage werkgever) for the employer in relation to the Healthcare Insurance Act (Zorgverzekeringswet).',
        examples=[320],
    )
    additionalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='Additional premium (aanvullende premie) on top of the nomial premium may be registered here, if applicable.',
        examples=[120],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    healthcareInsuranceActType: Optional[HealthcareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nominalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='A nominal premium (nominale premie) for the Healthcare Insurance Act may be registered here, if applicable.',
        examples=[320],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class Message530(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content117(BaseModel):
    additionalContributionEmployer: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='If applicable, please enter any additional contribution (extra bijdrage werkgever) for the employer in relation to the Healthcare Insurance Act (Zorgverzekeringswet).',
        examples=[320],
    )
    additionalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='Additional premium (aanvullende premie) on top of the nomial premium may be registered here, if applicable.',
        examples=[120],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    healthcareInsuranceActType: Optional[HealthcareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nominalPremium: Optional[confloat(ge=0.01, le=9999.99)] = Field(
        None,
        description='A nominal premium (nominale premie) for the Healthcare Insurance Act may be registered here, if applicable.',
        examples=[320],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdHealthcareinsuranceactconfigurationsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message530]] = None
    content: Optional[Content117] = None


class Message531(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdHealthcareinsuranceactconfigurationsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message531]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdHealthcareinsuranceactconfigurationsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdHealthcareinsuranceactconfigurationsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message532(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AllocationBasedOnActualHours3(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class AllocationBasedOnFixedWeight3(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    weight: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='The weight (factor) determines the relative weight when allocating the costs for this specific combination of costCenter and costUnit.\n',
        examples=[1],
    )


class EndPeriod12(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the last payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class EndPeriod13(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class StartPeriod12(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class JournalProfileConfiguration3(BaseModel):
    endPeriod: Optional[EndPeriod13] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfile: Optional[JournalProfile] = None
    startPeriod: Optional[StartPeriod12] = None


class StartPeriod13(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class FieldEmbeddedItem50(BaseModel):
    allocationBasedOnActualHours: Optional[AllocationBasedOnActualHours3] = Field(
        None,
        description='Provide the allocation details within this object in case allocation based on actual hours (=normuren) is applicable. Functional effect; when PayrollPeriodData (=Variabele Gegevens) are created for this Employment, then the default values for the fields costCenter and costUnit wil be based on the settings within this resource.  So if you are an external party and want to provide costUnit and/or costCenter when sending PayrollPeriodData,  make sure you first acquire the default values by calling the `/ defaults` for the PayrollPeriodData resource (!).\n\nPlease note that this object MUST be null when `allocationBasedOnFixedWeights` is to be applied. Only one of the two may be provided.\n',
    )
    allocationBasedOnFixedWeights: Optional[List[AllocationBasedOnFixedWeight3]] = (
        Field(
            None,
            description='Provide the allocation details within this object when allocation based on weights (=factor) is applicable. Functional effect; if the costCenter and/or costUnit are provided within this object than the journal run calculations will use these fixed weights when performing calculations. Any costCenters and costUnits in the PayrollPeriodData records will be ignored for the calculations in that case.\n\nPlease note that this object MUST be null when `allocationBasedOnActualHours` is to be applied. Only one of the two may be provided. \n',
        )
    )
    endPeriod: Optional[EndPeriod12] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfileConfiguration: Optional[JournalProfileConfiguration3] = Field(
        None,
        description='Indicates to which journal profiel configuration the record relates',
    )
    startPeriod: Optional[StartPeriod13] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdJournalallocationsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message532]] = None
    field_embedded: Optional[List[FieldEmbeddedItem50]] = Field(None, alias='_embedded')


class Message533(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdJournalallocationsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message533]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdJournalallocationsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdJournalallocationsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class AllocationBasedOnActualHours4(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class AllocationBasedOnFixedWeight4(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    weight: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='The weight (factor) determines the relative weight when allocating the costs for this specific combination of costCenter and costUnit.\n',
        examples=[1],
    )


class EndPeriod14(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the last payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class EndPeriod15(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class StartPeriod14(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class JournalProfileConfiguration4(BaseModel):
    endPeriod: Optional[EndPeriod15] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfile: Optional[JournalProfile] = None
    startPeriod: Optional[StartPeriod14] = None


class StartPeriod15(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdJournalallocationsPostRequest(
    BaseModel
):
    allocationBasedOnActualHours: Optional[AllocationBasedOnActualHours4] = Field(
        None,
        description='Provide the allocation details within this object in case allocation based on actual hours (=normuren) is applicable. Functional effect; when PayrollPeriodData (=Variabele Gegevens) are created for this Employment, then the default values for the fields costCenter and costUnit wil be based on the settings within this resource.  So if you are an external party and want to provide costUnit and/or costCenter when sending PayrollPeriodData,  make sure you first acquire the default values by calling the `/ defaults` for the PayrollPeriodData resource (!).\n\nPlease note that this object MUST be null when `allocationBasedOnFixedWeights` is to be applied. Only one of the two may be provided.\n',
    )
    allocationBasedOnFixedWeights: Optional[List[AllocationBasedOnFixedWeight4]] = (
        Field(
            None,
            description='Provide the allocation details within this object when allocation based on weights (=factor) is applicable. Functional effect; if the costCenter and/or costUnit are provided within this object than the journal run calculations will use these fixed weights when performing calculations. Any costCenters and costUnits in the PayrollPeriodData records will be ignored for the calculations in that case.\n\nPlease note that this object MUST be null when `allocationBasedOnActualHours` is to be applied. Only one of the two may be provided. \n',
        )
    )
    endPeriod: Optional[EndPeriod14] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfileConfiguration: Optional[JournalProfileConfiguration4] = Field(
        None,
        description='Indicates to which journal profiel configuration the record relates',
    )
    startPeriod: Optional[StartPeriod15] = None


class Message534(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AllocationBasedOnActualHours5(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class AllocationBasedOnFixedWeight5(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The applicable cost center (=kostenplaats).\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The applicable cost center (=kostendrager).\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    weight: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='The weight (factor) determines the relative weight when allocating the costs for this specific combination of costCenter and costUnit.\n',
        examples=[1],
    )


class EndPeriod16(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the last payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class EndPeriod17(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class StartPeriod16(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2017-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2017-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class JournalProfileConfiguration5(BaseModel):
    endPeriod: Optional[EndPeriod17] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfile: Optional[JournalProfile] = None
    startPeriod: Optional[StartPeriod16] = None


class StartPeriod17(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the payroll period.\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the last payroll period for which the journal allocation is applicable.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the payroll period.\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the first payroll period for which the journal allocation is applicable.\n',
        examples=[2017],
    )


class Content118(BaseModel):
    allocationBasedOnActualHours: Optional[AllocationBasedOnActualHours5] = Field(
        None,
        description='Provide the allocation details within this object in case allocation based on actual hours (=normuren) is applicable. Functional effect; when PayrollPeriodData (=Variabele Gegevens) are created for this Employment, then the default values for the fields costCenter and costUnit wil be based on the settings within this resource.  So if you are an external party and want to provide costUnit and/or costCenter when sending PayrollPeriodData,  make sure you first acquire the default values by calling the `/ defaults` for the PayrollPeriodData resource (!).\n\nPlease note that this object MUST be null when `allocationBasedOnFixedWeights` is to be applied. Only one of the two may be provided.\n',
    )
    allocationBasedOnFixedWeights: Optional[List[AllocationBasedOnFixedWeight5]] = (
        Field(
            None,
            description='Provide the allocation details within this object when allocation based on weights (=factor) is applicable. Functional effect; if the costCenter and/or costUnit are provided within this object than the journal run calculations will use these fixed weights when performing calculations. Any costCenters and costUnits in the PayrollPeriodData records will be ignored for the calculations in that case.\n\nPlease note that this object MUST be null when `allocationBasedOnActualHours` is to be applied. Only one of the two may be provided. \n',
        )
    )
    endPeriod: Optional[EndPeriod16] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalProfileConfiguration: Optional[JournalProfileConfiguration5] = Field(
        None,
        description='Indicates to which journal profiel configuration the record relates',
    )
    startPeriod: Optional[StartPeriod17] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdJournalallocationsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message534]] = None
    content: Optional[Content118] = None


class Message535(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdJournalallocationsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message535]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdJournalallocationsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdJournalallocationsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message536(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class LeaveType9(BaseModel):
    balanceExceedsYear: Optional[bool] = Field(
        None,
        description='Indicates whether the balance at the end of the year for this leave type carries over to the next year.\n',
        examples=[True],
    )
    key: Optional[int] = Field(
        None, description='The key for the leave type.\n', examples=[1]
    )
    value: Optional[str] = Field(
        None,
        description='The description for the leave type. Note that leave types can be overridden at the employer level. In these cases the description at the employer level takes precedence over the default description of the leave type.\n',
        examples=['Verlof (bovenwettelijk)'],
    )


class LeavePolicy3(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveUnitType: Optional[LeaveUnitType] = Field(
        None, description='The type of leave units either days or hours'
    )
    value: Optional[str] = Field(
        None,
        description='The description of the leave regulation.\n',
        examples=['Default leave Regulations'],
    )


class Origin9(BaseModel):
    leavePolicy: Optional[LeavePolicy3] = Field(
        None,
        description='The leave policy for which the record was created. Will only have a value if `meansOfCreation` indicates a leave policy\n\n`leavePolicy` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    meansOfCreation: Optional[MeansOfCreation] = Field(
        None, description='The means of creation  of the record'
    )


class FieldEmbeddedItem51(BaseModel):
    comment: Optional[constr(max_length=4000)] = Field(None, examples=['some comment'])
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        None,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveType: Optional[LeaveType9] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.0, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    origin: Optional[Origin9] = None
    relatedLeave: Optional[RelatedLeave] = Field(
        None,
        description='Incase two leave records are linked to a single leave request the ID of the linked leave record is returned in this field. This is done because when deleting a leave record linked to a leave request the other leave record linked to that leave request is also deleted\n\nThe only functional scenario when this may occur is when a leave request is entered for leaveType 16 (Verlof). Depending on the leave balances, this might result in both a leave booking for Verlof (wettelijk) and Verlof (botenwettelijk).',
    )
    relatedLeaveRequest: Optional[RelatedLeaveRequest] = Field(
        None,
        description='Incase that the leave record is the result of the approval of a leave request this value will be set to the ID of that leave request.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message536]] = None
    field_embedded: Optional[List[FieldEmbeddedItem51]] = Field(None, alias='_embedded')


class Message537(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message537]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class LeavePolicy4(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveUnitType: Optional[LeaveUnitType] = Field(
        None, description='The type of leave units either days or hours'
    )
    value: Optional[str] = Field(
        None,
        description='The description of the leave regulation.\n',
        examples=['Default leave Regulations'],
    )


class Origin10(BaseModel):
    leavePolicy: Optional[LeavePolicy4] = Field(
        None,
        description='The leave policy for which the record was created. Will only have a value if `meansOfCreation` indicates a leave policy\n\n`leavePolicy` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    meansOfCreation: Optional[MeansOfCreation] = Field(
        None, description='The means of creation  of the record'
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavePostRequest(BaseModel):
    comment: Optional[constr(max_length=4000)] = Field(None, examples=['some comment'])
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        None,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveType: Optional[LeaveType9] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.0, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    origin: Optional[Origin10] = None
    relatedLeave: Optional[RelatedLeave] = Field(
        None,
        description='Incase two leave records are linked to a single leave request the ID of the linked leave record is returned in this field. This is done because when deleting a leave record linked to a leave request the other leave record linked to that leave request is also deleted\n\nThe only functional scenario when this may occur is when a leave request is entered for leaveType 16 (Verlof). Depending on the leave balances, this might result in both a leave booking for Verlof (wettelijk) and Verlof (botenwettelijk).',
    )
    relatedLeaveRequest: Optional[RelatedLeaveRequest] = Field(
        None,
        description='Incase that the leave record is the result of the approval of a leave request this value will be set to the ID of that leave request.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class Message538(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class LeavePolicy5(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveUnitType: Optional[LeaveUnitType] = Field(
        None, description='The type of leave units either days or hours'
    )
    value: Optional[str] = Field(
        None,
        description='The description of the leave regulation.\n',
        examples=['Default leave Regulations'],
    )


class Origin11(BaseModel):
    leavePolicy: Optional[LeavePolicy5] = Field(
        None,
        description='The leave policy for which the record was created. Will only have a value if `meansOfCreation` indicates a leave policy\n\n`leavePolicy` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    meansOfCreation: Optional[MeansOfCreation] = Field(
        None, description='The means of creation  of the record'
    )


class Content119(BaseModel):
    comment: Optional[constr(max_length=4000)] = Field(None, examples=['some comment'])
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        None,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveType: Optional[LeaveType9] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.0, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    origin: Optional[Origin11] = None
    relatedLeave: Optional[RelatedLeave] = Field(
        None,
        description='Incase two leave records are linked to a single leave request the ID of the linked leave record is returned in this field. This is done because when deleting a leave record linked to a leave request the other leave record linked to that leave request is also deleted\n\nThe only functional scenario when this may occur is when a leave request is entered for leaveType 16 (Verlof). Depending on the leave balances, this might result in both a leave booking for Verlof (wettelijk) and Verlof (botenwettelijk).',
    )
    relatedLeaveRequest: Optional[RelatedLeaveRequest] = Field(
        None,
        description='Incase that the leave record is the result of the approval of a leave request this value will be set to the ID of that leave request.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavePostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message538]] = None
    content: Optional[Content119] = None


class Message539(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavePostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message539]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavePostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavePostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class LeavePolicy6(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveUnitType: Optional[LeaveUnitType] = Field(
        None, description='The type of leave units either days or hours'
    )
    value: Optional[str] = Field(
        None,
        description='The description of the leave regulation.\n',
        examples=['Default leave Regulations'],
    )


class Origin12(BaseModel):
    leavePolicy: Optional[LeavePolicy6] = Field(
        None,
        description='The leave policy for which the record was created. Will only have a value if `meansOfCreation` indicates a leave policy\n\n`leavePolicy` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    meansOfCreation: Optional[MeansOfCreation] = Field(
        None, description='The means of creation  of the record'
    )


class FieldEmbeddedItem52(BaseModel):
    comment: Optional[constr(max_length=4000)] = Field(None, examples=['some comment'])
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        None,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveType: Optional[LeaveType9] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.0, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    origin: Optional[Origin12] = None
    relatedLeave: Optional[RelatedLeave] = Field(
        None,
        description='Incase two leave records are linked to a single leave request the ID of the linked leave record is returned in this field. This is done because when deleting a leave record linked to a leave request the other leave record linked to that leave request is also deleted\n\nThe only functional scenario when this may occur is when a leave request is entered for leaveType 16 (Verlof). Depending on the leave balances, this might result in both a leave booking for Verlof (wettelijk) and Verlof (botenwettelijk).',
    )
    relatedLeaveRequest: Optional[RelatedLeaveRequest] = Field(
        None,
        description='Incase that the leave record is the result of the approval of a leave request this value will be set to the ID of that leave request.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveDefaultsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message539]] = None
    field_embedded: Optional[List[FieldEmbeddedItem52]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveDefaultsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message539]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveDefaultsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveDefaultsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class FieldEmbeddedItem53(BaseModel):
    field: Optional[str] = Field(
        None,
        description='The field name of the metadata field\n',
        examples=['<name of the metadata field>'],
    )
    options: Optional[List[Option]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveMetadataGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message539]] = None
    field_embedded: Optional[List[FieldEmbeddedItem53]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveMetadataGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message539]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveMetadataGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveMetadataGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveOverviewYearGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message539]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveOverviewYearGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveOverviewYearGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message545(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content120(BaseModel):
    additionalInformation: Optional[str] = Field(
        None,
        description='Provides additional information on the calculation.',
        examples=['Additional information on the calculation.'],
    )
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    methodOfCalculation: Optional[str] = Field(
        None,
        description='Indicates which method was used to calculate the proposed leave hours.',
        examples=['Ploeguren'],
    )
    proposedLeaveHours: Optional[float] = Field(
        None, description='The proposed number of leave hours', examples=[8]
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveProposedleavehoursGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message545]] = None
    content: Optional[Content120] = None


class Message546(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveProposedleavehoursGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message546]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveProposedleavehoursGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaveProposedleavehoursGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message547(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem54(BaseModel):
    accrual: Optional[float] = Field(
        None,
        description='The amount of leave units accrued for the leave type in the year\n',
        examples=[30],
    )
    balance: Optional[float] = Field(
        None,
        description='The remaining leave balance for the year and leave type. The balance takes into account the leave usage in the future.\n',
        examples=[40],
    )
    balancePreviousYear: Optional[float] = Field(
        None,
        description='The remaining leave balance from the previous year for the leave type\n',
        examples=[20],
    )
    expires: Optional[float] = Field(
        None,
        description='<ul>\n  <li>This field is only relevant for the following leave types:</li>\n  <li><strong>Wettelijk verlof:</strong> Accrued statutory leave from previous years that expires on July 1 of the selected year.</li>\n  <li><strong>Bovenwettelijk verlof:</strong> Accrued extra-legal leave from 5 years ago and earlier, which expires on Jan 1 of the selected year + 1.</li>\n  <li><strong>Verlof:</strong> The sum of the two leave types above.</li>\n</ul>\n',
        examples=[15],
    )
    leaveType: Optional[LeaveType9] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `balance`, `usageAfterToday`, `usageThroughToday` , `usageTotal` , `accrual` and `balancePreviousYear` . Otherwise the field will be null.',
    )
    usageAfterToday: Optional[confloat(ge=0.0)] = Field(
        None,
        description='The amount of leave units used for the leave type in the year after today\n',
        examples=[2],
    )
    usageThroughToday: Optional[float] = Field(
        None,
        description='The amount of leave units used for the leave type starting from the beginning of the year up to and including today\n',
        examples=[8],
    )
    usageTotal: Optional[float] = Field(
        None,
        description='The total amount of leave units used for the leave type in the year.\n',
        examples=[10],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year to which the balance of the leave type applies.\n',
        examples=[2019],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavebalancesGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message547]] = None
    field_embedded: Optional[List[FieldEmbeddedItem54]] = Field(None, alias='_embedded')


class Message548(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavebalancesGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message548]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavebalancesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavebalancesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message549(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class LeaveUnitType7(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the unit type\n', examples=[1]
    )
    value: Optional[str] = Field(
        None, description='The description for the unit type\n', examples=['Uren']
    )


class FieldEmbeddedItem55(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveUnitType: Optional[LeaveUnitType7] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )
    value: Optional[str] = Field(
        None,
        description='The description of the leave regulation.\n',
        examples=['Default leave Regulation'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message549]] = None
    field_embedded: Optional[List[FieldEmbeddedItem55]] = Field(None, alias='_embedded')


class Message550(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message550]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Action5(Enum):
    link = 'link'
    unlink = 'unlink'


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesPatchRequestItem(
    BaseModel
):
    action: Action5 = Field(..., description='The action to perform.')
    id: UUID = Field(
        ...,
        description='The unique identifier (GUID/UUID) of the leave policy',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesPatchRequest(
    RootModel[
        List[
            ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesPatchRequestItem
        ]
    ]
):
    root: List[
        ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesPatchRequestItem
    ]


class Message551(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesPatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message551]] = None
    content: Optional[Dict[str, Any]] = None


class Message552(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesPatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message552]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeavepoliciesPatchResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message552]] = None
    version: Optional[Version] = None


class Message554(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class LeaveType14(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Verlof (bovenwettelijk)'])


class FieldEmbeddedItem56(BaseModel):
    commentEmployee: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the employee',
        examples=['Vakantie naar Spanje'],
    )
    commentHandler: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the person handling the leave request',
        examples=['Fijne vakantie!'],
    )
    currentlyAvailableUnits: Optional[float] = Field(
        None,
        description='The number of leave units (of the leaveType for this leave request) available to the employment.\nThis value can be negative.',
        examples=[140],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    handledBy: Optional[HandledBy] = None
    handledTime: Optional[datetime] = Field(
        None,
        description='The date and time the leave request was handled',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        False,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveRequestStatus: Optional[LeaveRequestStatus] = Field(
        None,
        description='The current status of the leave request\n\nThe leave request status is changed by using the PATCH endpoint (not the PUT).\n\nThe following transitions are possible\n* leaveRequestStatus = submitted -> accepted or rejected\n* leaveRequestStatus = accepted -> no changes possible\n* leaveRequestStatus = rejected -> submitted\n* leaveRequestStatus = revoked by user -> no changes possible\n* leaveRequestStatus = related leave deleted -> no changes possible',
    )
    leaveType: Optional[LeaveType14] = Field(
        None,
        description='The type of leave requested by the employee\n\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    submittedBy: Optional[SubmittedBy] = None
    submittedOn: Optional[datetime] = Field(
        None,
        description='The time the leave request was submitted',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaverequestsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message554]] = None
    field_embedded: Optional[List[FieldEmbeddedItem56]] = Field(None, alias='_embedded')


class Message555(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaverequestsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message555]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaverequestsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdLeaverequestsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message556(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem57(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdNotesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message556]] = None
    field_embedded: Optional[List[FieldEmbeddedItem57]] = Field(None, alias='_embedded')


class Message557(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdNotesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message557]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdNotesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdNotesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdNotesPostRequest(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class Message558(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content121(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdNotesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message558]] = None
    content: Optional[Content121] = None


class Message559(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdNotesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message559]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdNotesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdNotesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message560(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem58(BaseModel):
    department: Optional[Department3] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[constr(max_length=50)] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[constr(max_length=5)] = Field(
        None,
        description='The deviating function group description of the employment. Only applies when a deviating function description is defined.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    function: Optional[Function3] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    internalTelephoneExtensionNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the standard working location (standplaats) for the employment.',
        examples=['678'],
    )
    placeOfEmployment: Optional[constr(max_length=24)] = Field(
        None,
        description='The standard working location (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOrganizationalentitiesGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message560]] = None
    field_embedded: Optional[List[FieldEmbeddedItem58]] = Field(None, alias='_embedded')


class Message561(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOrganizationalentitiesGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message561]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOrganizationalentitiesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOrganizationalentitiesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOrganizationalentitiesPostRequest(
    BaseModel
):
    department: Optional[Department3] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[constr(max_length=50)] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[constr(max_length=5)] = Field(
        None,
        description='The deviating function group description of the employment. Only applies when a deviating function description is defined.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    function: Optional[Function3] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    internalTelephoneExtensionNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the standard working location (standplaats) for the employment.',
        examples=['678'],
    )
    placeOfEmployment: Optional[constr(max_length=24)] = Field(
        None,
        description='The standard working location (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class Message562(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content122(BaseModel):
    department: Optional[Department3] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[constr(max_length=50)] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[constr(max_length=5)] = Field(
        None,
        description='The deviating function group description of the employment. Only applies when a deviating function description is defined.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    function: Optional[Function3] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    internalTelephoneExtensionNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the standard working location (standplaats) for the employment.',
        examples=['678'],
    )
    placeOfEmployment: Optional[constr(max_length=24)] = Field(
        None,
        description='The standard working location (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOrganizationalentitiesPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message562]] = None
    content: Optional[Content122] = None


class Message563(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOrganizationalentitiesPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message563]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOrganizationalentitiesPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOrganizationalentitiesPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message564(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollProperties3(BaseModel):
    applyMinimumWageVocationalLearningPathway: Optional[bool] = Field(
        None,
        description='Minimum wage vocational learning pathway (Minimumloon BBL) <to do>',
    )
    applyYearlyHoursNorm: Optional[bool] = Field(
        None,
        description='applyYearlyHoursNorm (jaarurennorm) indicates if the contract is based on a set numbers of hours per year and a set wage is payed every payroll period.',
        examples=[False],
    )
    collectiveLaborAgreementCodeHiringEmployer: Optional[
        CollectiveLaborAgreementCodeHiringEmployer
    ] = Field(
        None,
        description='"CAO code inlener" The CAO code to be used in the payrolltax taxreturn for an employment that is "hired through agents" / " hired through an intermediary/third party".\nFor more information when to set this value please check "Gegevensspecificaties aangifte loonheffingen 2020 v2.0 11 juli 2019"',
    )
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup3] = Field(
        None,
        description='Deviating premium group (Afwijkende premiegroep sectorfonds), indicates what deviating premie sector funds applies to the employment.  Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )
    incidentalIncomeDeduction: Optional[IncidentalIncomeDeduction] = Field(
        None,
        description='Incidental income deduction (Incidentele inkomstenvermindering) <to do>\n\nIndien gebruik gemaakt wordt van onbetaald verlof en/of ziekte uren dan wordt automatisch de code incidentele inkomstenvermindering in de loonaangifte bepaald (rubriek in de loonaangifte welke aangeeft dat het loon door ziekte of onbetaald verlof tijdelijk lager is dan het overeengekomen loon). In overige gevallen kan loket.nl niet automatisch bepalen of er sprake is van een incidentele inkomstenvermindering.  In deze rubriek dient dan de juiste waarde ingevuld te worden',
    )
    occupationalDisabilityDeductionAfter2009: Optional[
        confloat(ge=0.01, le=9999.99)
    ] = Field(
        None,
        description='(OccupationalDisability) Deduction after 2009 (Arbeidsgeh.krt na 2009 (tm 2009 WAO)) <to do>\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
        examples=[1],
    )
    occupationalDisabilityDeductionTo2009: Optional[confloat(ge=0.01, le=9999.99)] = (
        Field(
            None,
            description='(OccupationalDisability) Deduction to 2009 (including 2009) (Arbeidsgeh.krt (tm 2009 AWF/UFO))\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
            examples=[1],
        )
    )
    occupationalDisabilityPremiumDiscount: Optional[
        OccupationalDisabilityPremiumDiscount
    ] = Field(
        None,
        description='Occupational disability premium discount (arbeidsgehandicaptenkorting) not to be used after 2017. It indicates if "arbeidsgehandicaptenkorting" is applicable to this employment.\n\nIndicatie die aangeeft of er arbeidsgehandicaptenkorting of korting in dienst nemen van ouderen werknemer van toepassing is. Loket.nl zal bij invulling automatisch de juiste kortingen berekenen. Vanaf 2013 zijn alleen nog de codes 5 en 6 van toepassing. Indien codes 1 t/m 4 zijn ingevuld in 2013 dan interpreteert loket.nl als code 5.',
    )
    phaseClassification: Optional[PhaseClassification] = Field(
        None,
        description='Phase classification (Fase indeling) <to do>\n\nIndicatie die aangeeft in welke fase de inkomstenverhouding voor bepaalde tijd zich bevindt in het kader van de Wet Flexibiliteit en Zekerheid.',
    )
    terminateIncomenumberFlexibleEmployment: Optional[
        TerminateIncomenumberFlexibleEmployment
    ] = Field(
        None,
        description='Terminate incomenumber flexible employment (Einde inkomstenverh.Flexwerker) <to do>',
    )
    wageCostBenefit: Optional[WageCostBenefit] = Field(
        None,
        description='Wage cost benefit (loonkostenvoordeel (LKV)). If applicable select the correct option to reduces the costs for an employer to employ the employee. \n\n__UWV:__ Het loonkostenvoordeel (LKV) is een onderdeel van de Wet tegemoetkomingen loondomein (Wtl). Het LKV is een tegemoetkoming voor werkgevers die 1 of meer oudere werknemers en/of werknemers met een arbeidsbeperking in dienst nemen of houden.',
    )
    wajongWithWageDispensation: Optional[bool] = Field(
        None,
        description='wajongWithDispensation  (Wajong met loondispensatie (was Doelgroep banenafspraak)) indicates that the employer has the express premission to lower the wage of this employment (even below minimum wage). This indicator will disable the validation on minimum wage for this employment.',
        examples=[False],
    )


class LeaveType15(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Politiek verlof'])


class LeaveAbp3(BaseModel):
    leaveType: Optional[LeaveType15] = Field(
        None, description='Leave type (Verlofsoort ABP) for ABP. <to do>'
    )
    valueOfParticipationDuringLeave: Optional[conint(ge=1, le=100)] = Field(
        None,
        description='valueOfParticipation (waardeDeelnemerschap) (pensioen opbouw voor ambtenaren ABP)',
        examples=[1],
    )


class PensionProperties3(BaseModel):
    annualCalculationBaseAbp: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='annualCalculationBase (jaargrondslag voor ABP) for ABP <to do>',
        examples=[1.5],
    )
    applyDispensationRiskFund: Optional[bool] = Field(
        None,
        description='applyDispensationRiskFund (Disp. risicofonds) <to do>',
        examples=[False],
    )
    compulsoryEducationDays: Optional[conint(ge=1, le=2)] = Field(
        None,
        description='compulsoryEducationDays (Aantal dagen leerplicht) <to do>',
        examples=[2],
    )
    deviatingDisabilityInsuranceActPercentageForCordares: Optional[
        DeviatingDisabilityInsuranceActPercentageForCordares
    ] = Field(
        None,
        description='deviatingDisabilityInsuranceActPercentageForCordares (WAO % Cordares) used for Cordares. <to do>',
    )
    leaveAbp: Optional[LeaveAbp3] = Field(
        None,
        description="If both `leaveType` and `valueOfParticipationDuringLeave` are empty this parent object will be set to null. The same holds true when puting or posting this object. set `leaveAbp` to null when both `leaveType` and `valueOfParticipationDuringLeave` don't have a value",
    )
    occupationalPensionFund: Optional[conint(ge=1, le=99)] = Field(
        None, description='Occupational Pension Fund (BPF-code) <to do>', examples=[2]
    )
    specificationOfIncomeRelationshipApg: Optional[
        SpecificationOfIncomeRelationshipApg
    ] = Field(
        None,
        description='specificationOfIncomeRelationship (APGVerbijzonderingInkomstenverhouding) used for the APG pension fund. <to do>',
    )


class FieldEmbeddedItem59(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    insuranceProperties: Optional[InsuranceProperties] = None
    payrollProperties: Optional[PayrollProperties3] = None
    pensionProperties: Optional[PensionProperties3] = None
    productivityPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='productivityPercentage (Productiviteitspercentage) can be used to indicate the productivity percentage of an employment.',
        examples=[100],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this record starts.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained with this record.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOtherPayrollVariablesGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message564]] = None
    field_embedded: Optional[List[FieldEmbeddedItem59]] = Field(None, alias='_embedded')


class Message565(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOtherPayrollVariablesGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message565]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOtherPayrollVariablesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOtherPayrollVariablesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollProperties4(BaseModel):
    applyMinimumWageVocationalLearningPathway: Optional[bool] = Field(
        None,
        description='Minimum wage vocational learning pathway (Minimumloon BBL) <to do>',
    )
    applyYearlyHoursNorm: Optional[bool] = Field(
        None,
        description='applyYearlyHoursNorm (jaarurennorm) indicates if the contract is based on a set numbers of hours per year and a set wage is payed every payroll period.',
        examples=[False],
    )
    collectiveLaborAgreementCodeHiringEmployer: Optional[
        CollectiveLaborAgreementCodeHiringEmployer
    ] = Field(
        None,
        description='"CAO code inlener" The CAO code to be used in the payrolltax taxreturn for an employment that is "hired through agents" / " hired through an intermediary/third party".\nFor more information when to set this value please check "Gegevensspecificaties aangifte loonheffingen 2020 v2.0 11 juli 2019"',
    )
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup3] = Field(
        None,
        description='Deviating premium group (Afwijkende premiegroep sectorfonds), indicates what deviating premie sector funds applies to the employment.  Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )
    incidentalIncomeDeduction: Optional[IncidentalIncomeDeduction] = Field(
        None,
        description='Incidental income deduction (Incidentele inkomstenvermindering) <to do>\n\nIndien gebruik gemaakt wordt van onbetaald verlof en/of ziekte uren dan wordt automatisch de code incidentele inkomstenvermindering in de loonaangifte bepaald (rubriek in de loonaangifte welke aangeeft dat het loon door ziekte of onbetaald verlof tijdelijk lager is dan het overeengekomen loon). In overige gevallen kan loket.nl niet automatisch bepalen of er sprake is van een incidentele inkomstenvermindering.  In deze rubriek dient dan de juiste waarde ingevuld te worden',
    )
    occupationalDisabilityDeductionAfter2009: Optional[
        confloat(ge=0.01, le=9999.99)
    ] = Field(
        None,
        description='(OccupationalDisability) Deduction after 2009 (Arbeidsgeh.krt na 2009 (tm 2009 WAO)) <to do>\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
        examples=[1],
    )
    occupationalDisabilityDeductionTo2009: Optional[confloat(ge=0.01, le=9999.99)] = (
        Field(
            None,
            description='(OccupationalDisability) Deduction to 2009 (including 2009) (Arbeidsgeh.krt (tm 2009 AWF/UFO))\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
            examples=[1],
        )
    )
    occupationalDisabilityPremiumDiscount: Optional[
        OccupationalDisabilityPremiumDiscount
    ] = Field(
        None,
        description='Occupational disability premium discount (arbeidsgehandicaptenkorting) not to be used after 2017. It indicates if "arbeidsgehandicaptenkorting" is applicable to this employment.\n\nIndicatie die aangeeft of er arbeidsgehandicaptenkorting of korting in dienst nemen van ouderen werknemer van toepassing is. Loket.nl zal bij invulling automatisch de juiste kortingen berekenen. Vanaf 2013 zijn alleen nog de codes 5 en 6 van toepassing. Indien codes 1 t/m 4 zijn ingevuld in 2013 dan interpreteert loket.nl als code 5.',
    )
    phaseClassification: Optional[PhaseClassification] = Field(
        None,
        description='Phase classification (Fase indeling) <to do>\n\nIndicatie die aangeeft in welke fase de inkomstenverhouding voor bepaalde tijd zich bevindt in het kader van de Wet Flexibiliteit en Zekerheid.',
    )
    terminateIncomenumberFlexibleEmployment: Optional[
        TerminateIncomenumberFlexibleEmployment
    ] = Field(
        None,
        description='Terminate incomenumber flexible employment (Einde inkomstenverh.Flexwerker) <to do>',
    )
    wageCostBenefit: Optional[WageCostBenefit] = Field(
        None,
        description='Wage cost benefit (loonkostenvoordeel (LKV)). If applicable select the correct option to reduces the costs for an employer to employ the employee. \n\n__UWV:__ Het loonkostenvoordeel (LKV) is een onderdeel van de Wet tegemoetkomingen loondomein (Wtl). Het LKV is een tegemoetkoming voor werkgevers die 1 of meer oudere werknemers en/of werknemers met een arbeidsbeperking in dienst nemen of houden.',
    )
    wajongWithWageDispensation: Optional[bool] = Field(
        None,
        description='wajongWithDispensation  (Wajong met loondispensatie (was Doelgroep banenafspraak)) indicates that the employer has the express premission to lower the wage of this employment (even below minimum wage). This indicator will disable the validation on minimum wage for this employment.',
        examples=[False],
    )


class LeaveAbp4(BaseModel):
    leaveType: Optional[LeaveType15] = Field(
        None, description='Leave type (Verlofsoort ABP) for ABP. <to do>'
    )
    valueOfParticipationDuringLeave: Optional[conint(ge=1, le=100)] = Field(
        None,
        description='valueOfParticipation (waardeDeelnemerschap) (pensioen opbouw voor ambtenaren ABP)',
        examples=[1],
    )


class PensionProperties4(BaseModel):
    annualCalculationBaseAbp: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='annualCalculationBase (jaargrondslag voor ABP) for ABP <to do>',
        examples=[1.5],
    )
    applyDispensationRiskFund: Optional[bool] = Field(
        None,
        description='applyDispensationRiskFund (Disp. risicofonds) <to do>',
        examples=[False],
    )
    compulsoryEducationDays: Optional[conint(ge=1, le=2)] = Field(
        None,
        description='compulsoryEducationDays (Aantal dagen leerplicht) <to do>',
        examples=[2],
    )
    deviatingDisabilityInsuranceActPercentageForCordares: Optional[
        DeviatingDisabilityInsuranceActPercentageForCordares
    ] = Field(
        None,
        description='deviatingDisabilityInsuranceActPercentageForCordares (WAO % Cordares) used for Cordares. <to do>',
    )
    leaveAbp: Optional[LeaveAbp4] = Field(
        None,
        description="If both `leaveType` and `valueOfParticipationDuringLeave` are empty this parent object will be set to null. The same holds true when puting or posting this object. set `leaveAbp` to null when both `leaveType` and `valueOfParticipationDuringLeave` don't have a value",
    )
    occupationalPensionFund: Optional[conint(ge=1, le=99)] = Field(
        None, description='Occupational Pension Fund (BPF-code) <to do>', examples=[2]
    )
    specificationOfIncomeRelationshipApg: Optional[
        SpecificationOfIncomeRelationshipApg
    ] = Field(
        None,
        description='specificationOfIncomeRelationship (APGVerbijzonderingInkomstenverhouding) used for the APG pension fund. <to do>',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOtherPayrollVariablesPostRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    insuranceProperties: Optional[InsuranceProperties] = None
    payrollProperties: Optional[PayrollProperties4] = None
    pensionProperties: Optional[PensionProperties4] = None
    productivityPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='productivityPercentage (Productiviteitspercentage) can be used to indicate the productivity percentage of an employment.',
        examples=[100],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this record starts.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained with this record.',
        examples=['2018-01-01'],
    )


class Message566(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollProperties5(BaseModel):
    applyMinimumWageVocationalLearningPathway: Optional[bool] = Field(
        None,
        description='Minimum wage vocational learning pathway (Minimumloon BBL) <to do>',
    )
    applyYearlyHoursNorm: Optional[bool] = Field(
        None,
        description='applyYearlyHoursNorm (jaarurennorm) indicates if the contract is based on a set numbers of hours per year and a set wage is payed every payroll period.',
        examples=[False],
    )
    collectiveLaborAgreementCodeHiringEmployer: Optional[
        CollectiveLaborAgreementCodeHiringEmployer
    ] = Field(
        None,
        description='"CAO code inlener" The CAO code to be used in the payrolltax taxreturn for an employment that is "hired through agents" / " hired through an intermediary/third party".\nFor more information when to set this value please check "Gegevensspecificaties aangifte loonheffingen 2020 v2.0 11 juli 2019"',
    )
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup3] = Field(
        None,
        description='Deviating premium group (Afwijkende premiegroep sectorfonds), indicates what deviating premie sector funds applies to the employment.  Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )
    incidentalIncomeDeduction: Optional[IncidentalIncomeDeduction] = Field(
        None,
        description='Incidental income deduction (Incidentele inkomstenvermindering) <to do>\n\nIndien gebruik gemaakt wordt van onbetaald verlof en/of ziekte uren dan wordt automatisch de code incidentele inkomstenvermindering in de loonaangifte bepaald (rubriek in de loonaangifte welke aangeeft dat het loon door ziekte of onbetaald verlof tijdelijk lager is dan het overeengekomen loon). In overige gevallen kan loket.nl niet automatisch bepalen of er sprake is van een incidentele inkomstenvermindering.  In deze rubriek dient dan de juiste waarde ingevuld te worden',
    )
    occupationalDisabilityDeductionAfter2009: Optional[
        confloat(ge=0.01, le=9999.99)
    ] = Field(
        None,
        description='(OccupationalDisability) Deduction after 2009 (Arbeidsgeh.krt na 2009 (tm 2009 WAO)) <to do>\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
        examples=[1],
    )
    occupationalDisabilityDeductionTo2009: Optional[confloat(ge=0.01, le=9999.99)] = (
        Field(
            None,
            description='(OccupationalDisability) Deduction to 2009 (including 2009) (Arbeidsgeh.krt (tm 2009 AWF/UFO))\nTot en met 2009 moest de premiekorting arbeidsgehandicapte werknemers gesplitst worden in een gedeelte voor de premie WAO/WIA en een gedeelte voor de premie WW-awf of UFO premie. Vanaf 2010 hoeft u het totaalbedrag niet meer te splitsen. Loket.nl zal de bedragen die opgegeven zijn bij Arbeidsgeh.krt na 2009 (tm 2009 WAO) en Arbeidsgeh. krt (tm 2009 AWF/UFO) bij elkaar optellen. U kunt vanaf 2010 dus volstaan met het vullen van Arbeidsgeh.krt na 2009 (tm 2009 WAO). Vanaf 2013 mag dit veld geen waarde meer bevatten, premiekorting arbeidsgehandicapte werknemer wordt automatisch bepaald op basis van opgegeven indicatie bij veld premiekorting',
            examples=[1],
        )
    )
    occupationalDisabilityPremiumDiscount: Optional[
        OccupationalDisabilityPremiumDiscount
    ] = Field(
        None,
        description='Occupational disability premium discount (arbeidsgehandicaptenkorting) not to be used after 2017. It indicates if "arbeidsgehandicaptenkorting" is applicable to this employment.\n\nIndicatie die aangeeft of er arbeidsgehandicaptenkorting of korting in dienst nemen van ouderen werknemer van toepassing is. Loket.nl zal bij invulling automatisch de juiste kortingen berekenen. Vanaf 2013 zijn alleen nog de codes 5 en 6 van toepassing. Indien codes 1 t/m 4 zijn ingevuld in 2013 dan interpreteert loket.nl als code 5.',
    )
    phaseClassification: Optional[PhaseClassification] = Field(
        None,
        description='Phase classification (Fase indeling) <to do>\n\nIndicatie die aangeeft in welke fase de inkomstenverhouding voor bepaalde tijd zich bevindt in het kader van de Wet Flexibiliteit en Zekerheid.',
    )
    terminateIncomenumberFlexibleEmployment: Optional[
        TerminateIncomenumberFlexibleEmployment
    ] = Field(
        None,
        description='Terminate incomenumber flexible employment (Einde inkomstenverh.Flexwerker) <to do>',
    )
    wageCostBenefit: Optional[WageCostBenefit] = Field(
        None,
        description='Wage cost benefit (loonkostenvoordeel (LKV)). If applicable select the correct option to reduces the costs for an employer to employ the employee. \n\n__UWV:__ Het loonkostenvoordeel (LKV) is een onderdeel van de Wet tegemoetkomingen loondomein (Wtl). Het LKV is een tegemoetkoming voor werkgevers die 1 of meer oudere werknemers en/of werknemers met een arbeidsbeperking in dienst nemen of houden.',
    )
    wajongWithWageDispensation: Optional[bool] = Field(
        None,
        description='wajongWithDispensation  (Wajong met loondispensatie (was Doelgroep banenafspraak)) indicates that the employer has the express premission to lower the wage of this employment (even below minimum wage). This indicator will disable the validation on minimum wage for this employment.',
        examples=[False],
    )


class LeaveAbp5(BaseModel):
    leaveType: Optional[LeaveType15] = Field(
        None, description='Leave type (Verlofsoort ABP) for ABP. <to do>'
    )
    valueOfParticipationDuringLeave: Optional[conint(ge=1, le=100)] = Field(
        None,
        description='valueOfParticipation (waardeDeelnemerschap) (pensioen opbouw voor ambtenaren ABP)',
        examples=[1],
    )


class PensionProperties5(BaseModel):
    annualCalculationBaseAbp: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='annualCalculationBase (jaargrondslag voor ABP) for ABP <to do>',
        examples=[1.5],
    )
    applyDispensationRiskFund: Optional[bool] = Field(
        None,
        description='applyDispensationRiskFund (Disp. risicofonds) <to do>',
        examples=[False],
    )
    compulsoryEducationDays: Optional[conint(ge=1, le=2)] = Field(
        None,
        description='compulsoryEducationDays (Aantal dagen leerplicht) <to do>',
        examples=[2],
    )
    deviatingDisabilityInsuranceActPercentageForCordares: Optional[
        DeviatingDisabilityInsuranceActPercentageForCordares
    ] = Field(
        None,
        description='deviatingDisabilityInsuranceActPercentageForCordares (WAO % Cordares) used for Cordares. <to do>',
    )
    leaveAbp: Optional[LeaveAbp5] = Field(
        None,
        description="If both `leaveType` and `valueOfParticipationDuringLeave` are empty this parent object will be set to null. The same holds true when puting or posting this object. set `leaveAbp` to null when both `leaveType` and `valueOfParticipationDuringLeave` don't have a value",
    )
    occupationalPensionFund: Optional[conint(ge=1, le=99)] = Field(
        None, description='Occupational Pension Fund (BPF-code) <to do>', examples=[2]
    )
    specificationOfIncomeRelationshipApg: Optional[
        SpecificationOfIncomeRelationshipApg
    ] = Field(
        None,
        description='specificationOfIncomeRelationship (APGVerbijzonderingInkomstenverhouding) used for the APG pension fund. <to do>',
    )


class Content123(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    insuranceProperties: Optional[InsuranceProperties] = None
    payrollProperties: Optional[PayrollProperties5] = None
    pensionProperties: Optional[PensionProperties5] = None
    productivityPercentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='productivityPercentage (Productiviteitspercentage) can be used to indicate the productivity percentage of an employment.',
        examples=[100],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this record starts.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained with this record.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOtherPayrollVariablesPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message566]] = None
    content: Optional[Content123] = None


class Message567(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOtherPayrollVariablesPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message567]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOtherPayrollVariablesPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdOtherPayrollVariablesPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message568(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country25(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Bank3(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary bank\n', examples=['Via Roma 3']
    )
    bankIdentifierCode: Optional[constr(min_length=1, max_length=11)] = Field(
        None, description='BIC /SWIFT code for the bank\n', examples=['AUDFDE21']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary bank\n', examples=['Rome']
    )
    country: Optional[Country25] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of benificiary bank\n', examples=['Ben Hur']
    )


class Country26(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\n\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Beneficiary12(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary\n', examples=['Via Roma 3']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    country: Optional[Country26] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of the beneficiary\n', examples=['Ben Hur']
    )


class PayrollComponent34(BaseModel):
    key: Optional[int] = Field(
        None, description='The number for the payroll component\n', examples=[260]
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['NETTOLOON'],
    )


class FieldEmbeddedItem60(BaseModel):
    bank: Optional[Bank3] = Field(
        None,
        description='Information regarding the bank coresponding with the bank account number',
    )
    bankAccountNumber: Optional[constr(min_length=1, max_length=34)] = Field(
        None, description='The bank account number\n', examples=['0403830171874018']
    )
    beneficiary: Optional[Beneficiary12] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent34] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\nEach payroll component can only be used once per employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationnonsepaGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message568]] = None
    field_embedded: Optional[List[FieldEmbeddedItem60]] = Field(None, alias='_embedded')


class Message569(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationnonsepaGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message569]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationnonsepaGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationnonsepaGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Country27(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Bank4(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary bank\n', examples=['Via Roma 3']
    )
    bankIdentifierCode: Optional[constr(min_length=1, max_length=11)] = Field(
        None, description='BIC /SWIFT code for the bank\n', examples=['AUDFDE21']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary bank\n', examples=['Rome']
    )
    country: Optional[Country27] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of benificiary bank\n', examples=['Ben Hur']
    )


class Country28(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\n\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Beneficiary13(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary\n', examples=['Via Roma 3']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    country: Optional[Country28] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of the beneficiary\n', examples=['Ben Hur']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationnonsepaPostRequest(
    BaseModel
):
    bank: Optional[Bank4] = Field(
        None,
        description='Information regarding the bank coresponding with the bank account number',
    )
    bankAccountNumber: Optional[constr(min_length=1, max_length=34)] = Field(
        None, description='The bank account number\n', examples=['0403830171874018']
    )
    beneficiary: Optional[Beneficiary13] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent34] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\nEach payroll component can only be used once per employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class Message570(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country29(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Bank5(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary bank\n', examples=['Via Roma 3']
    )
    bankIdentifierCode: Optional[constr(min_length=1, max_length=11)] = Field(
        None, description='BIC /SWIFT code for the bank\n', examples=['AUDFDE21']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary bank\n', examples=['Rome']
    )
    country: Optional[Country29] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of benificiary bank\n', examples=['Ben Hur']
    )


class Country30(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country.\n\nPosible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Beneficiary14(BaseModel):
    address: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Address of beneficiary\n', examples=['Via Roma 3']
    )
    city: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    country: Optional[Country30] = None
    name: Optional[constr(min_length=1, max_length=35)] = Field(
        None, description='Name of the beneficiary\n', examples=['Ben Hur']
    )


class Content124(BaseModel):
    bank: Optional[Bank5] = Field(
        None,
        description='Information regarding the bank coresponding with the bank account number',
    )
    bankAccountNumber: Optional[constr(min_length=1, max_length=34)] = Field(
        None, description='The bank account number\n', examples=['0403830171874018']
    )
    beneficiary: Optional[Beneficiary14] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent34] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\nEach payroll component can only be used once per employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationnonsepaPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message570]] = None
    content: Optional[Content124] = None


class Message571(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationnonsepaPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message571]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationnonsepaPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationnonsepaPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message572(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent37(BaseModel):
    key: Optional[int] = Field(None, examples=[260])
    value: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )


class FieldEmbeddedItem61(BaseModel):
    bic: Optional[constr(min_length=1, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary.\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary.\n', examples=['Ben Hur']
    )
    payrollComponent: Optional[PayrollComponent37] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message572]] = None
    field_embedded: Optional[List[FieldEmbeddedItem61]] = Field(None, alias='_embedded')


class Beneficiary15(BaseModel):
    city: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary.\n', examples=['Rome']
    )
    name: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary.\n', examples=['Ben Hur']
    )


class PayrollComponent38(BaseModel):
    description: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )
    key: Optional[int] = Field(None, examples=[260])


class FieldEmbeddedItem62(BaseModel):
    beneficiary: Optional[Beneficiary15] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    bic: Optional[constr(min_length=0, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=0, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent38] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message572]] = None
    field_embedded: Optional[List[FieldEmbeddedItem62]] = Field(None, alias='_embedded')


class Message574(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaGetResponse2(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message574]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaGetResponse4(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollComponent39(BaseModel):
    key: Optional[int] = Field(None, examples=[260])
    value: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaPostRequest(
    BaseModel
):
    bic: Optional[constr(min_length=1, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary.\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary.\n', examples=['Ben Hur']
    )
    payrollComponent: Optional[PayrollComponent39] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class PayrollComponent40(BaseModel):
    description: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )
    key: Optional[int] = Field(None, examples=[260])


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaPostRequest1(
    BaseModel
):
    beneficiary: Optional[Beneficiary15] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    bic: Optional[constr(min_length=0, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=0, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent40] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class Message575(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent41(BaseModel):
    key: Optional[int] = Field(None, examples=[260])
    value: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )


class Content125(BaseModel):
    bic: Optional[constr(min_length=1, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary.\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary.\n', examples=['Ben Hur']
    )
    payrollComponent: Optional[PayrollComponent41] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message575]] = None
    content: Optional[Content125] = None


class PayrollComponent42(BaseModel):
    description: Optional[constr(min_length=0, max_length=50)] = Field(
        None, examples=['NETTOLOON']
    )
    key: Optional[int] = Field(None, examples=[260])


class Content126(BaseModel):
    beneficiary: Optional[Beneficiary15] = Field(
        None,
        description='Information regarding the beneficiary coresponding with the bank account number',
    )
    bic: Optional[constr(min_length=0, max_length=11)] = Field(
        None,
        description='BIC /SWIFT code. Only applicable for a non-Dutch IBAN\n',
        examples=['AUDFDE21'],
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['xx'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['x'],
    )
    iban: Optional[constr(min_length=0, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent42] = Field(
        None,
        description='The payroll component for which the outgoing payment records applies.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    visibleOnPayslip: Optional[bool] = Field(
        None,
        description='Indicates whether the payment-component is visible on a payslip.\n',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message575]] = None
    content: Optional[Content126] = None


class Message577(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaPostResponse2(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message577]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaPostResponse4(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message578(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem63(BaseModel):
    amount: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The amount to be split from the net salary', examples=[32]
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary\n', examples=['Ben Hur']
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaseparatepaymentsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message578]] = None
    field_embedded: Optional[List[FieldEmbeddedItem63]] = Field(None, alias='_embedded')


class Message579(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaseparatepaymentsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message579]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaseparatepaymentsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaseparatepaymentsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaseparatepaymentsPostRequest(
    BaseModel
):
    amount: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The amount to be split from the net salary', examples=[32]
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary\n', examples=['Ben Hur']
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )


class Message580(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content127(BaseModel):
    amount: Optional[confloat(ge=0.01, le=99999999.99)] = Field(
        None, description='The amount to be split from the net salary', examples=[32]
    )
    cityBeneficiary: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='City name of beneficiary\n', examples=['Rome']
    )
    description1: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 1. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['Savings to different account'],
    )
    description2: Optional[constr(min_length=1, max_length=32)] = Field(
        None,
        description='Description 2. Both description field values will be a line in the (unstructured) description of the SEPA file.\n',
        examples=['from net wage'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    iban: Optional[constr(min_length=1, max_length=35)] = Field(
        None,
        description='International Bank Account Number (IBAN). Only IBAN without spaces are accepted.\n',
        examples=['NL52ABNA0424968264'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nameBeneficiary: Optional[constr(min_length=1, max_length=70)] = Field(
        None, description='Name of beneficiary\n', examples=['Ben Hur']
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for splitting from net salary at that date (based on the start- and enddate).\n',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaseparatepaymentsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message580]] = None
    content: Optional[Content127] = None


class Message581(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaseparatepaymentsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message581]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaseparatepaymentsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPaymentinformationsepaseparatepaymentsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message582(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollPeriodType3(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['month'])


class Class(Enum):
    Basisloon = 'Basisloon'
    Nettoloon = 'Nettoloon'
    Loonkosten = 'Loonkosten'


class Type11(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['hourly'])


class Wage(BaseModel):
    class_: Optional[Class] = Field(
        None, alias='class', description='The class of the wage', examples=['Basisloon']
    )
    currentWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross wage for the employee\n', examples=[2300]
    )
    type: Optional[Type11] = Field(
        None,
        description='Indicates whether the `value` is an hourly wage or a Periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )


class Shift9(BaseModel):
    fullTimeHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.\n',
        examples=[40],
    )


class WorkingHours(BaseModel):
    currentHoursPerWeek: Optional[float] = Field(
        None,
        description='The hours per week de employment currently works',
        examples=[41],
    )
    shift: Optional[Shift9] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class Content128(BaseModel):
    payrollPeriodType: Optional[PayrollPeriodType3] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4).',
    )
    startDateDeviations: Optional[date_aliased] = Field(
        None,
        description='The date to be used when calling the wageprojection endpoint',
        examples=['2022-08-01'],
    )
    wage: Optional[Wage] = None
    workingHours: Optional[WorkingHours] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollSimulatorDataGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message582]] = None
    content: Optional[Content128] = None


class Message583(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollSimulatorDataGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message583]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollSimulatorDataGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollSimulatorDataGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message584(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent44(BaseModel):
    canBeSupplemented: Optional[bool] = Field(
        None,
        description='Indicates whether the atribute for this payroll component can have the value `supplement`. Refer to the description of the attribute field for an explanation.\n',
        examples=[False],
    )
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[1],
    )


class PayrollComponent43(BaseModel):
    isSupplement: Optional[bool] = Field(
        None,
        description='This boolean determines what the salary calculation will do with the value of the payroll component if the payroll component has values in both the payroll period specific data (this endpoint) and in the non-payroll period specific configuration of the employment (it is possible to configure values for payroll components that span multiple payroll periods and even parts thereof).\n\n* When set to `false`, the value of the payroll component will overwrite the value specified in the non-payroll period specific data with the given value in the payroll period specific date.\n\n* When set to `true`, the value of the payroll period specific data will be added to the value of the non-payroll period specific data. Note that a value can be a negative number. For instance, a payroll period specific value of 20 and a non-payroll period specific value of -8 will effectively result in 12 for salary calculation.\n\nThis boolean can only be set to `true` in components for which `payrollComponent.canBesupplemented = true`.\n',
        examples=[False],
    )
    payrollComponent: Optional[PayrollComponent44] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period.  <br/>  Please note: Business rules may differ per component! Understanding these business rules and corresponding validations requires functional knowledge of Loket.\n',
    )
    value: Optional[float] = Field(
        None,
        description='Depending on the selected payroll component the possible value(s) for this field change (dynamic business rules).\n',
        examples=[144],
    )


class Shift10(BaseModel):
    bonusPercentage: Optional[float] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift.\n',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[float] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.\n',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None,
        description='The number for the shift. Loket.nl supports a maximum of 5 shifts per payroll administration.\n',
        examples=[1],
    )


class FieldEmbeddedItem64(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The cost center on which the payroll period data for this record will be booked for the ledger.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The cost unit on which the data for this record will be booked for the ledger\n',
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponents: Optional[List[PayrollComponent43]] = None
    payrollPeriod: Optional[PayrollPeriod] = None
    payslipText: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='A custom text to be displayed on the payslip.\n',
        examples=['Additional payslip for bonus'],
    )
    payslipType: Optional[PayslipType] = Field(
        None,
        description='The type of payslip (as defined by the Dutch tax authorities)\n',
    )
    shift: Optional[Shift10] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message584]] = None
    field_embedded: Optional[List[FieldEmbeddedItem64]] = Field(None, alias='_embedded')


class Message585(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message585]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollComponent46(BaseModel):
    canBeSupplemented: Optional[bool] = Field(
        None,
        description='Indicates whether the atribute for this payroll component can have the value `supplement`. Refer to the description of the attribute field for an explanation.\n',
        examples=[False],
    )
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[1],
    )


class PayrollComponent45(BaseModel):
    isSupplement: Optional[bool] = Field(
        None,
        description='This boolean determines what the salary calculation will do with the value of the payroll component if the payroll component has values in both the payroll period specific data (this endpoint) and in the non-payroll period specific configuration of the employment (it is possible to configure values for payroll components that span multiple payroll periods and even parts thereof).\n\n* When set to `false`, the value of the payroll component will overwrite the value specified in the non-payroll period specific data with the given value in the payroll period specific date.\n\n* When set to `true`, the value of the payroll period specific data will be added to the value of the non-payroll period specific data. Note that a value can be a negative number. For instance, a payroll period specific value of 20 and a non-payroll period specific value of -8 will effectively result in 12 for salary calculation.\n\nThis boolean can only be set to `true` in components for which `payrollComponent.canBesupplemented = true`.\n',
        examples=[False],
    )
    payrollComponent: Optional[PayrollComponent46] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period.  <br/>  Please note: Business rules may differ per component! Understanding these business rules and corresponding validations requires functional knowledge of Loket.\n',
    )
    value: Optional[float] = Field(
        None,
        description='Depending on the selected payroll component the possible value(s) for this field change (dynamic business rules).                                                   \n\nPlease note: a `null` value will be seen as empty, any period-specific record for the corresponding component will be deleted for the payroll period it applies to. This is something different than setting it to the value of 0 (!).\n\n\n Please also note the following (!!!) if you do not have a value for the component in this period please do not include this payrollComponent at all in your request. If you do so, this might result in unexpected results.\n',
        examples=[144],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataPatchRequest(
    BaseModel
):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The cost center on which the payroll period data for this record will be booked for the ledger.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The cost unit on which the data for this record will be booked for the ledger\n',
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit (verdelingseenheid), used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponents: Optional[List[PayrollComponent45]] = None
    payrollPeriod: Optional[PayrollPeriod] = None
    payslipText: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='A custom text to be displayed on the payslip.\n',
        examples=['Additional payslip for bonus'],
    )
    payslipType: Optional[PayslipType] = Field(
        None,
        description='The type of payslip (as defined by the Dutch tax authorities)\n',
    )
    shift: Optional[Shift10] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataPatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message585]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataPatchResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollComponent48(BaseModel):
    canBeSupplemented: Optional[bool] = Field(
        None,
        description='Indicates whether the atribute for this payroll component can have the value `supplement`. Refer to the description of the attribute field for an explanation.\n',
        examples=[False],
    )
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[1],
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )


class PayrollComponent47(BaseModel):
    isSupplement: Optional[bool] = Field(
        None,
        description='This boolean determines what the salary calculation will do with the value of the payroll component if the payroll component has values in both the payroll period specific data (this endpoint) and in the non-payroll period specific configuration of the employment (it is possible to configure values for payroll components that span multiple payroll periods and even parts thereof).\n\n* When set to `false`, the value of the payroll component will overwrite the value specified in the non-payroll period specific data with the given value in the payroll period specific date.\n\n* When set to `true`, the value of the payroll period specific data will be added to the value of the non-payroll period specific data. Note that a value can be a negative number. For instance, a payroll period specific value of 20 and a non-payroll period specific value of -8 will effectively result in 12 for salary calculation.\n\nThis boolean can only be set to `true` in components for which `payrollComponent.canBesupplemented = true`.\n',
        examples=[False],
    )
    payrollComponent: Optional[PayrollComponent48] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period.  <br/>  Please note; Business rules may differ per component! Understanding these business rules and corresponding validations requires functional knowledge of Loket.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    value: Optional[float] = Field(
        None,
        description='Depending on the selected payroll component the possible value(s) for this field change (dynamic business rules).\n',
        examples=[144],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataPostRequest(
    BaseModel
):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The cost center on which the payroll period data for this record will be booked for the ledger.\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The cost unit on which the data for this record will be booked for the ledger\n\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponents: Optional[List[PayrollComponent47]] = None
    payrollPeriod: Optional[PayrollPeriod] = None
    payslipText: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='A custom text to be displayed on the payslip.\n',
        examples=['Additional payslip for bonus'],
    )
    payslipType: Optional[PayslipType] = Field(
        None,
        description='The type of payslip (as defined by the Dutch tax authorities)\n',
    )
    shift: Optional[Shift10] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class Message587(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent50(BaseModel):
    canBeSupplemented: Optional[bool] = Field(
        None,
        description='Indicates whether the atribute for this payroll component can have the value `supplement`. Refer to the description of the attribute field for an explanation.\n',
        examples=[False],
    )
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[1],
    )


class PayrollComponent49(BaseModel):
    isSupplement: Optional[bool] = Field(
        None,
        description='This boolean determines what the salary calculation will do with the value of the payroll component if the payroll component has values in both the payroll period specific data (this endpoint) and in the non-payroll period specific configuration of the employment (it is possible to configure values for payroll components that span multiple payroll periods and even parts thereof).\n\n* When set to `false`, the value of the payroll component will overwrite the value specified in the non-payroll period specific data with the given value in the payroll period specific date.\n\n* When set to `true`, the value of the payroll period specific data will be added to the value of the non-payroll period specific data. Note that a value can be a negative number. For instance, a payroll period specific value of 20 and a non-payroll period specific value of -8 will effectively result in 12 for salary calculation.\n\nThis boolean can only be set to `true` in components for which `payrollComponent.canBesupplemented = true`.\n',
        examples=[False],
    )
    payrollComponent: Optional[PayrollComponent50] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period.  <br/>  Please note: Business rules may differ per component! Understanding these business rules and corresponding validations requires functional knowledge of Loket.\n',
    )
    value: Optional[float] = Field(
        None,
        description='Depending on the selected payroll component the possible value(s) for this field change (dynamic business rules).\n',
        examples=[144],
    )


class Content129(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The cost center on which the payroll period data for this record will be booked for the ledger.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The cost unit on which the data for this record will be booked for the ledger\n',
    )
    distributionUnit: Optional[DistributionUnit3] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponents: Optional[List[PayrollComponent49]] = None
    payrollPeriod: Optional[PayrollPeriod] = None
    payslipText: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='A custom text to be displayed on the payslip.\n',
        examples=['Additional payslip for bonus'],
    )
    payslipType: Optional[PayslipType] = Field(
        None,
        description='The type of payslip (as defined by the Dutch tax authorities)\n',
    )
    shift: Optional[Shift10] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message587]] = None
    content: Optional[Content129] = None


class Message588(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message588]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperioddataPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message589(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollPeriod8(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period the record relates to',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll periode is part of a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the payroll period the record relates to',
        examples=[2017],
    )


class Column(BaseModel):
    key: Optional[int] = Field(None, examples=[6])
    value: Optional[str] = Field(None, examples=['Sociaalplichtig loon'])


class CostsEmployer(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['+'])


class PayrollComponent51(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.    \n',
    )
    column: Optional[Column] = Field(
        None,
        description='The wage sheet column (kolom) of the payroll component. Kolommen are related to its specific lines on the payslip and/or wage sheet.  Also this does bear some similiarties to wage sheets columns (loonstaatkolommen) used by the Belastingdienst, however the division of columns as used by Loket is not identical to that.\n',
    )
    costsEmployer: Optional[CostsEmployer] = Field(
        None,
        description='Indicates whether the components are costs for the employer (+) or negative costs (-, i.e. benefit) for the employer. The value could also be NULL meaning that the component is not related to actual expenses.\n',
    )
    countAsNormHours: Optional[bool] = Field(
        None,
        description='Indicates whether its value is counted as norm hours (bij bepalen normuren)\n',
        examples=[True],
    )
    hoursIndication: Optional[bool] = Field(
        None, description='Only applicable for component in category 6 (eenheden)\n'
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[1],
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )


class PayrollComponentResult(BaseModel):
    payrollComponent: Optional[PayrollComponent51] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    value: Optional[float] = Field(
        None,
        description="Value/ amount (normaal tarief voor belasting, tabelloon) for the payrollcomponent. Only a 'normal' type payslip may have value for this.",
        examples=[40],
    )
    valueSpecialTariff: Optional[float] = Field(
        None,
        description="Value/ amount (speciaal tarief voor belasting) for the payrollcomponent. Both a 'normal' and 'special tariff' type payslip may a value for this. Also, both valueNormal and valueSpecialTariff may have a value at the same time.",
        examples=[144],
    )


class PayslipType8(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Normaal strook'])


class PayslipType7(BaseModel):
    payrollComponentResults: Optional[List[PayrollComponentResult]] = None
    payslipType: Optional[PayslipType8] = Field(
        None,
        description='The type of payslip on which underlying payroll run results will be booked. This is either normaal or bijzonder tarief.\n',
    )


class PayrollPeriod7(BaseModel):
    payrollPeriod: Optional[PayrollPeriod8] = None
    payslipTypes: Optional[List[PayslipType7]] = Field(None, ge=0)


class Content130(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[List[PayrollPeriod7]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperiodresultsYearYearGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message589]] = None
    content: Optional[Content130] = None


class Message590(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperiodresultsYearYearGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message590]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperiodresultsYearYearGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayrollperiodresultsYearYearGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message591(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollPeriod9(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period the record relates to',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll periode is part of a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the payroll period the record relates to',
        examples=[2017],
    )


class FieldEmbeddedItem65(BaseModel):
    approvalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payslip was approved.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    numberOfPayslips: Optional[conint(ge=1, le=3)] = Field(
        None,
        description='The number of different types of payslips for the given payroll period.',
        examples=[1],
    )
    payrollPeriod: Optional[PayrollPeriod9] = None
    payrollrunId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message591]] = None
    field_embedded: Optional[List[FieldEmbeddedItem65]] = Field(None, alias='_embedded')


class Message592(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message592]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsSummaryPayrollPeriodIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message592]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsSummaryPayrollPeriodIdGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsSummaryPayrollPeriodIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message594(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent52(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.    \n',
    )
    column: Optional[Column] = Field(
        None,
        description='The wage sheet column (kolom) of the payroll component. Kolommen are related to its specific lines on the payslip and/or wage sheet.  Also this does bear some similiarties to wage sheets columns (loonstaatkolommen) used by the Belastingdienst, however the division of columns as used by Loket is not identical to that.\n',
    )
    costsEmployer: Optional[CostsEmployer] = Field(
        None,
        description='Indicates whether the components are costs for the employer (+) or negative costs (-, i.e. benefit) for the employer. The value could also be NULL meaning that the component is not related to actual expenses.\n',
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[1],
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )


class PayrollComponentResult1(BaseModel):
    payrollComponent: Optional[PayrollComponent52] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    value: Optional[float] = Field(
        None,
        description="Value/ amount (normaal tarief voor belasting, tabelloon) for the payrollcomponent. Only a 'normal' type payslip may have value for this.",
        examples=[40],
    )
    valueSpecialTariff: Optional[float] = Field(
        None,
        description="Value/ amount (speciaal tarief voor belasting) for the payrollcomponent. Both a 'normal' and 'special tariff' type payslip may a value for this. Also, both valueNormal and valueSpecialTariff may have a value at the same time.",
        examples=[144],
    )


class PayslipType10(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Normaal strook'])


class PayslipType9(BaseModel):
    payrollComponentResults: Optional[List[PayrollComponentResult1]] = None
    payslipType: Optional[PayslipType10] = Field(
        None,
        description='The type of payslip on which underlying payroll run results will be booked. This is either normaal or bijzonder tarief.\n',
    )


class PayrollPeriod10(BaseModel):
    payrollPeriod: Optional[PayrollPeriod9] = None
    payslipTypes: Optional[List[PayslipType9]] = None


class Content131(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[List[PayrollPeriod10]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsPayrollrunIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message594]] = None
    content: Optional[Content131] = None


class Message595(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsPayrollrunIdGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message595]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsPayrollrunIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsPayrollrunIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsYearGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message595]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsYearGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPayslipsYearGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message597(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem66(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payout: Optional[confloat(ge=0.0, le=100000.0)] = Field(
        None, description='The ammount of (gross) pension received', examples=[2569]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this pension benefit starts\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPensionbenefitsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message597]] = None
    field_embedded: Optional[List[FieldEmbeddedItem66]] = Field(None, alias='_embedded')


class Message598(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPensionbenefitsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message598]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPensionbenefitsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPensionbenefitsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPensionbenefitsPostRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payout: Optional[confloat(ge=0.0, le=100000.0)] = Field(
        None, description='The ammount of (gross) pension received', examples=[2569]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this pension benefit starts\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class Message599(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content132(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payout: Optional[confloat(ge=0.0, le=100000.0)] = Field(
        None, description='The ammount of (gross) pension received', examples=[2569]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this pension benefit starts\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPensionbenefitsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message599]] = None
    content: Optional[Content132] = None


class Message600(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPensionbenefitsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message600]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPensionbenefitsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdPensionbenefitsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message601(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem67(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for protected earning (based on the start- and enddate, not based on the payroll period of the payroll run).\n',
        examples=['2018-01-01'],
    )
    threshold: Optional[Any] = Field(
        None,
        description='The total amount of net wage that is protected.',
        examples=[50],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdProtectedearningsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message601]] = None
    field_embedded: Optional[List[FieldEmbeddedItem67]] = Field(None, alias='_embedded')


class Message602(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdProtectedearningsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message602]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdProtectedearningsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdProtectedearningsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdProtectedearningsPostRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for protected earning (based on the start- and enddate, not based on the payroll period of the payroll run).\n',
        examples=['2018-01-01'],
    )
    threshold: Optional[Any] = Field(
        None,
        description='The total amount of net wage that is protected.',
        examples=[50],
    )


class Message603(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content133(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date of the record\n', examples=['2018-10-23']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of this record\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.\n\n__NOTE :__ at the moment of performing a payroll run it will be checked what record is applicable for protected earning (based on the start- and enddate, not based on the payroll period of the payroll run).\n',
        examples=['2018-01-01'],
    )
    threshold: Optional[Any] = Field(
        None,
        description='The total amount of net wage that is protected.',
        examples=[50],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdProtectedearningsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message603]] = None
    content: Optional[Content133] = None


class Message604(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdProtectedearningsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message604]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdProtectedearningsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdProtectedearningsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdReinstatePatchRequest(
    BaseModel
):
    pass


class Message605(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdReinstatePatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message605]] = None
    content: Optional[Dict[str, Any]] = None


class Message606(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdReinstatePatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message606]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdReinstatePatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdReinstatePatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdReinstatePatchResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message606]] = None
    version: Optional[Version] = None


class Message608(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Type12(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Suppleren (bruto)'])


class Supplementation3(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='If supplementation is applied then the supplementation percentage (up to) is registered here.\n',
        examples=[35],
    )
    type: Optional[Type12] = Field(
        None,
        description='Indicates whether and how supplementation should be applied. This is used when the employer supplements the pay out percentage.\n',
    )


class Type13(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['ZW eigen risico'])


class Benefit3(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Pay out percentage of the benefit (deviating from the administration). This value determines the percentage to be applied, the only exception is when type of benefit is set to AOW where the percentage cannot be in altered (=0).\n',
        examples=[35],
    )
    type: Optional[Type13] = Field(
        None,
        description='The type of social security benefit that is applicable. Per type of benefit a so-called closed-chain input validation is used. This field cannot be changed after the initial post.\n',
    )


class FieldEmbeddedItem68(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    supplementation: Optional[Supplementation3] = None
    benefit: Optional[Benefit3] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecuritybenefitsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message608]] = None
    field_embedded: Optional[List[FieldEmbeddedItem68]] = Field(None, alias='_embedded')


class Message609(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecuritybenefitsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message609]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecuritybenefitsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecuritybenefitsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Type14(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Suppleren (bruto)'])


class Supplementation4(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='If supplementation is applied then the supplementation percentage (up to) is registered here.\n',
        examples=[35],
    )
    type: Optional[Type14] = Field(
        None,
        description='Indicates whether and how supplementation should be applied. This is used when the employer supplements the pay out percentage.\n',
    )


class Type15(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['ZW eigen risico'])


class Benefit4(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Pay out percentage of the benefit (deviating from the administration). This value determines the percentage to be applied, the only exception is when type of benefit is set to AOW where the percentage cannot be in altered (=0).\n',
        examples=[35],
    )
    type: Optional[Type15] = Field(
        None,
        description='The type of social security benefit that is applicable. Per type of benefit a so-called closed-chain input validation is used. This field cannot be changed after the initial post.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecuritybenefitsPostRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    supplementation: Optional[Supplementation4] = None
    benefit: Optional[Benefit4] = None


class Message610(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Type16(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Suppleren (bruto)'])


class Supplementation5(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='If supplementation is applied then the supplementation percentage (up to) is registered here.\n',
        examples=[35],
    )
    type: Optional[Type16] = Field(
        None,
        description='Indicates whether and how supplementation should be applied. This is used when the employer supplements the pay out percentage.\n',
    )


class Type17(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['ZW eigen risico'])


class Benefit5(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=100.0)] = Field(
        None,
        description='Pay out percentage of the benefit (deviating from the administration). This value determines the percentage to be applied, the only exception is when type of benefit is set to AOW where the percentage cannot be in altered (=0).\n',
        examples=[35],
    )
    type: Optional[Type17] = Field(
        None,
        description='The type of social security benefit that is applicable. Per type of benefit a so-called closed-chain input validation is used. This field cannot be changed after the initial post.\n',
    )


class Content134(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )
    supplementation: Optional[Supplementation5] = None
    benefit: Optional[Benefit5] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecuritybenefitsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message610]] = None
    content: Optional[Content134] = None


class Message611(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecuritybenefitsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message611]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecuritybenefitsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecuritybenefitsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message612(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem69(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[True],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[True],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[True],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecurityconfigurationsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message612]] = None
    field_embedded: Optional[List[FieldEmbeddedItem69]] = Field(None, alias='_embedded')


class Message613(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecurityconfigurationsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message613]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecurityconfigurationsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecurityconfigurationsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecurityconfigurationsPostRequest(
    BaseModel
):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[True],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[True],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[True],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class Message614(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content135(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[True],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[True],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[True],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity. Valide values are either the startDate of the employment or the firstday of a payrolling year.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecurityconfigurationsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message614]] = None
    content: Optional[Content135] = None


class Message615(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecurityconfigurationsPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message615]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecurityconfigurationsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdSocialsecurityconfigurationsPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class EndOfEmploymentReason3(BaseModel):
    key: Optional[int] = Field(None, examples=[1])


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTerminatePatchRequest(
    BaseModel
):
    createMdvEntry: Optional[bool] = Field(
        None,
        description='Indicates whether an MDV-entry should automatically be generated (not sent) by Loket (Melding Dienstverband). This should typically only be used for Colland-related employments and if the module MDV is active for an employer, which means in most cases this indicator should be set to `false`.\n\nNext to that, a message is ONLY generated when the employment is actually terminated by performing this action (=the employment did not already have an endDate before calling this endpoint).\n',
        examples=[False],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends (=last day of the employment).\n',
        examples=['2018-10-23'],
    )
    endOfEmploymentDueToIllness: Optional[bool] = Field(
        None,
        description='Indicates whether the reason for the termination of an employment is due to long-term illness. Mandatory if endDate is filled, else leave empty.\n',
        examples=[False],
    )
    endOfEmploymentReason: Optional[EndOfEmploymentReason3] = Field(
        None,
        description='The reason for the end of the employment. Mandatory if endDate is filled, else leave empty.\n',
    )


class EndOfEmploymentReason4(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the reason for the end of the employment.',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the reason for the end of the employment.',
        examples=['VUT'],
    )


class EndOfEmploymentReasonTaxAuthorities3(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the reason for the end of the employment.',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the reason for the end of the employment.',
        examples=['Opzegging door de werkgever binnen de proeftijd.'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTerminatePatchRequest1(
    BaseModel
):
    createMdvEntry: Optional[bool] = Field(
        None,
        description='Indicates whether an MDV-entry should automatically be generated (not sent) by Loket (Melding Dienstverband). This should typically only be used for Colland-related employments and if the module MDV is active for an employer, which means in most cases this indicator should be set to `false`.\n\nNext to that, a message is ONLY generated when the employment is actually terminated by performing this action (=the employment did not already have an endDate before calling this endpoint).\n',
        examples=[False],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends (=last day of the employment).\n',
        examples=['2018-10-23'],
    )
    endOfEmploymentDueToIllness: Optional[bool] = Field(
        None,
        description='Indicates whether the reason for the termination of an employment is due to long-term illness. Mandatory if endDate is filled, else leave empty.\n',
        examples=[False],
    )
    endOfEmploymentReason: Optional[EndOfEmploymentReason4] = Field(
        None,
        description="The reason for the end of the employment.\n\n__Note:__ as of 2020-01-01 `endOfEmploymentReasonTaxAuthorities` replaces this field as the main reason for the end of the employment. We say 'main reason' as in certain cases this field still has a purpose. \n\nPlease set this field to 8 (Other) unless one of the following integrations is used for this employment\n  * UPA-pensioenaangifte\n  * Cordares\n  * APG-pensioenaangifte\n  * Achmea",
    )
    endOfEmploymentReasonTaxAuthorities: Optional[
        EndOfEmploymentReasonTaxAuthorities3
    ] = Field(
        None,
        description='The reason for the end of the employment as specified by the Dutch Tax authorties.\n\n__Note:__ This field replaces `endOfEmploymentReason` as of 2020-01-01. `endOfEmploymentReason` will remain as a field in the resource as several integration require this field still.\n',
    )


class Message616(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTerminatePatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message616]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTerminatePatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message616]] = None
    content: Optional[Dict[str, Any]] = None


class Message618(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTerminatePatchResponse2(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message618]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTerminatePatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTerminatePatchResponse4(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTerminatePatchResponse5(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message618]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationPostRequest(
    BaseModel
):
    pass


class Message620(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message620]] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message621(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message621]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationCalculatePostRequest(
    BaseModel
):
    baseCalculationsBonusPercentage: Optional[confloat(ge=0.0, le=99.99)] = Field(
        None,
        description='The bonus percentage used in wage calculations based on an accumulation of given base calculations (grondslagen)\n',
        examples=[12],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends.',
        examples=['2018-10-23'],
    )
    grossMonthlySupplement: Optional[confloat(ge=0.0, le=999999.99)] = Field(
        None,
        description='An additional monthly amount, if applicable.\n',
        examples=[212],
    )
    grossMonthlyWage: Optional[confloat(ge=0.0, le=999999.99)] = Field(
        None,
        description='Gross wage/ basic wage for the employment per month.\n',
        examples=[2300],
    )
    shiftBonusPercentage: Optional[confloat(ge=0.0, le=99.99)] = Field(
        None,
        description='The bonus percentage used in wage calculations based on given shift.\n',
        examples=[12],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2018-01-01'],
    )


class Message622(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content136(BaseModel):
    employmentDurationInDecimalYears: Optional[confloat(ge=0.0, le=999999.99)] = Field(
        None,
        description='Calculated employment duration in years, as a decimal number.\n',
        examples=[3.5],
    )
    monthlyWage: Optional[confloat(ge=0.0, le=999999.99)] = Field(
        None,
        description='Calculated wage for the employment per month.\n',
        examples=[2300],
    )
    transitionCompensationAmount: Optional[confloat(ge=0.0, le=999999.99)] = Field(
        None,
        description='Calculated total amount for the transition compensation.\n',
        examples=[8050],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationCalculatePostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message622]] = None
    content: Optional[Content136] = None


class Message623(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationCalculatePostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message623]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationCalculatePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationCalculatePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message624(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content137(BaseModel):
    baseCalculationsBonusPercentage: Optional[confloat(ge=0.0, le=99.99)] = Field(
        None,
        description='The bonus percentage used in wage calculations based on an accumulation of given base calculations (grondslagen)\n',
        examples=[12],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends.',
        examples=['2018-10-23'],
    )
    grossMonthlySupplement: Optional[confloat(ge=0.0, le=999999.99)] = Field(
        None,
        description='An additional monthly amount, if applicable.\n',
        examples=[212],
    )
    grossMonthlyWage: Optional[confloat(ge=0.0, le=999999.99)] = Field(
        None,
        description='Gross wage/ basic wage for the employment per month.\n',
        examples=[2300],
    )
    shiftBonusPercentage: Optional[confloat(ge=0.0, le=99.99)] = Field(
        None,
        description='The bonus percentage used in wage calculations based on given shift.\n',
        examples=[12],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationCalculateDefaultsGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message624]] = None
    content: Optional[Content137] = None


class Message625(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationCalculateDefaultsGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message625]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationCalculateDefaultsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdTransitioncompensationCalculateDefaultsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message626(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem70(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this wachtgeld record starts.\n\nA (linked chain)[./#section/Data/Date-chains] per wachtgeld is maintained within this resource. So only one wachtgeld record can be active at the same time. ',
        examples=['2021-06-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None, description='The value for the wachtgeld.\n', examples=[50.87]
    )
    valueAdditionalIncomeCivilService: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value of additional income civil service (Neveninkomsten ambtelijk).\n',
        examples=[50.87],
    )
    valueAdditionalIncomeNonCivilService: Optional[confloat(ge=0.01, le=99999.99)] = (
        Field(
            None,
            description='The value of additional income non civil service (Neveninkomsten niet ambtelijk).\n',
            examples=[50.87],
        )
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWachtgeldGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message626]] = None
    field_embedded: Optional[List[FieldEmbeddedItem70]] = Field(None, alias='_embedded')


class Message627(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWachtgeldGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message627]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWachtgeldGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWachtgeldGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWachtgeldPostRequest(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this wachtgeld record starts.\n\nA (linked chain)[./#section/Data/Date-chains] per wachtgeld is maintained within this resource. So only one wachtgeld record can be active at the same time. ',
        examples=['2021-06-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None, description='The value for the wachtgeld.\n', examples=[50.87]
    )
    valueAdditionalIncomeCivilService: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value of additional income civil service (Neveninkomsten ambtelijk).\n',
        examples=[50.87],
    )
    valueAdditionalIncomeNonCivilService: Optional[confloat(ge=0.01, le=99999.99)] = (
        Field(
            None,
            description='The value of additional income non civil service (Neveninkomsten niet ambtelijk).\n',
            examples=[50.87],
        )
    )


class Message628(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content138(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this wachtgeld record starts.\n\nA (linked chain)[./#section/Data/Date-chains] per wachtgeld is maintained within this resource. So only one wachtgeld record can be active at the same time. ',
        examples=['2021-06-01'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None, description='The value for the wachtgeld.\n', examples=[50.87]
    )
    valueAdditionalIncomeCivilService: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value of additional income civil service (Neveninkomsten ambtelijk).\n',
        examples=[50.87],
    )
    valueAdditionalIncomeNonCivilService: Optional[confloat(ge=0.01, le=99999.99)] = (
        Field(
            None,
            description='The value of additional income non civil service (Neveninkomsten niet ambtelijk).\n',
            examples=[50.87],
        )
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWachtgeldPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message628]] = None
    content: Optional[Content138] = None


class Message629(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWachtgeldPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message629]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWachtgeldPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWachtgeldPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Deviations18(BaseModel):
    hoursPerWeek: Optional[confloat(ge=1.0, le=99.99)] = Field(
        None,
        description='The hours per week used in wage calculations.',
        examples=[37.5],
    )
    percentageChange: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='The percentage change used in wage calculations.',
        examples=[25],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.',
        examples=['1995-05-21'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWageprojectionPostRequest(
    BaseModel
):
    calculateUsingNextYearsValues: Optional[bool] = Field(
        False,
        description='If set to true the wage projection will use the (government) salary values of the next payroll year to calculate the wages. This gives some insight in what the employments wages will do next year based on the government\'s tax plans."',
        examples=[True],
    )
    deviations: Optional[Deviations18] = Field(
        None,
        description='This endpoint can only be used for employments that are already known in the loket.nl system. If however you want to perform a calculation with different parameters then that are known in the loket system they can be set here',
    )


class Message630(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollPeriod13(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period the record relates to',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll periode is part of a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the payroll period the record relates to',
        examples=[2017],
    )


class PayrollComponent53(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.    \n',
    )
    column: Optional[Column] = Field(
        None,
        description='The wage sheet column (kolom) of the payroll component. Kolommen are related to its specific lines on the payslip and/or wage sheet.  Also this does bear some similiarties to wage sheets columns (loonstaatkolommen) used by the Belastingdienst, however the division of columns as used by Loket is not identical to that.\n',
    )
    costsEmployer: Optional[CostsEmployer] = Field(
        None,
        description='Indicates whether the components are costs for the employer (+) or negative costs (-, i.e. benefit) for the employer. The value could also be NULL meaning that the component is not related to actual expenses.\n',
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[1],
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )


class PayrollComponentResult2(BaseModel):
    payrollComponent: Optional[PayrollComponent53] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    value: Optional[float] = Field(
        None,
        description="Value/ amount (normaal tarief voor belasting, tabelloon) for the payrollcomponent. Only a 'normal' type payslip may have value for this.",
        examples=[40],
    )
    valueSpecialTariff: Optional[float] = Field(
        None,
        description="Value/ amount (speciaal tarief voor belasting) for the payrollcomponent. Both a 'normal' and 'special tariff' type payslip may a value for this. Also, both valueNormal and valueSpecialTariff may have a value at the same time.",
        examples=[144],
    )


class PayslipType12(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Normaal strook'])


class PayslipType11(BaseModel):
    payrollComponentResults: Optional[List[PayrollComponentResult2]] = None
    payslipType: Optional[PayslipType12] = Field(
        None,
        description='The type of payslip on which underlying payroll run results will be booked. This is either normaal or bijzonder tarief.\n',
    )


class PayrollPeriod12(BaseModel):
    payrollPeriod: Optional[PayrollPeriod13] = None
    payslipTypes: Optional[List[PayslipType11]] = None


class Content139(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[List[PayrollPeriod12]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWageprojectionPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message630]] = None
    content: Optional[Content139] = None


class Message631(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWageprojectionPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message631]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWageprojectionPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWageprojectionPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ResultPayrollComponent(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[83],
    )


class AdditionalPayrollPeriod(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=999.999999)] = Field(
        None,
        description='The percentage for the additional payroll period wage the employment receives (13e maand / extra periode loon / winstuitkering)',
        examples=[8],
    )
    resultPayrollComponent: Optional[ResultPayrollComponent] = Field(
        None,
        description='A payroll component. These components are the core of the wage calculation software.\n\n`payrollComponents` is a metadata field within the payroll administration, loonmodel and cao context. Possible values can be managed by the user.',
    )


class FiscalAdditionPeriod(Enum):
    Year = 'Year'
    payrollPeriod = 'payrollPeriod'


class CompanyCar(BaseModel):
    fiscalAddition: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The fiscal addition to the wage for the given `fiscalAdditionPeriod` for the lease/company car\n',
        examples=[345.87],
    )
    fiscalAdditionPeriod: Optional[FiscalAdditionPeriod] = Field(
        None, description='Periodicity of the `fiscalAddition`'
    )


class Deductions(BaseModel):
    gross: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross deduction from the wage\n', examples=[50.87]
    )
    net: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The net deduction from the wage\n', examples=[50.87]
    )


class Deviations19(BaseModel):
    grossWagePercentageChange: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='The percentage change used in wage calculations.',
        examples=[25],
    )
    hoursPerWeek: Optional[confloat(ge=1.0, le=99.99)] = Field(
        None,
        description='The hours per week used in wage calculations.',
        examples=[37.5],
    )


class ResultPayrollComponent1(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[82],
    )


class HolidayAllowance(BaseModel):
    percentage: Optional[confloat(ge=0.0, le=999.999999)] = Field(
        None,
        description='The percentage for the holiday bonus (vakantiegeld)',
        examples=[8],
    )
    resultPayrollComponent: Optional[ResultPayrollComponent1] = None


class Payments(BaseModel):
    gross: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross payment added to the wage\n', examples=[50.87]
    )
    net: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The net payment added to the wage\n', examples=[50.87]
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWageprojectionBasedOnDefaultClaConfigurationPostRequest(
    BaseModel
):
    additionalPayrollPeriod: Optional[AdditionalPayrollPeriod] = None
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is to be applied (loonheffingskorting)',
        examples=[False],
    )
    calculateUsingNextYearsValues: Optional[bool] = Field(
        False,
        description='If set to true the wage projection will use the (government) salary values of the next payroll year to calculate the wages. This gives some insight in what the employments wages will do next year based on the government\'s tax plans."',
        examples=[True],
    )
    companyCar: Optional[CompanyCar] = None
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    deductions: Optional[Deductions] = None
    deviations: Optional[Deviations19] = Field(
        None,
        description='Deviations allow the user to calculate the difference between the current wage and the wage after certain deviations.\nIf no deviations are required set the object to NULL',
    )
    grossWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The grosswage per payroll period', examples=[3500]
    )
    holidayAllowance: Optional[HolidayAllowance] = None
    hoursPerWeek: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='The hours per week te be used in the wage calculation. \n\nPlease note that currently this endpoint will always calculate as if the hours provided are full time hours.',
        examples=[24.5],
    )
    payments: Optional[Payments] = None


class Message632(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollPeriod15(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period the record relates to',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll periode is part of a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the payroll period the record relates to',
        examples=[2017],
    )


class PayrollComponent54(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.    \n',
    )
    column: Optional[Column] = Field(
        None,
        description='The wage sheet column (kolom) of the payroll component. Kolommen are related to its specific lines on the payslip and/or wage sheet.  Also this does bear some similiarties to wage sheets columns (loonstaatkolommen) used by the Belastingdienst, however the division of columns as used by Loket is not identical to that.\n',
    )
    costsEmployer: Optional[CostsEmployer] = Field(
        None,
        description='Indicates whether the components are costs for the employer (+) or negative costs (-, i.e. benefit) for the employer. The value could also be NULL meaning that the component is not related to actual expenses.\n',
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[1],
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )


class PayrollComponentResult3(BaseModel):
    payrollComponent: Optional[PayrollComponent54] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    value: Optional[float] = Field(
        None,
        description="Value/ amount (normaal tarief voor belasting, tabelloon) for the payrollcomponent. Only a 'normal' type payslip may have value for this.",
        examples=[40],
    )
    valueSpecialTariff: Optional[float] = Field(
        None,
        description="Value/ amount (speciaal tarief voor belasting) for the payrollcomponent. Both a 'normal' and 'special tariff' type payslip may a value for this. Also, both valueNormal and valueSpecialTariff may have a value at the same time.",
        examples=[144],
    )


class PayslipType14(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Normaal strook'])


class PayslipType13(BaseModel):
    payrollComponentResults: Optional[List[PayrollComponentResult3]] = None
    payslipType: Optional[PayslipType14] = Field(
        None,
        description='The type of payslip on which underlying payroll run results will be booked. This is either normaal or bijzonder tarief.\n',
    )


class PayrollPeriod14(BaseModel):
    payrollPeriod: Optional[PayrollPeriod15] = None
    payslipTypes: Optional[List[PayslipType13]] = None


class Content140(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[List[PayrollPeriod14]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWageprojectionBasedOnDefaultClaConfigurationPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message632]] = None
    content: Optional[Content140] = None


class Message633(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWageprojectionBasedOnDefaultClaConfigurationPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message633]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWageprojectionBasedOnDefaultClaConfigurationPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWageprojectionBasedOnDefaultClaConfigurationPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message634(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollPeriodType4(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Maand'])


class FieldEmbeddedItem71(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected.\n',
        examples=[True],
    )
    employerCosts: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The cost for the employer for this employee.\n',
        examples=[3500],
    )
    employerCostsType: Optional[EmployerCostsType] = Field(
        None,
        description='Indicates whether the employer costs are hourly costs or periodic costs. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    grossWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross wage for the employee\n', examples=[2300]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a Periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isGrossWageFullTime: Optional[bool] = Field(
        None,
        description='Indicates whether the given grossWage is either a full-time wage or a part-time wage. Full-time wage is the default value (isGrossWageFulltime = true) and Loket.nl recommends to use this option. A full-time wage takes into account the part-time percentage of an employment. While a part-time wage does not. E.g. A full-time wage of 2400 euro’s is registered. The employments works 20 out of 40 hours (40 fours is a full-time shift) thus having a 20/40 = 50% part-time percentage. The part-time hours (deviatingHoursPerWeek) are accessible through the endpoint for working hours of an employement. In the wage calculation Loket.nl will divide the grossWage component by 50% resulting in a grossWage of 1200 euro’s. In the case of a part-time wage the part-time percentage will be ignored.\n',
        examples=[True],
    )
    netWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='Net wage for the employment\n', examples=[2400]
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description="A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee's level, rank or status within the employer's organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n",
    )
    payrollPeriodType: Optional[PayrollPeriodType4] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4). The value of this field is used to further specify the meaning of grossWageType, netWageType and employerCostsType. When the key fields of these three wage types have a value 1 (meaning periodic wage), the payrollPeriodType field shows the period type (month, 4 weeks or week) applicable to the wages for the employment. E.g. If the value for grossWageType.key = 1 (periodic wage) and the value for payrollPeriodType.key = 1 (meaning Month), then the wage registerd in grossWage is a monthly wage. Note that in cases where the wage type is an hourly wage (grossWageType.key = 2), the payrollPeriodType should be ignored.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n__Note__ It is posible to have no wage record.\n',
        examples=['1995-05-21'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message634]] = None
    field_embedded: Optional[List[FieldEmbeddedItem71]] = Field(None, alias='_embedded')


class Message635(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message635]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesPostRequest(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected.\n',
        examples=[True],
    )
    employerCosts: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The cost for the employer for this employee.\n',
        examples=[3500],
    )
    employerCostsType: Optional[EmployerCostsType] = Field(
        None,
        description='Indicates whether the employer costs are hourly costs or periodic costs. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    grossWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross wage for the employee\n', examples=[2300]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a Periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isGrossWageFullTime: Optional[bool] = Field(
        None,
        description='Indicates whether the given grossWage is either a full-time wage or a part-time wage. Full-time wage is the default value (isGrossWageFulltime = true) and Loket.nl recommends to use this option. A full-time wage takes into account the part-time percentage of an employment. While a part-time wage does not. E.g. A full-time wage of 2400 euro’s is registered. The employments works 20 out of 40 hours (40 fours is a full-time shift) thus having a 20/40 = 50% part-time percentage. The part-time hours (deviatingHoursPerWeek) are accessible through the endpoint for working hours of an employement. In the wage calculation Loket.nl will divide the grossWage component by 50% resulting in a grossWage of 1200 euro’s. In the case of a part-time wage the part-time percentage will be ignored.\n',
        examples=[True],
    )
    netWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='Net wage for the employment\n', examples=[2400]
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description="A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee's level, rank or status within the employer's organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n",
    )
    payrollPeriodType: Optional[PayrollPeriodType4] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4). The value of this field is used to further specify the meaning of grossWageType, netWageType and employerCostsType. When the key fields of these three wage types have a value 1 (meaning periodic wage), the payrollPeriodType field shows the period type (month, 4 weeks or week) applicable to the wages for the employment. E.g. If the value for grossWageType.key = 1 (periodic wage) and the value for payrollPeriodType.key = 1 (meaning Month), then the wage registerd in grossWage is a monthly wage. Note that in cases where the wage type is an hourly wage (grossWageType.key = 2), the payrollPeriodType should be ignored.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n__Note__ It is posible to have no wage record.\n',
        examples=['1995-05-21'],
    )


class Message636(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content141(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected.\n',
        examples=[True],
    )
    employerCosts: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The cost for the employer for this employee.\n',
        examples=[3500],
    )
    employerCostsType: Optional[EmployerCostsType] = Field(
        None,
        description='Indicates whether the employer costs are hourly costs or periodic costs. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    grossWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross wage for the employee\n', examples=[2300]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a Periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isGrossWageFullTime: Optional[bool] = Field(
        None,
        description='Indicates whether the given grossWage is either a full-time wage or a part-time wage. Full-time wage is the default value (isGrossWageFulltime = true) and Loket.nl recommends to use this option. A full-time wage takes into account the part-time percentage of an employment. While a part-time wage does not. E.g. A full-time wage of 2400 euro’s is registered. The employments works 20 out of 40 hours (40 fours is a full-time shift) thus having a 20/40 = 50% part-time percentage. The part-time hours (deviatingHoursPerWeek) are accessible through the endpoint for working hours of an employement. In the wage calculation Loket.nl will divide the grossWage component by 50% resulting in a grossWage of 1200 euro’s. In the case of a part-time wage the part-time percentage will be ignored.\n',
        examples=[True],
    )
    netWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='Net wage for the employment\n', examples=[2400]
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description="A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee's level, rank or status within the employer's organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n",
    )
    payrollPeriodType: Optional[PayrollPeriodType4] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4). The value of this field is used to further specify the meaning of grossWageType, netWageType and employerCostsType. When the key fields of these three wage types have a value 1 (meaning periodic wage), the payrollPeriodType field shows the period type (month, 4 weeks or week) applicable to the wages for the employment. E.g. If the value for grossWageType.key = 1 (periodic wage) and the value for payrollPeriodType.key = 1 (meaning Month), then the wage registerd in grossWage is a monthly wage. Note that in cases where the wage type is an hourly wage (grossWageType.key = 2), the payrollPeriodType should be ignored.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n__Note__ It is posible to have no wage record.\n',
        examples=['1995-05-21'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message636]] = None
    content: Optional[Content141] = None


class Message637(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message637]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesheetYearGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message637]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesheetYearGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWagesheetYearGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message639(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Shift14(BaseModel):
    bonusPercentage: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift.\n',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.\n',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None, description='The number for the shift.\n', examples=[1]
    )


class WorkPattern6(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class FieldEmbeddedItem72(BaseModel):
    aggregatedHoursPerWeek: Optional[confloat(ge=0.01, le=168.0)] = Field(
        None,
        description="This read-only field provides the user with a single point of knowledge as to what number of hours per week employment is actually registered in regards to the payrolling process. This number may be respectively based on the workpattern, deviating hours per week or shift hours. If the employment is an 'on call employment' (oproepkracht/invalkracht) the number is either NULL or represents the min-hours if that is applicable.\nThis field is especially useful for third-parties that want to know the number of hours per week (without having to apply specific Loket logic). I.e. this field is not visible in Loket GUI.",
        examples=[24],
    )
    averageHoursPerWeek: Optional[confloat(ge=0.0, le=168.0)] = Field(
        None,
        description='This field can be used to register the average hours per week an employment with varying hours works. For example, 0 hour contracts and min max contracts. The value of this field does NOT directly affect the payrolling proces.',
        examples=[32],
    )
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor, purely for administrative purposes. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100. \nPlease note that this field is not used in the actual payroll proces! For the payroll process the number of hours is used.',
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern3] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object). Onderliggende elementen geven aan of specifieke waardes berekend moeten worden op basis van het twee wekelijks werkpatroon `workPattern`\n',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='If this field is empty the fulltime hours are based as defined by the shift, this optional field is used to register an overwriting value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[conint(ge=1, le=23)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value.',
        examples=[20],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.\n',
        examples=['2018-10-23'],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract3] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.',
        examples=[True],
    )
    shift: Optional[Shift14] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    shiftRateSickLeave: Optional[ShiftRateSickLeave] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shiftRateSickLeave` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n',
        examples=['2018-01-01'],
    )
    workPattern: Optional[WorkPattern6] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWorkinghoursGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message639]] = None
    field_embedded: Optional[List[FieldEmbeddedItem72]] = Field(None, alias='_embedded')


class Message640(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWorkinghoursGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message640]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWorkinghoursGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWorkinghoursGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class WorkPattern7(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWorkinghoursPostRequest(
    BaseModel
):
    aggregatedHoursPerWeek: Optional[confloat(ge=0.01, le=168.0)] = Field(
        None,
        description="This read-only field provides the user with a single point of knowledge as to what number of hours per week employment is actually registered in regards to the payrolling process. This number may be respectively based on the workpattern, deviating hours per week or shift hours. If the employment is an 'on call employment' (oproepkracht/invalkracht) the number is either NULL or represents the min-hours if that is applicable.\nThis field is especially useful for third-parties that want to know the number of hours per week (without having to apply specific Loket logic). I.e. this field is not visible in Loket GUI.",
        examples=[24],
    )
    averageHoursPerWeek: Optional[confloat(ge=0.0, le=168.0)] = Field(
        None,
        description='This field can be used to register the average hours per week an employment with varying hours works. For example, 0 hour contracts and min max contracts. The value of this field does NOT directly affect the payrolling proces.',
        examples=[32],
    )
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor, purely for administrative purposes. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100. \nPlease note that this field is not used in the actual payroll proces! For the payroll process the number of hours is used.',
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern3] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object). Onderliggende elementen geven aan of specifieke waardes berekend moeten worden op basis van het twee wekelijks werkpatroon `workPattern`\n',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='If this field is empty the fulltime hours are based as defined by the shift, this optional field is used to register an overwriting value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[conint(ge=1, le=23)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value.',
        examples=[20],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.\n',
        examples=['2018-10-23'],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract3] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.',
        examples=[True],
    )
    shift: Optional[Shift14] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    shiftRateSickLeave: Optional[ShiftRateSickLeave] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shiftRateSickLeave` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n',
        examples=['2018-01-01'],
    )
    workPattern: Optional[WorkPattern7] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class Message641(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class WorkPattern8(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class Content142(BaseModel):
    aggregatedHoursPerWeek: Optional[confloat(ge=0.01, le=168.0)] = Field(
        None,
        description="This read-only field provides the user with a single point of knowledge as to what number of hours per week employment is actually registered in regards to the payrolling process. This number may be respectively based on the workpattern, deviating hours per week or shift hours. If the employment is an 'on call employment' (oproepkracht/invalkracht) the number is either NULL or represents the min-hours if that is applicable.\nThis field is especially useful for third-parties that want to know the number of hours per week (without having to apply specific Loket logic). I.e. this field is not visible in Loket GUI.",
        examples=[24],
    )
    averageHoursPerWeek: Optional[confloat(ge=0.0, le=168.0)] = Field(
        None,
        description='This field can be used to register the average hours per week an employment with varying hours works. For example, 0 hour contracts and min max contracts. The value of this field does NOT directly affect the payrolling proces.',
        examples=[32],
    )
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor, purely for administrative purposes. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100. \nPlease note that this field is not used in the actual payroll proces! For the payroll process the number of hours is used.',
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern3] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object). Onderliggende elementen geven aan of specifieke waardes berekend moeten worden op basis van het twee wekelijks werkpatroon `workPattern`\n',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='If this field is empty the fulltime hours are based as defined by the shift, this optional field is used to register an overwriting value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[conint(ge=1, le=23)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value.',
        examples=[20],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.\n',
        examples=['2018-10-23'],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract3] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.',
        examples=[True],
    )
    shift: Optional[Shift14] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    shiftRateSickLeave: Optional[ShiftRateSickLeave] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shiftRateSickLeave` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n',
        examples=['2018-01-01'],
    )
    workPattern: Optional[WorkPattern8] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWorkinghoursPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message641]] = None
    content: Optional[Content142] = None


class Message642(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWorkinghoursPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message642]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWorkinghoursPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdWorkinghoursPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message643(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem73(BaseModel):
    year: Optional[int] = Field(
        None,
        description='The year for which a year-end statement is available.',
        examples=[2018],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdYearendstatementsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message643]] = None
    field_embedded: Optional[List[FieldEmbeddedItem73]] = Field(None, alias='_embedded')


class Message644(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdYearendstatementsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message644]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmploymentsEmploymentIdYearendstatementsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdYearendstatementsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdYearendstatementsYearGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message644]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmploymentsEmploymentIdYearendstatementsYearGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmploymentsEmploymentIdYearendstatementsYearGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesNotesNoteIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message644]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesNotesNoteIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message644]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesNotesNoteIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesNotesNoteIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message648(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem74(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersEmployeesNotesNoteIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message648]] = None
    field_embedded: Optional[List[FieldEmbeddedItem74]] = Field(None, alias='_embedded')


class Message649(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesNotesNoteIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message649]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesNotesNoteIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesNotesNoteIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesNotesNoteIdPutRequest(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class Message650(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content143(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersEmployeesNotesNoteIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message650]] = None
    content: Optional[Content143] = None


class Message651(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesNotesNoteIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message651]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesNotesNoteIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesNotesNoteIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesNotesNoteIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message651]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployeesPartnersPartnerIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message651]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesPartnersPartnerIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message651]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesPartnersPartnerIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesPartnersPartnerIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message655(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class WaoClassification(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the occupational disability classification. Possible values can be acquired via the metadata endpoint.\n',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the occupational disability classification.\n',
        examples=['15 - 24'],
    )


class Content144(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    endDate: Optional[date_aliased] = Field(
        None, description='end date', examples=['1995-05-21']
    )
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='startdate', examples=['1995-05-21']
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')
    waoClassification: Optional[WaoClassification] = Field(
        None,
        description='The occupational disability classification in the form of a percentage range.',
    )


class ProvidersEmployersEmployeesPartnersPartnerIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message655]] = None
    content: Optional[Content144] = None


class Message656(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesPartnersPartnerIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message656]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesPartnersPartnerIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesPartnersPartnerIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesPartnersPartnerIdPutRequest(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    endDate: Optional[date_aliased] = Field(
        None, description='end date', examples=['1995-05-21']
    )
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='startdate', examples=['1995-05-21']
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')
    waoClassification: Optional[WaoClassification] = Field(
        None,
        description='The occupational disability classification in the form of a percentage range.',
    )


class Message657(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content145(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    endDate: Optional[date_aliased] = Field(
        None, description='end date', examples=['1995-05-21']
    )
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='startdate', examples=['1995-05-21']
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')
    waoClassification: Optional[WaoClassification] = Field(
        None,
        description='The occupational disability classification in the form of a percentage range.',
    )


class ProvidersEmployersEmployeesPartnersPartnerIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message657]] = None
    content: Optional[Content145] = None


class Message658(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesPartnersPartnerIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message658]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesPartnersPartnerIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesPartnersPartnerIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesPartnersPartnerIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message658]] = None
    version: Optional[Version] = None


class Action6(Enum):
    SendInvite = 'SendInvite'
    RevokeInvite = 'RevokeInvite'
    RevokeAccess = 'RevokeAccess'
    ReinstateAccess = 'ReinstateAccess'
    ResendUsername = 'ResendUsername'
    DisableTwoFactorAuthentication = 'DisableTwoFactorAuthentication'


class ProvidersEmployersEmployeesSelfservicePatchRequestItem(BaseModel):
    action: Optional[Action6] = Field(
        None, description='The action to be taken for the given employee'
    )
    employeeId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployeesSelfservicePatchRequest(
    RootModel[List[ProvidersEmployersEmployeesSelfservicePatchRequestItem]]
):
    root: List[ProvidersEmployersEmployeesSelfservicePatchRequestItem]


class Message660(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesSelfservicePatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message660]] = None
    content: Optional[Dict[str, Any]] = None


class Message661(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesSelfservicePatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message661]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesSelfservicePatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesSelfservicePatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesSelfservicePatchResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message661]] = None
    version: Optional[Version] = None


class Message663(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country31(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication17(BaseModel):
    key: Optional[int] = Field(
        None,
        description="The key of the further indication ('nadere aanduiding'). Posible values can be aquired via the metadata endpoint",
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication (\'nadere aanduiding\'), the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address11(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country31] = None
    furtherIndication: Optional[FurtherIndication17] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ContactInformation10(BaseModel):
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The fax number to contact this individual',
        examples=['+31 13-1234561'],
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class Country32(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication18(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress5(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country32] = None
    furtherIndication: Optional[FurtherIndication18] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class TypeOfDocument3(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the type of document. Posible values can be aquired via the metadata endpoint',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the type of document', examples=['Passport']
    )


class IdentityDocument3(BaseModel):
    documentIdentification: Optional[str] = Field(None, examples=['CRE45553433'])
    typeOfDocument: Optional[TypeOfDocument3] = None


class CivilStatus6(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Maried'])


class Nationality6(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the nationality. Posible values can be aquired via the metadata endpoint',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the nationality', examples=['Dutch']
    )


class PersonalDetails6(BaseModel):
    aowDate: Optional[date_aliased] = Field(
        None,
        description='The date when, according to Dutch law, the person has the right to a state pension. The value is generated by the system based on the date of birth.',
        examples=['2062-08-21'],
    )
    civilStatus: Optional[CivilStatus6] = Field(
        None, description='The civil/marital status of the employee\n'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description="The last name of the employee's partner.", examples=['Wiel']
    )
    nationality: Optional[Nationality6] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description="The prefix to the last name of the employee's partner.",
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')


class StatusEmployeeSelfService(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Blocked'])


class Travel(BaseModel):
    travelDistanceToWork: Optional[conint(ge=1)] = Field(
        None,
        description='The one way distance in metres the employee has to travel to work.\n',
        examples=[32],
    )


class Content146(BaseModel):
    address: Optional[Address11] = None
    contactInformation: Optional[ContactInformation10] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress5] = None
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    exclusionFromAbsenceStatus: Optional[bool] = Field(
        None,
        description='Indicates whether the employee is excluded for any information of absence\n',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    identityDocument: Optional[IdentityDocument3] = None
    personalDetails: Optional[PersonalDetails6] = None
    revokeEmployeeSelfServiceAccessOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the Employee will be automatically blocked.\n',
        examples=['2018-10-23'],
    )
    statusEmployeeSelfService: Optional[StatusEmployeeSelfService] = Field(
        None,
        description='The status of the accessability of the Employee Self Service application. In case ESS is not relevant the object will be returned as NULL. Possible values can be acquired via the metadata endpoint',
    )
    travel: Optional[Travel] = None


class ProvidersEmployersEmployeesEmployeeIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message663]] = None
    content: Optional[Content146] = None


class Country33(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication19(BaseModel):
    key: Optional[int] = Field(
        None,
        description="The key of the further indication ('nadere aanduiding'). Posible values can be aquired via the metadata endpoint",
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication (\'nadere aanduiding\'), the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address12(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country33] = None
    furtherIndication: Optional[FurtherIndication19] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ContactInformation11(BaseModel):
    businessEmailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The business e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    businessMobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The business mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    businessPhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The business phone number of the employee.',
        examples=['+31 13-1234567'],
    )
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The fax number to contact this individual',
        examples=['+31 13-1234561'],
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class Country34(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication20(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress6(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country34] = None
    furtherIndication: Optional[FurtherIndication20] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument4(BaseModel):
    documentIdentification: Optional[str] = Field(None, examples=['CRE45553433'])
    typeOfDocument: Optional[TypeOfDocument3] = None


class PersonalDetails7(BaseModel):
    aowDate: Optional[date_aliased] = Field(
        None,
        description='The date when, according to Dutch law, the person has the right to a state pension. The value is generated by the system based on the date of birth.',
        examples=['2062-08-21'],
    )
    civilStatus: Optional[CivilStatus6] = Field(
        None, description='The civil/marital status of the employee\n'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description="The last name of the employee's partner.", examples=['Wiel']
    )
    nationality: Optional[Nationality6] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description="The prefix to the last name of the employee's partner.",
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')


class Content147(BaseModel):
    address: Optional[Address12] = None
    contactInformation: Optional[ContactInformation11] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress6] = None
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    exclusionFromAbsenceStatus: Optional[bool] = Field(
        None,
        description='Indicates whether the employee is excluded for any information of absence\n',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    identityDocument: Optional[IdentityDocument4] = None
    personalDetails: Optional[PersonalDetails7] = None
    revokeEmployeeSelfServiceAccessOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the Employee will be automatically blocked.\n',
        examples=['2018-10-23'],
    )
    statusEmployeeSelfService: Optional[StatusEmployeeSelfService] = Field(
        None,
        description='The status of the accessability of the Employee Self Service application. In case ESS is not relevant the object will be returned as NULL. Possible values can be acquired via the metadata endpoint',
    )
    travel: Optional[Travel] = None


class ProvidersEmployersEmployeesEmployeeIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message663]] = None
    content: Optional[Content147] = None


class Message665(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdGetResponse2(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message665]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdGetResponse4(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Country35(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication21(BaseModel):
    key: Optional[int] = Field(
        None,
        description="The key of the further indication ('nadere aanduiding'). Posible values can be aquired via the metadata endpoint",
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication (\'nadere aanduiding\'), the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address13(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country35] = None
    furtherIndication: Optional[FurtherIndication21] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ContactInformation12(BaseModel):
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The fax number to contact this individual',
        examples=['+31 13-1234561'],
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class Country36(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication22(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress7(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country36] = None
    furtherIndication: Optional[FurtherIndication22] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument5(BaseModel):
    documentIdentification: Optional[str] = Field(None, examples=['CRE45553433'])
    typeOfDocument: Optional[TypeOfDocument3] = None


class PersonalDetails8(BaseModel):
    aowDate: Optional[date_aliased] = Field(
        None,
        description='The date when, according to Dutch law, the person has the right to a state pension. The value is generated by the system based on the date of birth.',
        examples=['2062-08-21'],
    )
    civilStatus: Optional[CivilStatus6] = Field(
        None, description='The civil/marital status of the employee\n'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description="The last name of the employee's partner.", examples=['Wiel']
    )
    nationality: Optional[Nationality6] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description="The prefix to the last name of the employee's partner.",
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')


class ProvidersEmployersEmployeesEmployeeIdPutRequest(BaseModel):
    address: Optional[Address13] = None
    contactInformation: Optional[ContactInformation12] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress7] = None
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    exclusionFromAbsenceStatus: Optional[bool] = Field(
        None,
        description='Indicates whether the employee is excluded for any information of absence\n',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    identityDocument: Optional[IdentityDocument5] = None
    personalDetails: Optional[PersonalDetails8] = None
    revokeEmployeeSelfServiceAccessOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the Employee will be automatically blocked.\n',
        examples=['2018-10-23'],
    )
    statusEmployeeSelfService: Optional[StatusEmployeeSelfService] = Field(
        None,
        description='The status of the accessability of the Employee Self Service application. In case ESS is not relevant the object will be returned as NULL. Possible values can be acquired via the metadata endpoint',
    )
    travel: Optional[Travel] = None


class Country37(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication23(BaseModel):
    key: Optional[int] = Field(
        None,
        description="The key of the further indication ('nadere aanduiding'). Posible values can be aquired via the metadata endpoint",
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication (\'nadere aanduiding\'), the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address14(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country37] = None
    furtherIndication: Optional[FurtherIndication23] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ContactInformation13(BaseModel):
    businessEmailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The business e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    businessMobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The business mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    businessPhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The business phone number of the employee.',
        examples=['+31 13-1234567'],
    )
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The fax number to contact this individual',
        examples=['+31 13-1234561'],
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class Country38(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication24(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress8(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country38] = None
    furtherIndication: Optional[FurtherIndication24] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument6(BaseModel):
    documentIdentification: Optional[str] = Field(None, examples=['CRE45553433'])
    typeOfDocument: Optional[TypeOfDocument3] = None


class PersonalDetails9(BaseModel):
    aowDate: Optional[date_aliased] = Field(
        None,
        description='The date when, according to Dutch law, the person has the right to a state pension. The value is generated by the system based on the date of birth.',
        examples=['2062-08-21'],
    )
    civilStatus: Optional[CivilStatus6] = Field(
        None, description='The civil/marital status of the employee\n'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description="The last name of the employee's partner.", examples=['Wiel']
    )
    nationality: Optional[Nationality6] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description="The prefix to the last name of the employee's partner.",
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')


class ProvidersEmployersEmployeesEmployeeIdPutRequest1(BaseModel):
    address: Optional[Address14] = None
    contactInformation: Optional[ContactInformation13] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress8] = None
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    exclusionFromAbsenceStatus: Optional[bool] = Field(
        None,
        description='Indicates whether the employee is excluded for any information of absence\n',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    identityDocument: Optional[IdentityDocument6] = None
    personalDetails: Optional[PersonalDetails9] = None
    revokeEmployeeSelfServiceAccessOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the Employee will be automatically blocked.\n',
        examples=['2018-10-23'],
    )
    statusEmployeeSelfService: Optional[StatusEmployeeSelfService] = Field(
        None,
        description='The status of the accessability of the Employee Self Service application. In case ESS is not relevant the object will be returned as NULL. Possible values can be acquired via the metadata endpoint',
    )
    travel: Optional[Travel] = None


class Message666(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country39(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication25(BaseModel):
    key: Optional[int] = Field(
        None,
        description="The key of the further indication ('nadere aanduiding'). Posible values can be aquired via the metadata endpoint",
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication (\'nadere aanduiding\'), the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address15(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country39] = None
    furtherIndication: Optional[FurtherIndication25] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ContactInformation14(BaseModel):
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The fax number to contact this individual',
        examples=['+31 13-1234561'],
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class Country40(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication26(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress9(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country40] = None
    furtherIndication: Optional[FurtherIndication26] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument7(BaseModel):
    documentIdentification: Optional[str] = Field(None, examples=['CRE45553433'])
    typeOfDocument: Optional[TypeOfDocument3] = None


class PersonalDetails10(BaseModel):
    aowDate: Optional[date_aliased] = Field(
        None,
        description='The date when, according to Dutch law, the person has the right to a state pension. The value is generated by the system based on the date of birth.',
        examples=['2062-08-21'],
    )
    civilStatus: Optional[CivilStatus6] = Field(
        None, description='The civil/marital status of the employee\n'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description="The last name of the employee's partner.", examples=['Wiel']
    )
    nationality: Optional[Nationality6] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description="The prefix to the last name of the employee's partner.",
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')


class Content148(BaseModel):
    address: Optional[Address15] = None
    contactInformation: Optional[ContactInformation14] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress9] = None
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    exclusionFromAbsenceStatus: Optional[bool] = Field(
        None,
        description='Indicates whether the employee is excluded for any information of absence\n',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    identityDocument: Optional[IdentityDocument7] = None
    personalDetails: Optional[PersonalDetails10] = None
    revokeEmployeeSelfServiceAccessOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the Employee will be automatically blocked.\n',
        examples=['2018-10-23'],
    )
    statusEmployeeSelfService: Optional[StatusEmployeeSelfService] = Field(
        None,
        description='The status of the accessability of the Employee Self Service application. In case ESS is not relevant the object will be returned as NULL. Possible values can be acquired via the metadata endpoint',
    )
    travel: Optional[Travel] = None


class ProvidersEmployersEmployeesEmployeeIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message666]] = None
    content: Optional[Content148] = None


class Country41(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication27(BaseModel):
    key: Optional[int] = Field(
        None,
        description="The key of the further indication ('nadere aanduiding'). Posible values can be aquired via the metadata endpoint",
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication (\'nadere aanduiding\'), the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address16(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country41] = None
    furtherIndication: Optional[FurtherIndication27] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ContactInformation15(BaseModel):
    businessEmailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The business e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    businessMobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The business mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    businessPhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The business phone number of the employee.',
        examples=['+31 13-1234567'],
    )
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The fax number to contact this individual',
        examples=['+31 13-1234561'],
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class Country42(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication28(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress10(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country42] = None
    furtherIndication: Optional[FurtherIndication28] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument8(BaseModel):
    documentIdentification: Optional[str] = Field(None, examples=['CRE45553433'])
    typeOfDocument: Optional[TypeOfDocument3] = None


class PersonalDetails11(BaseModel):
    aowDate: Optional[date_aliased] = Field(
        None,
        description='The date when, according to Dutch law, the person has the right to a state pension. The value is generated by the system based on the date of birth.',
        examples=['2062-08-21'],
    )
    civilStatus: Optional[CivilStatus6] = Field(
        None, description='The civil/marital status of the employee\n'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description="The last name of the employee's partner.", examples=['Wiel']
    )
    nationality: Optional[Nationality6] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description="The prefix to the last name of the employee's partner.",
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')


class Content149(BaseModel):
    address: Optional[Address16] = None
    contactInformation: Optional[ContactInformation15] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress10] = None
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    exclusionFromAbsenceStatus: Optional[bool] = Field(
        None,
        description='Indicates whether the employee is excluded for any information of absence\n',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    identityDocument: Optional[IdentityDocument8] = None
    personalDetails: Optional[PersonalDetails11] = None
    revokeEmployeeSelfServiceAccessOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the Employee will be automatically blocked.\n',
        examples=['2018-10-23'],
    )
    statusEmployeeSelfService: Optional[StatusEmployeeSelfService] = Field(
        None,
        description='The status of the accessability of the Employee Self Service application. In case ESS is not relevant the object will be returned as NULL. Possible values can be acquired via the metadata endpoint',
    )
    travel: Optional[Travel] = None


class ProvidersEmployersEmployeesEmployeeIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message666]] = None
    content: Optional[Content149] = None


class Message668(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdPutResponse2(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message668]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdPutResponse4(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message669(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country43(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication29(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class ContactInformation16(BaseModel):
    city: constr(max_length=24) = Field(
        ..., description='City of the address', examples=['Leiden']
    )
    country: Country43
    endDate: Optional[date_aliased] = Field(
        None, description='end date of the contact information'
    )
    furtherIndication: Optional[FurtherIndication29] = None
    houseNumber: int = Field(
        ..., description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    locationType: Optional[LocationType] = Field(
        None, description='soort verpleegadres'
    )
    name: Optional[constr(min_length=1, max_length=70)] = Field(
        None,
        description='name of the institute for the contact information.',
        examples=['RadboudUMC Nijmegen'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number to contact the employee on.',
        examples=['+31 13-1234567'],
    )
    postalCode: constr(max_length=9) = Field(
        ..., description='The postal code of the address', examples=['1234 AA']
    )
    startDate: date_aliased = Field(
        ...,
        description='start date of the contact information',
        examples=['2018-01-21'],
    )
    street: constr(max_length=24) = Field(
        ..., description='Streetname of the address', examples=['Voordijk']
    )


class EndOfAbsence4(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The last day of the absence.\n'
    )
    reason: Optional[Reason] = Field(None, description='redenhersteld')


class Progress3(BaseModel):
    currentIncapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    endOfAbsence: Optional[EndOfAbsence4] = Field(
        None, description='date and reason for the closing/end of the absence'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )


class Reintegration3(BaseModel):
    dateOfFinalizingPlanOfAction: Optional[date_aliased] = Field(
        None,
        description='The day on which a plan of action (for return to normal work) was finalized.\n',
    )
    reintegrationGoal: Optional[ReintegrationGoal] = None


class FieldEmbeddedItem75(BaseModel):
    accidentType: Optional[AccidentType] = Field(
        None,
        description='The type of accident that led to the absence. This field will be NULL if the absence is not related to an accident.',
    )
    actionToBeTakenByOccupationalHealthAndSafetyService: Optional[
        ActionToBeTakenByOccupationalHealthAndSafetyService
    ] = Field(
        None,
        description='The desired action to be taken regarding the absence by the occupational health and safety service (arbodienst).\n',
    )
    caseManager: Optional[CaseManager] = None
    causeOfAbsence: Optional[CauseOfAbsence] = Field(
        None,
        description='The cause of the absence. This endpoint is intended for the registration of two types of absence:\n\n  1) Illness/sickness\n\n  2) "Vangnet" such as maternity leave, organ donation or adoption leave\n\n\nOther absences such as Vacation days, unpayed leave and Personal leave are registerd using the leave endpoint\n',
    )
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    contactInformation: Optional[ContactInformation16] = None
    expectedDateOfChildbirth: Optional[date_aliased] = Field(
        None, description='Bevallingsdatum', examples=['2018-01-21']
    )
    expectedDuration: Optional[ExpectedDuration] = Field(
        None,
        description='The expected duration of the absence. If the expected duration is unknown, this field will be NULL.',
    )
    expectedEndDateOfMaternityLeave: Optional[date_aliased] = Field(
        None,
        description='verwachte datum einde zwangerschapsverlof',
        examples=['2018-04-21'],
    )
    hasMobilityIssue: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee has an issue limiting its mobility.',
        examples=[False],
    )
    hoursWorkedOnFirstDayOfAbsence: Optional[conint(ge=1, le=8)] = Field(
        None,
        description='The number of hours worked on the first day of the absence.',
        examples=[3],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDisruptedEmploymentRelationship: Optional[bool] = Field(
        None,
        description='Indicates whether the employement relationship between employee and employer is disrupted.',
        examples=[True],
    )
    isHospitalised: Optional[bool] = Field(
        None, description='Betreft het een ziekenhuisopnamen', examples=[False]
    )
    isRecoveredWithinTwoWeeks: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee is (expected) recoverd within two weeks, relating to a full recovery.',
        examples=[False],
    )
    isThirdPartyLiability: Optional[bool] = Field(
        None,
        description='This field is related to `accidentType`. \nWhen `accidentType` is specified, this field indicates whether a third party is liable for the accident.',
        examples=[False],
    )
    isWorkRelatedIllness: Optional[bool] = Field(
        None, description='Beroepsziekte', examples=[False]
    )
    progress: Optional[Progress3] = None
    reintegration: Optional[Reintegration3] = None


class ProvidersEmployersEmployeesEmployeeIdAbsencesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message669]] = None
    field_embedded: Optional[List[FieldEmbeddedItem75]] = Field(None, alias='_embedded')


class Message670(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdAbsencesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message670]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmployeeIdAbsencesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdAbsencesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ContactInformation17(BaseModel):
    city: constr(max_length=24) = Field(
        ..., description='City of the address', examples=['Leiden']
    )
    country: Country43
    endDate: Optional[date_aliased] = Field(
        None, description='end date of the contact information'
    )
    furtherIndication: Optional[FurtherIndication29] = None
    houseNumber: int = Field(
        ..., description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    locationType: Optional[LocationType] = Field(
        None, description='soort verpleegadres'
    )
    name: Optional[constr(min_length=1, max_length=70)] = Field(
        None,
        description='name of the institute for the contact information.',
        examples=['RadboudUMC Nijmegen'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number to contact the employee on.',
        examples=['+31 13-1234567'],
    )
    postalCode: constr(max_length=9) = Field(
        ..., description='The postal code of the address', examples=['1234 AA']
    )
    startDate: date_aliased = Field(
        ...,
        description='start date of the contact information',
        examples=['2018-01-21'],
    )
    street: constr(max_length=24) = Field(
        ..., description='Streetname of the address', examples=['Voordijk']
    )


class Progress4(BaseModel):
    currentIncapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )


class Reintegration4(BaseModel):
    dateOfFinalizingPlanOfAction: Optional[date_aliased] = Field(
        None,
        description='The day on which a plan of action (for return to normal work) was finalized.\n',
    )
    reintegrationGoal: Optional[ReintegrationGoal] = None


class ProvidersEmployersEmployeesEmployeeIdAbsencesPostRequest(BaseModel):
    accidentType: Optional[AccidentType] = Field(
        None,
        description='The type of accident that led to the absence. This field will be NULL if the absence is not related to an accident.',
    )
    actionToBeTakenByOccupationalHealthAndSafetyService: Optional[
        ActionToBeTakenByOccupationalHealthAndSafetyService
    ] = Field(
        None,
        description='The desired action to be taken regarding the absence by the occupational health and safety service (arbodienst).\n',
    )
    caseManager: Optional[CaseManager] = None
    causeOfAbsence: Optional[CauseOfAbsence] = Field(
        None,
        description='The cause of the absence. This endpoint is intended for the registration of two types of absence:\n\n  1) Illness/sickness\n\n  2) "Vangnet" such as maternity leave, organ donation or adoption leave\n\n\nOther absences such as Vacation days, unpayed leave and Personal leave are registerd using the leave endpoint\n',
    )
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    contactInformation: Optional[ContactInformation17] = None
    expectedDateOfChildbirth: Optional[date_aliased] = Field(
        None, description='Bevallingsdatum', examples=['2018-01-21']
    )
    expectedDuration: Optional[ExpectedDuration] = Field(
        None,
        description='The expected duration of the absence. If the expected duration is unknown, this field will be NULL.',
    )
    expectedEndDateOfMaternityLeave: Optional[date_aliased] = Field(
        None,
        description='verwachte datum einde zwangerschapsverlof',
        examples=['2018-04-21'],
    )
    hasMobilityIssue: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee has an issue limiting its mobility.',
        examples=[False],
    )
    hoursWorkedOnFirstDayOfAbsence: Optional[conint(ge=1, le=8)] = Field(
        None,
        description='The number of hours worked on the first day of the absence.',
        examples=[3],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDisruptedEmploymentRelationship: Optional[bool] = Field(
        None,
        description='Indicates whether the employement relationship between employee and employer is disrupted.',
        examples=[True],
    )
    isHospitalised: Optional[bool] = Field(
        None, description='Betreft het een ziekenhuisopnamen', examples=[False]
    )
    isRecoveredWithinTwoWeeks: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee is (expected) recoverd within two weeks, relating to a full recovery.',
        examples=[False],
    )
    isThirdPartyLiability: Optional[bool] = Field(
        None,
        description='This field is related to `accidentType`. \nWhen `accidentType` is specified, this field indicates whether a third party is liable for the accident.',
        examples=[False],
    )
    isWorkRelatedIllness: Optional[bool] = Field(
        None, description='Beroepsziekte', examples=[False]
    )
    progress: Optional[Progress4] = None
    reintegration: Optional[Reintegration4] = None


class Message671(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ContactInformation18(BaseModel):
    city: constr(max_length=24) = Field(
        ..., description='City of the address', examples=['Leiden']
    )
    country: Country43
    endDate: Optional[date_aliased] = Field(
        None, description='end date of the contact information'
    )
    furtherIndication: Optional[FurtherIndication29] = None
    houseNumber: int = Field(
        ..., description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    locationType: Optional[LocationType] = Field(
        None, description='soort verpleegadres'
    )
    name: Optional[constr(min_length=1, max_length=70)] = Field(
        None,
        description='name of the institute for the contact information.',
        examples=['RadboudUMC Nijmegen'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number to contact the employee on.',
        examples=['+31 13-1234567'],
    )
    postalCode: constr(max_length=9) = Field(
        ..., description='The postal code of the address', examples=['1234 AA']
    )
    startDate: date_aliased = Field(
        ...,
        description='start date of the contact information',
        examples=['2018-01-21'],
    )
    street: constr(max_length=24) = Field(
        ..., description='Streetname of the address', examples=['Voordijk']
    )


class EndOfAbsence5(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The last day of the absence.\n'
    )
    reason: Optional[Reason] = Field(None, description='redenhersteld')


class Progress5(BaseModel):
    currentIncapacityPercentage: Optional[conint(ge=1, le=100)] = Field(
        None, description='percentage of not being able to work', examples=[100]
    )
    endOfAbsence: Optional[EndOfAbsence5] = Field(
        None, description='date and reason for the closing/end of the absence'
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='start dat of the incapacityPercentage',
        examples=['2018-01-21'],
    )


class Reintegration5(BaseModel):
    dateOfFinalizingPlanOfAction: Optional[date_aliased] = Field(
        None,
        description='The day on which a plan of action (for return to normal work) was finalized.\n',
    )
    reintegrationGoal: Optional[ReintegrationGoal] = None


class Content150(BaseModel):
    accidentType: Optional[AccidentType] = Field(
        None,
        description='The type of accident that led to the absence. This field will be NULL if the absence is not related to an accident.',
    )
    actionToBeTakenByOccupationalHealthAndSafetyService: Optional[
        ActionToBeTakenByOccupationalHealthAndSafetyService
    ] = Field(
        None,
        description='The desired action to be taken regarding the absence by the occupational health and safety service (arbodienst).\n',
    )
    caseManager: Optional[CaseManager] = None
    causeOfAbsence: Optional[CauseOfAbsence] = Field(
        None,
        description='The cause of the absence. This endpoint is intended for the registration of two types of absence:\n\n  1) Illness/sickness\n\n  2) "Vangnet" such as maternity leave, organ donation or adoption leave\n\n\nOther absences such as Vacation days, unpayed leave and Personal leave are registerd using the leave endpoint\n',
    )
    comments: Optional[constr(max_length=4000)] = Field(
        None,
        description='Free text field to register any relevant information.',
        examples=[
            'Lorem ipsum dolor sit amet, id nibh adhuc omnium vix, ne nec eius inani aliquip.'
        ],
    )
    contactInformation: Optional[ContactInformation18] = None
    expectedDateOfChildbirth: Optional[date_aliased] = Field(
        None, description='Bevallingsdatum', examples=['2018-01-21']
    )
    expectedDuration: Optional[ExpectedDuration] = Field(
        None,
        description='The expected duration of the absence. If the expected duration is unknown, this field will be NULL.',
    )
    expectedEndDateOfMaternityLeave: Optional[date_aliased] = Field(
        None,
        description='verwachte datum einde zwangerschapsverlof',
        examples=['2018-04-21'],
    )
    hasMobilityIssue: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee has an issue limiting its mobility.',
        examples=[False],
    )
    hoursWorkedOnFirstDayOfAbsence: Optional[conint(ge=1, le=8)] = Field(
        None,
        description='The number of hours worked on the first day of the absence.',
        examples=[3],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDisruptedEmploymentRelationship: Optional[bool] = Field(
        None,
        description='Indicates whether the employement relationship between employee and employer is disrupted.',
        examples=[True],
    )
    isHospitalised: Optional[bool] = Field(
        None, description='Betreft het een ziekenhuisopnamen', examples=[False]
    )
    isRecoveredWithinTwoWeeks: Optional[bool] = Field(
        None,
        description='This field indicates whether the Employee is (expected) recoverd within two weeks, relating to a full recovery.',
        examples=[False],
    )
    isThirdPartyLiability: Optional[bool] = Field(
        None,
        description='This field is related to `accidentType`. \nWhen `accidentType` is specified, this field indicates whether a third party is liable for the accident.',
        examples=[False],
    )
    isWorkRelatedIllness: Optional[bool] = Field(
        None, description='Beroepsziekte', examples=[False]
    )
    progress: Optional[Progress5] = None
    reintegration: Optional[Reintegration5] = None


class ProvidersEmployersEmployeesEmployeeIdAbsencesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message671]] = None
    content: Optional[Content150] = None


class Message672(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdAbsencesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message672]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdAbsencesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdAbsencesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdAbsencesOverviewGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message672]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdAbsencesOverviewGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdAbsencesOverviewGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message674(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content151(BaseModel):
    url: Optional[str] = Field(
        None,
        description='The URL to access the Benify portal',
        examples=['https://www.benify.nl'],
    )


class ProvidersEmployersEmployeesEmployeeIdBenifyurlGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message674]] = None
    content: Optional[Content151] = None


class Message675(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdBenifyurlGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message675]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdBenifyurlGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdBenifyurlGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Address17(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country43] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ProvidersEmployersEmployeesEmployeeIdChangeaddressrequestPostRequest(BaseModel):
    address: Optional[Address17] = None
    comment: Optional[constr(min_length=1)] = Field(
        None,
        description='An extra comment for the change request',
        examples=['We move house September 26th'],
    )


class ProvidersEmployersEmployeesEmployeeIdChangeaddressrequestPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message675]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdChangeaddressrequestPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message675]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdChangeaddressrequestPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdChangeaddressrequestPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ContactInformation19(BaseModel):
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The e-mail address of the employee. This field is required when the product Employee Self Serve is used.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None, description='The fax number of the employee', examples=['+31 13-1234561']
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class ProvidersEmployersEmployeesEmployeeIdChangecontactinformationrequestPostRequest(
    BaseModel
):
    comment: Optional[constr(min_length=1)] = Field(
        None,
        description='An extra comment for the change request',
        examples=['Changed my mobile phone number.'],
    )
    contactInformation: Optional[ContactInformation19] = None


class ProvidersEmployersEmployeesEmployeeIdChangecontactinformationrequestPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message675]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdChangecontactinformationrequestPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message675]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdChangecontactinformationrequestPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdChangecontactinformationrequestPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message680(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem76(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    residenceStatus: Optional[ResidenceStatus] = Field(
        None,
        description='Indicator to tell if the child is living at home or not. Use null if unknown.\n',
    )


class ProvidersEmployersEmployeesEmployeeIdChildrenGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message680]] = None
    field_embedded: Optional[List[FieldEmbeddedItem76]] = Field(None, alias='_embedded')


class Message681(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdChildrenGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message681]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmployeeIdChildrenGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdChildrenGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdChildrenPostRequest(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    residenceStatus: Optional[ResidenceStatus] = Field(
        None,
        description='Indicator to tell if the child is living at home or not. Use null if unknown.\n',
    )


class Message682(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content152(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    residenceStatus: Optional[ResidenceStatus] = Field(
        None,
        description='Indicator to tell if the child is living at home or not. Use null if unknown.\n',
    )


class ProvidersEmployersEmployeesEmployeeIdChildrenPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message682]] = None
    content: Optional[Content152] = None


class Message683(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdChildrenPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message683]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdChildrenPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdChildrenPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message684(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content153(BaseModel):
    citizenServiceNumber: Optional[constr(min_length=9, max_length=9)] = Field(
        None,
        description='The social security number of the employee used in communication with the Dutch tax authorities. The number has to be a valid Dutch citizen service number (BSN).',
        examples=['042168588'],
    )


class ProvidersEmployersEmployeesEmployeeIdCitizenservicenumberGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message684]] = None
    content: Optional[Content153] = None


class Message685(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdCitizenservicenumberGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message685]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdCitizenservicenumberGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdCitizenservicenumberGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdCitizenservicenumberPutRequest(BaseModel):
    citizenServiceNumber: Optional[constr(min_length=9, max_length=9)] = Field(
        None,
        description='The social security number of the employee used in communication with the Dutch tax authorities. The number has to be a valid Dutch citizen service number (BSN).',
        examples=['042168588'],
    )


class Message686(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmployeeIdCitizenservicenumberPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message686]] = None
    content: Optional[Content153] = None


class Message687(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdCitizenservicenumberPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message687]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdCitizenservicenumberPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdCitizenservicenumberPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message688(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Address18(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country43] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox.  For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class FieldEmbeddedItem77(BaseModel):
    address: Optional[Address18] = None
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='Describes the relationship of the contact to the employee',
        examples=['Moeder'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the contact', examples=['Johanna Bakker']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the contact',
        examples=['Genoemd adres is een priveadres'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None, description='The phone number of the contact', examples=['013-12345678']
    )


class ProvidersEmployersEmployeesEmployeeIdContactsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message688]] = None
    field_embedded: Optional[List[FieldEmbeddedItem77]] = Field(None, alias='_embedded')


class Message689(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdContactsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message689]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmployeeIdContactsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdContactsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Address19(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country43] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox.  For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ProvidersEmployersEmployeesEmployeeIdContactsPostRequest(BaseModel):
    address: Optional[Address19] = None
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='Describes the relationship of the contact to the employee',
        examples=['Moeder'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the contact', examples=['Johanna Bakker']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the contact',
        examples=['Genoemd adres is een priveadres'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None, description='The phone number of the contact', examples=['013-12345678']
    )


class Message690(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Address20(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country43] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox.  For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Content155(BaseModel):
    address: Optional[Address20] = None
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='Describes the relationship of the contact to the employee',
        examples=['Moeder'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the contact', examples=['Johanna Bakker']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the contact',
        examples=['Genoemd adres is een priveadres'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None, description='The phone number of the contact', examples=['013-12345678']
    )


class ProvidersEmployersEmployeesEmployeeIdContactsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message690]] = None
    content: Optional[Content155] = None


class Message691(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdContactsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message691]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdContactsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdContactsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message692(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem78(BaseModel):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employee',
        examples=['41'],
    )


class ProvidersEmployersEmployeesEmployeeIdCustomfieldsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message692]] = None
    field_embedded: Optional[List[FieldEmbeddedItem78]] = Field(None, alias='_embedded')


class Message693(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdCustomfieldsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message693]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmployeeIdCustomfieldsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdCustomfieldsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdCustomfieldsPostRequest(BaseModel):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employee',
        examples=['41'],
    )


class Message694(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content156(BaseModel):
    customField: Optional[CustomField] = Field(
        None,
        description='The custom field as defined at the employer-level.  The value can only be set in the POST (it cannot be changed with a PUT).\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[constr(max_length=255)] = Field(
        None,
        description='The value for the custom field for the employee',
        examples=['41'],
    )


class ProvidersEmployersEmployeesEmployeeIdCustomfieldsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message694]] = None
    content: Optional[Content156] = None


class Message695(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdCustomfieldsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message695]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdCustomfieldsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdCustomfieldsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message696(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FurtherIndication32(BaseModel):
    code: Optional[str] = Field(None, examples=['WO'])
    description: Optional[str] = Field(None, examples=['Wetenschappelijk'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class FieldEmbeddedItem79(BaseModel):
    educationLevel: Optional[EducationLevel] = Field(
        None, description='Indicates the level of the education.'
    )
    employeeCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employee\n',
        examples=[150],
    )
    employerCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employer\n',
        examples=[850],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    endOfValidityDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the diploma validity . The date is up to and including.',
        examples=['2023-12-31'],
    )
    furtherIndication: Optional[FurtherIndication32] = None
    hasDiploma: Optional[HasDiploma] = Field(
        None, description='Indicates whether the employee has graduated.'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    institute: Optional[Institute] = None
    name: Optional[constr(max_length=50)] = Field(
        None, description='Name of the education', examples=['HBO accountancy']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the education',
        examples=['Van de opleiding is alleen een certificaat verkregen'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this education starts.',
        examples=['2018-01-01'],
    )
    typeOfEducation: Optional[TypeOfEducation] = Field(
        None,
        description='The type of the education. `type of education` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    yearOfDiploma: Optional[conint(ge=1900, le=2099)] = Field(
        None, description='Year in which the diploma was aquired', examples=[1995]
    )


class ProvidersEmployersEmployeesEmployeeIdEducationsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message696]] = None
    field_embedded: Optional[List[FieldEmbeddedItem79]] = Field(None, alias='_embedded')


class Message697(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdEducationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message697]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmployeeIdEducationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdEducationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdEducationsPostRequest(BaseModel):
    educationLevel: Optional[EducationLevel] = Field(
        None, description='Indicates the level of the education.'
    )
    employeeCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employee\n',
        examples=[150],
    )
    employerCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employer\n',
        examples=[850],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    endOfValidityDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the diploma validity . The date is up to and including.',
        examples=['2023-12-31'],
    )
    furtherIndication: Optional[FurtherIndication32] = None
    hasDiploma: Optional[HasDiploma] = Field(
        None, description='Indicates whether the employee has graduated.'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    institute: Optional[Institute] = None
    name: Optional[constr(max_length=50)] = Field(
        None, description='Name of the education', examples=['HBO accountancy']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the education',
        examples=['Van de opleiding is alleen een certificaat verkregen'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this education starts.',
        examples=['2018-01-01'],
    )
    typeOfEducation: Optional[TypeOfEducation] = Field(
        None,
        description='The type of the education. `type of education` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    yearOfDiploma: Optional[conint(ge=1900, le=2099)] = Field(
        None, description='Year in which the diploma was aquired', examples=[1995]
    )


class Message698(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content157(BaseModel):
    educationLevel: Optional[EducationLevel] = Field(
        None, description='Indicates the level of the education.'
    )
    employeeCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employee\n',
        examples=[150],
    )
    employerCosts: Optional[confloat(ge=0.01)] = Field(
        None,
        description='The costs of the education for the employer\n',
        examples=[850],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    endOfValidityDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the diploma validity . The date is up to and including.',
        examples=['2023-12-31'],
    )
    furtherIndication: Optional[FurtherIndication32] = None
    hasDiploma: Optional[HasDiploma] = Field(
        None, description='Indicates whether the employee has graduated.'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    institute: Optional[Institute] = None
    name: Optional[constr(max_length=50)] = Field(
        None, description='Name of the education', examples=['HBO accountancy']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the education',
        examples=['Van de opleiding is alleen een certificaat verkregen'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this education starts.',
        examples=['2018-01-01'],
    )
    typeOfEducation: Optional[TypeOfEducation] = Field(
        None,
        description='The type of the education. `type of education` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    yearOfDiploma: Optional[conint(ge=1900, le=2099)] = Field(
        None, description='Year in which the diploma was aquired', examples=[1995]
    )


class ProvidersEmployersEmployeesEmployeeIdEducationsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message698]] = None
    content: Optional[Content157] = None


class Message699(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdEducationsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message699]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdEducationsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdEducationsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message700(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class EndOfEmploymentReasonTaxAuthorities4(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the reason for the end of the employment.',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the reason for the end of the employment.',
        examples=[
            'Beëindiging arbeidsovereenkomst met wederzijds goedvinden op initiatief van de werkgever.'
        ],
    )


class FieldEmbeddedItem80(BaseModel):
    employee: Optional[Employee] = None
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period. NL: Completeren/Berekenen uren\n',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer. NL: DatumOpzegging',
        examples=['2018-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerknemer',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerkgever',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties. NL: PeriodeOpzegTermijn',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end. NL: AanstellingTot',
        examples=['2019-01-01'],
    )
    commissionUntilDate1: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #1. NL: AanstellingTot1',
        examples=['2018-05-31'],
    )
    commissionUntilDate2: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #2. NL: AanstellingTot2',
        examples=['2018-05-31'],
    )
    commissionUntilDate3: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #3. NL: AanstellingTot3',
        examples=['2018-05-31'],
    )
    commissionUntilDate4: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #4. NL: AanstellingTot4',
        examples=['2018-05-31'],
    )
    commissionUntilDate5: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #5. NL: AanstellingTot5',
        examples=['2018-05-31'],
    )
    commissionUntilDate6: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #6. NL: AanstellingTot6',
        examples=['2018-05-31'],
    )
    deviatingCLAExternalParty: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for external parties . NL: CaoKlantgroepAfwijkend',
        examples=[2],
    )
    deviatingCLATaxReturn: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns. NL: CAOUWV',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. NL: EmailVerlofaanvraag',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level. NL: WerknemerProfielID\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    employmentCategoryType: Optional[EmploymentCategoryType] = Field(
        None,
        description='A selection of special pre defined employment-types for the employment.  NL: Type dienstverband',
    )
    employmentContractType: Optional[EmploymentContractType3] = Field(
        None,
        description='The type of employment applicable for the employment. NL: BasisDienstverband',
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None,
        description='A selection of pre defined durations for the employment. NL: SoortDienstverband',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends. NL: DatumUitDienst',
        examples=['2018-10-23'],
    )
    endOfEmploymentDueToIllness: Optional[bool] = Field(
        None,
        description='Indicates whether the reason for the termination of an employment is due to long-term illness. NL: ZiekUitDienst',
        examples=[False],
    )
    endOfEmploymentReason: Optional[EndOfEmploymentReason4] = Field(
        None,
        description="The reason for the end of the employment. NL: RedenEindeDienstverband\n\n__Note:__ as of 2020-01-01 `endOfEmploymentReasonTaxAuthorities` replaces this field as the main reason for the end of the employment. We say 'main reason' as in certain cases this field still has a purpose. \nPlease set this field to 8 (Others) unless one of the following integrations is used for this employment\n  * UPA-pensioenaangifte\n  * Cordares\n  * APG-pensioenaangifte\n  * Achmea",
    )
    endOfEmploymentReasonTaxAuthorities: Optional[
        EndOfEmploymentReasonTaxAuthorities4
    ] = Field(
        None,
        description='The reason for the end of the employment as specified by the Dutch Tax authorties. NL: RedenEindeDienstverbandAangifte\n\n__Note:__ This field replaces `endOfEmploymentReason` as of 2020-01-01. `endOfEmploymentReason` will remain as a field in the resource as several integration require this field still.',
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations. Standard-set means the standard set defined for the administration will be applied for this employment. NULL means no set will be defined for this employment (so no access to any components). NL : ExportsetID\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user.',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht). NL: CodeUitzondering',
    )
    exemptionPremiumWaiverMarginalLabour: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. waiver) on the premium marginal labour (vrijstelling marginale arbeid) applies for this employment. NL: PremieVrijstellingMarginaleArbeid',
        examples=[False],
    )
    exemptionWorkRelatedExpenseScheme: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. non-participation) on the work-related expense scheme (werkkostenregeling) applies for this employment. NL: WerkkostenRegelingUitsluiting',
        examples=[False],
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether a first-day notification (EersteDagsMelding) was created for the employment. Attention: this indication cannot be altered after an employment has been created. NL: EersteDagsMelding ',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation. NL: SoortOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company. NL: HistorischeDatumInDienst',
        examples=['2012-05-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment. NL: NummerInkomstenVerhouding',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None,
        description='An employee that wants to remain anonymous related to social security instances. NL: IsAnoniemeWerknemer\n',
        examples=[True],
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a director and major shareholder (Dutch: directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsDirecteurGrootAandeelhouder',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsFamilieVanEigenaar',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Werknemerverzekering. NL: IsGemoedsbezwaardWerknemerverzekering\n',
        examples=[True],
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Volksverzekering. NL: IsGemoedsbezwaardVolksverzekering\n',
        examples=[True],
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment. This field can be `null` in cases where it is unknown whether the employment is an on-call employment. NL: IsOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsVorigeEigenaar',
        examples=[False],
    )
    linkedEmployment: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment. NL: NaamLoonstrook',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration3] = Field(
        None,
        description='Id of the non-payroll administration. This field cannot simultaneously have a value with payrollAdministration (only one can have a value at a time)\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment. NL: Deelname55Plus',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration3] = Field(
        None,
        description='Id of the payroll administration. This field cannot simultaneously have a value with nonPayrollAdministration (only one can have a value at a time)\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    payrollId: Optional[int] = Field(
        None,
        description='The payrolling number for this employment of the employee. Used by the payroll engine. This number is automatically generated and cannot be changed by the user. NL: PersoneelsnummerVerloning',
        examples=[2],
    )
    periodPayGradeAdjustment: Optional[conint(ge=1, le=52)] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’. NL: PeriodeSalarisPeriodiek',
        examples=[2],
    )
    professionCode: Optional[conint(ge=1, le=999)] = Field(
        None,
        description='A code field for a profession. This field only applies in case of a specific CLA (Bouw / Infra). Please leave empty if not applicable. NL: BeroepUWV',
        examples=[4],
    )
    sendToExternalParty: Optional[SendToExternalParty] = Field(
        None,
        description='Indicates whether payroll information of this employment is sent to external pension funds. Attention: this indication ONLY applies regarding the information to pension funds. If NULL then setting according to regulation is leading. NL: AanleveringExternePartij',
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment. NL: SalarisschaalSignaleren',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None,
        description='Indicates the special income ratio. NL: SpecialeInkomstenVerhouding',
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month. NL: AanvangOpzegtermijn',
        examples=['2018-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts. NL: DatumInDienst',
        examples=['2018-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. NL: Startdatum onbepaalde tijd This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    temporaryTaxExemption: Optional[TemporaryTaxExemption] = Field(
        None,
        description='Indicates whether there a temporary tax exemption is to be applied for the employment. NL: TijdelijkeHeffingskorting',
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment. NL: SoortWerknemer',
    )
    typeOfParticipation: Optional[TypeOfParticipation3] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: AardDeelnemerschap',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s. NL: Vakantiebonnen',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: WaardeDeelnemerschap',
    )
    wachtgeldOldRegulation: Optional[bool] = Field(
        None,
        description='Indicates whether the (old) wachtgeld regulation is applicable for the employment. NL: WachtgeldOudeRegeling',
        examples=[False],
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Did the employment and employer make a written contract? NL: Schriftelijke overeenkomst',
        examples=[True],
    )


class ProvidersEmployersEmployeesEmployeeIdEmploymentsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message700]] = None
    field_embedded: Optional[List[FieldEmbeddedItem80]] = Field(None, alias='_embedded')


class Message701(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdEmploymentsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message701]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmployeeIdEmploymentsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdEmploymentsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class EmployeeData3(BaseModel):
    iban: Optional[constr(max_length=35)] = Field(
        None,
        description='International Bank Account Number. Only IBAN without spaces are accepted.',
        examples=['NL52ABNA0424968264'],
    )


class EmploymentContractType7(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Labor agreement'])


class NonPayrollAdministration7(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the administration', examples=['ABC accountants']
    )


class EmploymentData3(BaseModel):
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period.',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer.',
        examples=['2019-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties.',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end.',
        examples=['2019-01-01'],
    )
    deviatingCLATaxReturn: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns .',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests.',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user. ',
    )
    employmentContractType: Optional[EmploymentContractType7] = Field(
        None, description='The type of employment applicable for the employment.'
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None, description='A selection of pre defined durations for the employment.'
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user. ',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht)',
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether first-day notification (EersteDagsMelding) is applicable for the employment',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation.',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company.',
        examples=['2012-05-01'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None, description='Indicates whether employee is anonymous ', examples=[True]
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classiefied as a director and major shareholder (Dutch --> directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Werknemerverzekering', examples=[True]
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Volksverzekering', examples=[True]
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment.',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration7] = Field(
        None,
        description='An administration that can not be used for payrolling. This field can not have a value at the same time as `payrollAdministration`\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration3] = Field(
        None,
        description='An administration used for payrolling. This field can not have a value at the same time as `nonPayrollAdministration`\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    periodPayGradeAdjustment: Optional[int] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’.',
        examples=[2],
    )
    professionCode: Optional[int] = Field(
        None, description='A code field for a profession.', examples=[4]
    )
    sendMdvNotification: Optional[bool] = Field(
        None,
        description='Indicate if a Mdv (melding dienstverband) should be send.',
        examples=[True],
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None, description='Indicates the special income ratio'
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month.',
        examples=['2019-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2019-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment.',
    )
    typeOfParticipation: Optional[TypeOfParticipation3] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s.',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Dit the employment and employer make a written contract?',
        examples=[True],
    )


class FiscalData3(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=1000000000.0)] = Field(
        None, description='The fiscal annual salary', examples=[60000]
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting)',
        examples=[False],
    )
    applyStudentDeduction: Optional[bool] = Field(
        None, description='Apply the "Scholierenregeling"', examples=[False]
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[float] = Field(
        None,
        description='Indicates a deviating payroll tax percentage is to be applied',
        examples=[27.45],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description='Indicates if there is a deviating payroll tax table is applicable (green vs white table)',
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )


class Department9(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Verkoop'])
    key: Optional[UUID] = Field(None, examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'])


class DistributionUnit16(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Sales'])
    key: Optional[UUID] = Field(None, examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'])


class Function9(BaseModel):
    description: Optional[str] = Field(None, examples=['Directeur'])
    group: Optional[str] = Field(None, examples=['internal'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class OrganizationalEntityData3(BaseModel):
    department: Optional[Department9] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[str] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[str] = Field(
        None,
        description='The deviating functiongroup description of the employment.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit16] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center. \n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user. \n',
    )
    function: Optional[Function9] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    internalTelephoneExtensionNumber: Optional[str] = Field(
        None,
        description='The phone extention number for the employment.',
        examples=['0133031600'],
    )
    placeOfEmployment: Optional[str] = Field(
        None,
        description='The place of employment (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )


class DeviatingPremiumGroup9(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['(12) Metaal- en technische bedrijfstakken']
    )


class OtherPayrollVariablesData3(BaseModel):
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup9] = Field(
        None,
        description='Indicates what deviating premie sector fonds should apply for the employment. Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )


class SocialSecurityData3(BaseModel):
    healthCareInsuranceActType: Optional[HealthCareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[False],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[False],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[False],
    )


class WageData3(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected. \n',
        examples=[True],
    )
    grossWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='The gross wage for the employee\n', examples=[23]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    netWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='Net wage for the employment\n'
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description='A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee"s level, rank or status within the employer"s organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )


class CalculateUsingWorkPattern9(BaseModel):
    daysDailyRate: Optional[bool] = Field(
        None,
        description='Indicates whether the number of days of dailyrate should be calculated based on the workpattern. The number of days are normally calculated by the working hours.       ',
        examples=[False],
    )
    deviatingDaysAndHours: Optional[bool] = Field(
        None,
        description='Indication whether  the deviating hours per week and deviating SV-days per period are to be automatically calculated based on the workpattern. Please note (!) that any values in the deviatingHoursPerWeek and deviatingSvDaysPerPeriod fields (of this workingHours record) will be overwritten based on this calculation if true (and endDate=NULL)!',
        examples=[False],
    )
    hoursBrokenPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern in broken periods. These are periods of in or out of service.',
        examples=[False],
    )
    hoursPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern for regular periods.         ',
        examples=[False],
    )
    leaveHours: Optional[bool] = Field(
        None,
        description='Indicates whether then leave balances (verlof) are to be calculated based on the workpattern.',
        examples=[True],
    )


class FlexibleHoursContract9(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[constr(max_length=50)] = Field(None, examples=['n.v.t.'])


class Shift17(BaseModel):
    bonusPercentage: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift. ',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None, description='The number for the shift. ', examples=[1]
    )


class WorkPattern9(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class WorkingHoursData3(BaseModel):
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100',
        examples=[37.5],
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern9] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object).',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='Fulltime hours are normally based as defined by the shift, this optional field is used to register a deviating value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[confloat(ge=1.0, le=23.0)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value. ',
        examples=[32],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract9] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.  ',
        examples=[True],
    )
    shift: Optional[Shift17] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    workPattern: Optional[WorkPattern9] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class ProvidersEmployersEmployeesEmployeeIdEmploymentsPostRequest(BaseModel):
    employeeData: Optional[EmployeeData3] = None
    employmentData: Optional[EmploymentData3] = None
    fiscalData: Optional[FiscalData3] = None
    organizationalEntityData: Optional[OrganizationalEntityData3] = None
    otherPayrollVariablesData: Optional[OtherPayrollVariablesData3] = None
    socialSecurityData: Optional[SocialSecurityData3] = None
    wageData: Optional[WageData3] = None
    workingHoursData: Optional[WorkingHoursData3] = None


class Message702(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmployeeIdEmploymentsPostResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message702]] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message703(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdEmploymentsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message703]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdEmploymentsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdEmploymentsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message704(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem81(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersEmployeesEmployeeIdNotesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message704]] = None
    field_embedded: Optional[List[FieldEmbeddedItem81]] = Field(None, alias='_embedded')


class Message705(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdNotesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message705]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmployeeIdNotesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdNotesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdNotesPostRequest(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class Message706(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content158(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersEmployeesEmployeeIdNotesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message706]] = None
    content: Optional[Content158] = None


class Message707(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdNotesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message707]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdNotesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdNotesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message708(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Classification(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the occupational disability classification. Possible values can be acquired via the metadata endpoint.\n',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='Description of the occupational disability classification.\n',
        examples=['15 - 24'],
    )


class FieldEmbeddedItem82(BaseModel):
    classification: Optional[Classification] = Field(
        None,
        description='The occupational disability classification in the form of a percentage range.',
    )
    endDate: Optional[date_aliased] = Field(
        None, description='end date', examples=['2018-01-21']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isExWAO: Optional[bool] = Field(
        None,
        description='Indicates whether the employee has received WAO payments before.',
        examples=[True],
    )
    isOccupationallyDisabled: Optional[bool] = Field(
        None,
        description='Indicates whether the employee is incapacitated.',
        examples=[False],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The startdate of the record\n\nA (broken chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2017-05-21'],
    )


class ProvidersEmployersEmployeesEmployeeIdOccupationaldisabilitiesGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message708]] = None
    field_embedded: Optional[List[FieldEmbeddedItem82]] = Field(None, alias='_embedded')


class Message709(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdOccupationaldisabilitiesGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message709]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmployeeIdOccupationaldisabilitiesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdOccupationaldisabilitiesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message710(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem83(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    endDate: Optional[date_aliased] = Field(
        None, description='end date', examples=['1995-05-21']
    )
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='startdate', examples=['1995-05-21']
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')
    waoClassification: Optional[WaoClassification] = Field(
        None,
        description='The occupational disability classification in the form of a percentage range.',
    )


class ProvidersEmployersEmployeesEmployeeIdPartnersGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message710]] = None
    field_embedded: Optional[List[FieldEmbeddedItem83]] = Field(None, alias='_embedded')


class Message711(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdPartnersGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message711]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployeesEmployeeIdPartnersGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdPartnersGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdPartnersPostRequest(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    endDate: Optional[date_aliased] = Field(
        None, description='end date', examples=['1995-05-21']
    )
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='startdate', examples=['1995-05-21']
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')
    waoClassification: Optional[WaoClassification] = Field(
        None,
        description='The occupational disability classification in the form of a percentage range.',
    )


class Message712(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content159(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    endDate: Optional[date_aliased] = Field(
        None, description='end date', examples=['1995-05-21']
    )
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='startdate', examples=['1995-05-21']
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')
    waoClassification: Optional[WaoClassification] = Field(
        None,
        description='The occupational disability classification in the form of a percentage range.',
    )


class ProvidersEmployersEmployeesEmployeeIdPartnersPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message712]] = None
    content: Optional[Content159] = None


class Message713(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdPartnersPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message713]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdPartnersPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdPartnersPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdPhotoDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message713]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdPhotoDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message713]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdPhotoDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdPhotoDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdPhotoGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdPhotoGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdPhotoPostRequest(BaseModel):
    data: Optional[str] = Field(
        None, description='base64 encoded document file.', examples=['YQ==']
    )
    mimeType: Optional[str] = Field(
        None, description='The mimetype of the data.', examples=['image/jpeg']
    )


class ProvidersEmployersEmployeesEmployeeIdPhotoPostResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdPhotoPostResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdPhotoVersionGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdPhotoVersionGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdRevokeEmployeeSelfServiceAccessPatchRequest(
    BaseModel
):
    revokeEmployeeSelfServiceAccessOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the Employees access to ESS (werknemer.loket) will be automatically revoked.\n',
        examples=['2018-10-23'],
    )


class Message716(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployeesEmployeeIdRevokeEmployeeSelfServiceAccessPatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message716]] = None
    content: Optional[Dict[str, Any]] = None


class Message717(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdRevokeEmployeeSelfServiceAccessPatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message717]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdRevokeEmployeeSelfServiceAccessPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdRevokeEmployeeSelfServiceAccessPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployeesEmployeeIdRevokeEmployeeSelfServiceAccessPatchResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message717]] = None
    version: Optional[Version] = None


class Message719(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee4(BaseModel):
    emailAddress: Optional[constr(max_length=255)] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within an employer.',
        examples=[156],
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee', examples=['Bergen']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the employee', examples=['van']
    )


class Status5(Enum):
    HasAccessToClient = 'HasAccessToClient'
    NoAccessToClient = 'NoAccessToClient'
    UserIsBlocked = 'UserIsBlocked'
    AccessToClientIsBlocked = 'AccessToClientIsBlocked'
    InvitePending = 'InvitePending'
    InviteFailed = 'InviteFailed'
    InviteCancelled = 'InviteCancelled'
    InviteExpired = 'InviteExpired'


class Content160(BaseModel):
    employee: Optional[Employee4] = None
    hasTwoFactorAuthentication: Optional[bool] = Field(
        None,
        description='Does the employee have two factor authentication enabled',
        examples=[False],
    )
    status: Optional[Status5] = Field(None, description='Description of the status')


class ProvidersEmployersEmployeesEmployeeIdSelfserviceGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message719]] = None
    content: Optional[Content160] = None


class Message720(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployeesEmployeeIdSelfserviceGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message720]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployeesEmployeeIdSelfserviceGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployeesEmployeeIdSelfserviceGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message721(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content161(BaseModel):
    description: Optional[constr(max_length=50)] = Field(None, examples=['Directeur'])
    group: Optional[constr(max_length=5)] = Field(None, examples=['Var'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID).\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersFunctionsFunctionIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message721]] = None
    content: Optional[Content161] = None


class Message722(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersFunctionsFunctionIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message722]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersFunctionsFunctionIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersFunctionsFunctionIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersFunctionsFunctionIdPutRequest(BaseModel):
    description: Optional[constr(max_length=50)] = Field(None, examples=['Directeur'])
    group: Optional[constr(max_length=5)] = Field(None, examples=['Var'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID).\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message723(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersFunctionsFunctionIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message723]] = None
    content: Optional[Content161] = None


class Message724(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersFunctionsFunctionIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message724]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersFunctionsFunctionIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersFunctionsFunctionIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersFunctionsFunctionIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message724]] = None
    version: Optional[Version] = None


class Message726(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem84(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedVersionNumber: Optional[int] = Field(
        None,
        description='The version number reflects the latest version of all predefined underlying tables of this employer/employment.',
        examples=[70429274999853],
    )


class ProvidersEmployersLastmodifiedversionnumbersGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message726]] = None
    field_embedded: Optional[List[FieldEmbeddedItem84]] = Field(None, alias='_embedded')


class Message727(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLastmodifiedversionnumbersGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message727]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersLastmodifiedversionnumbersGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLastmodifiedversionnumbersGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message727]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message727]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message730(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class From(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of age to be applicable for the additional leave',
        examples=[0],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description="the employee's minimal age to be applicable for the additional leave",
        examples=[40],
    )


class LeaveEntitlement(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.\n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.\n              \n\nEither excessLeaveToStatutory or wtr must have a value                ',
        examples=[40],
    )


class UpToAndIncluding(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of age to be applicable for the additional leave',
        examples=[11],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description="the employee's minimal age to be applicable for the additional leave",
        examples=[50],
    )


class Content163(BaseModel):
    from_: Optional[From] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement] = None
    upToAndIncluding: Optional[UpToAndIncluding] = None


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message730]] = None
    content: Optional[Content163] = None


class Message731(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message731]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdPutRequest(BaseModel):
    from_: Optional[From] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement] = None
    upToAndIncluding: Optional[UpToAndIncluding] = None


class Message732(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content164(BaseModel):
    from_: Optional[From] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement] = None
    upToAndIncluding: Optional[UpToAndIncluding] = None


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message732]] = None
    content: Optional[Content164] = None


class Message733(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message733]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesAgebasedleaveAgeBasedLeaveIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message733]] = None
    version: Optional[Version] = None


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message733]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message733]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message737(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class LeaveEntitlement3(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.\n              \n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.\n              \n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )


class Content165(BaseModel):
    fromWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the from wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement3] = None
    upToAndIncludingWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the up to and including wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message737]] = None
    content: Optional[Content165] = None


class Message738(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message738]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdPutRequest(
    BaseModel
):
    fromWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the from wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement3] = None
    upToAndIncludingWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the up to and including wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )


class Message739(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content166(BaseModel):
    fromWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the from wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement3] = None
    upToAndIncludingWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the up to and including wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message739]] = None
    content: Optional[Content166] = None


class Message740(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message740]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesWagebasedleaveWageBasedLeaveIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message740]] = None
    version: Optional[Version] = None


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message740]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message740]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message744(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class From3(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of service to be applicable for the additional leave',
        examples=[0],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description='the number of years of service to be applicable for the additional leave',
        examples=[40],
    )


class LeaveEntitlement6(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.\n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.\n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )


class UpToAndIncluding3(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of service to be applicable for the additional leave',
        examples=[0],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description='the number of years of service to be applicable for the additional leave',
        examples=[40],
    )


class Content167(BaseModel):
    from_: Optional[From3] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement6] = None
    upToAndIncluding: Optional[UpToAndIncluding3] = None


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message744]] = None
    content: Optional[Content167] = None


class Message745(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message745]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdPutRequest(
    BaseModel
):
    from_: Optional[From3] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement6] = None
    upToAndIncluding: Optional[UpToAndIncluding3] = None


class Message746(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content168(BaseModel):
    from_: Optional[From3] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement6] = None
    upToAndIncluding: Optional[UpToAndIncluding3] = None


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message746]] = None
    content: Optional[Content168] = None


class Message747(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message747]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesYearsofservicebasedleaveYearsOfServiceBasedLeaveIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message747]] = None
    version: Optional[Version] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message747]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message747]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message751(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AccrualType(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the `accrualType`\n', examples=[1]
    )
    value: Optional[str] = Field(
        None, description='The description for the `accrualType`\n', examples=['Jaar']
    )


class AllocationType(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the `additionalLeaveAllocationType`\n',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description for the `additionalLeaveAllocationType`\n',
        examples=['Boek alleen hoogste waarde'],
    )


class Month(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the `referenceMonth`\n', examples=[1]
    )
    value: Optional[str] = Field(
        None,
        description='The description for the `referenceMonth`\n',
        examples=['Januari'],
    )


class ReferenceDate1(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the first reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the first reference date '
    )


class ReferenceDate2(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the second reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the second reference date '
    )


class AdditionalLeave(BaseModel):
    allocationType: Optional[AllocationType] = Field(
        None,
        description='Indicates how additional leave is to be assigned to the employments (linked to this leave policy).',
    )
    referenceDate1: Optional[ReferenceDate1] = Field(
        None,
        description='If `referenceDate2` has a value only the last 6 months of the year are allowed as values',
    )
    referenceDate2: Optional[ReferenceDate2] = Field(
        None, description='Only use if applicable'
    )


class LeaveEntitlement9(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.',
        examples=[40],
    )
    statutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The statutory leave (wetelijk verlof) linked employments are entitled to for a full time contract.',
        examples=[160],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.',
        examples=[40],
    )


class LeavePattern(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class LeaveRequest(BaseModel):
    applyLeaveSchedule: Optional[bool] = Field(
        None,
        description='Indicates whether the leave schedule can be enterd and is so it is used when calculating the sugested leave hours for a leave request',
        examples=[False],
    )
    leavePattern: Optional[LeavePattern] = Field(
        None,
        description='The applicable leave pattern for a period of 2 weeks can be stored in this object. Each field contains the number of leave(work) hours for that day in the 2-week period. <br /> Please note that the `leavePattern` should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )
    useHolidaysInCalculation: Optional[bool] = Field(
        None,
        description='Indicates whether the calculating for sugested leave hours for a leave request takes into account holidays. Is set to true no leave hours are calculated for "The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company."\n\neg. When requesting leave for the 24th and 25th of december (25th being a national holiday) the calculation (8 hours a day) will return 8 when `useHolidaysInCalculation` is true and 16 when `useHolidaysInCalculation` is false',
        examples=[False],
    )


class LeaveUnitType8(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the unit type\n', examples=[1]
    )
    value: Optional[str] = Field(
        None, description='The description for the leave unit type\n', examples=['Uren']
    )


class RoundTo(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the roundTo\n', examples=[1]
    )
    value: Optional[str] = Field(
        None, description='The description for the roundTo\n', examples=['0.01']
    )


class RoundingMethod(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the roundingMethod\n', examples=[1]
    )
    value: Optional[str] = Field(
        None,
        description='The description for the roundingMethod\n',
        examples=['Logical'],
    )


class Content169(BaseModel):
    accrualType: Optional[AccrualType] = Field(
        None, description='Indicates how leave is accrued (yearly, monthly or hourly)  '
    )
    additionalLeave: Optional[AdditionalLeave] = None
    dayOfTheMonthToPerformAutomaticLeaveCalculationOn: Optional[conint(ge=1, le=31)] = (
        Field(
            None,
            description='They day of the month on which the automatic accrual of (yearly or monthly) leave is performed. The yearly calculation is repeated every month to encompase any changes made that have affect on the past.\nIf for example 31 is chosen and a specific month does not have that day the logic will pick the first available date of said month.          ',
            examples=[12],
        )
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement9] = None
    leaveRequest: Optional[LeaveRequest] = None
    leaveUnitType: Optional[LeaveUnitType8] = Field(
        None,
        description='Indicates what the unit type (hours or days) is. Employments linked to this leave policy use this leaveUnitType for their leave.',
    )
    name: Optional[constr(min_length=1, max_length=50)] = Field(
        None, description='The name of the leave policy', examples=['Normal leave']
    )
    payoutLeaveImmediately: Optional[bool] = Field(
        None,
        description='If leave `accrualType` is set to based on hours worked (uren) then this field allows for the leave hours to be paid out directly instead of being accrued.',
        examples=[False],
    )
    roundTo: Optional[RoundTo] = Field(
        None,
        description='Indicates to how many digits after the decimal point to round the numbers',
    )
    roundingMethod: Optional[RoundingMethod] = Field(
        None, description='Indicates how to round the numbers '
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message751]] = None
    content: Optional[Content169] = None


class Message752(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message752]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ReferenceDate11(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the first reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the first reference date '
    )


class ReferenceDate21(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the second reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the second reference date '
    )


class AdditionalLeave1(BaseModel):
    allocationType: Optional[AllocationType] = Field(
        None,
        description='Indicates how additional leave is to be assigned to the employments (linked to this leave policy).',
    )
    referenceDate1: Optional[ReferenceDate11] = Field(
        None,
        description='If `referenceDate2` has a value only the last 6 months of the year are allowed as values',
    )
    referenceDate2: Optional[ReferenceDate21] = Field(
        None, description='Only use if applicable'
    )


class LeavePattern1(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class LeaveRequest1(BaseModel):
    applyLeaveSchedule: Optional[bool] = Field(
        None,
        description='Indicates whether the leave schedule can be enterd and is so it is used when calculating the sugested leave hours for a leave request',
        examples=[False],
    )
    leavePattern: Optional[LeavePattern1] = Field(
        None,
        description='The applicable leave pattern for a period of 2 weeks can be stored in this object. Each field contains the number of leave(work) hours for that day in the 2-week period. <br /> Please note that the `leavePattern` should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )
    useHolidaysInCalculation: Optional[bool] = Field(
        None,
        description='Indicates whether the calculating for sugested leave hours for a leave request takes into account holidays. Is set to true no leave hours are calculated for "The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company."\n\neg. When requesting leave for the 24th and 25th of december (25th being a national holiday) the calculation (8 hours a day) will return 8 when `useHolidaysInCalculation` is true and 16 when `useHolidaysInCalculation` is false',
        examples=[False],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdPutRequest(BaseModel):
    accrualType: Optional[AccrualType] = Field(
        None, description='Indicates how leave is accrued (yearly, monthly or hourly)  '
    )
    additionalLeave: Optional[AdditionalLeave1] = None
    dayOfTheMonthToPerformAutomaticLeaveCalculationOn: Optional[conint(ge=1, le=31)] = (
        Field(
            None,
            description='They day of the month on which the automatic accrual of (yearly or monthly) leave is performed. The yearly calculation is repeated every month to encompase any changes made that have affect on the past.\nIf for example 31 is chosen and a specific month does not have that day the logic will pick the first available date of said month.          ',
            examples=[12],
        )
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement9] = None
    leaveRequest: Optional[LeaveRequest1] = None
    leaveUnitType: Optional[LeaveUnitType8] = Field(
        None,
        description='Indicates what the unit type (hours or days) is. Employments linked to this leave policy use this leaveUnitType for their leave.',
    )
    name: Optional[constr(min_length=1, max_length=50)] = Field(
        None, description='The name of the leave policy', examples=['Normal leave']
    )
    payoutLeaveImmediately: Optional[bool] = Field(
        None,
        description='If leave `accrualType` is set to based on hours worked (uren) then this field allows for the leave hours to be paid out directly instead of being accrued.',
        examples=[False],
    )
    roundTo: Optional[RoundTo] = Field(
        None,
        description='Indicates to how many digits after the decimal point to round the numbers',
    )
    roundingMethod: Optional[RoundingMethod] = Field(
        None, description='Indicates how to round the numbers '
    )


class Message753(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ReferenceDate12(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the first reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the first reference date '
    )


class ReferenceDate22(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the second reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the second reference date '
    )


class AdditionalLeave2(BaseModel):
    allocationType: Optional[AllocationType] = Field(
        None,
        description='Indicates how additional leave is to be assigned to the employments (linked to this leave policy).',
    )
    referenceDate1: Optional[ReferenceDate12] = Field(
        None,
        description='If `referenceDate2` has a value only the last 6 months of the year are allowed as values',
    )
    referenceDate2: Optional[ReferenceDate22] = Field(
        None, description='Only use if applicable'
    )


class LeavePattern2(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class LeaveRequest2(BaseModel):
    applyLeaveSchedule: Optional[bool] = Field(
        None,
        description='Indicates whether the leave schedule can be enterd and is so it is used when calculating the sugested leave hours for a leave request',
        examples=[False],
    )
    leavePattern: Optional[LeavePattern2] = Field(
        None,
        description='The applicable leave pattern for a period of 2 weeks can be stored in this object. Each field contains the number of leave(work) hours for that day in the 2-week period. <br /> Please note that the `leavePattern` should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )
    useHolidaysInCalculation: Optional[bool] = Field(
        None,
        description='Indicates whether the calculating for sugested leave hours for a leave request takes into account holidays. Is set to true no leave hours are calculated for "The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company."\n\neg. When requesting leave for the 24th and 25th of december (25th being a national holiday) the calculation (8 hours a day) will return 8 when `useHolidaysInCalculation` is true and 16 when `useHolidaysInCalculation` is false',
        examples=[False],
    )


class Content170(BaseModel):
    accrualType: Optional[AccrualType] = Field(
        None, description='Indicates how leave is accrued (yearly, monthly or hourly)  '
    )
    additionalLeave: Optional[AdditionalLeave2] = None
    dayOfTheMonthToPerformAutomaticLeaveCalculationOn: Optional[conint(ge=1, le=31)] = (
        Field(
            None,
            description='They day of the month on which the automatic accrual of (yearly or monthly) leave is performed. The yearly calculation is repeated every month to encompase any changes made that have affect on the past.\nIf for example 31 is chosen and a specific month does not have that day the logic will pick the first available date of said month.          ',
            examples=[12],
        )
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement9] = None
    leaveRequest: Optional[LeaveRequest2] = None
    leaveUnitType: Optional[LeaveUnitType8] = Field(
        None,
        description='Indicates what the unit type (hours or days) is. Employments linked to this leave policy use this leaveUnitType for their leave.',
    )
    name: Optional[constr(min_length=1, max_length=50)] = Field(
        None, description='The name of the leave policy', examples=['Normal leave']
    )
    payoutLeaveImmediately: Optional[bool] = Field(
        None,
        description='If leave `accrualType` is set to based on hours worked (uren) then this field allows for the leave hours to be paid out directly instead of being accrued.',
        examples=[False],
    )
    roundTo: Optional[RoundTo] = Field(
        None,
        description='Indicates to how many digits after the decimal point to round the numbers',
    )
    roundingMethod: Optional[RoundingMethod] = Field(
        None, description='Indicates how to round the numbers '
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message753]] = None
    content: Optional[Content170] = None


class Message754(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message754]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message754]] = None
    version: Optional[Version] = None


class Message756(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class From6(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of age to be applicable for the additional leave',
        examples=[0],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description="the employee's minimal age to be applicable for the additional leave",
        examples=[40],
    )


class LeaveEntitlement12(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.\n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.\n              \n\nEither excessLeaveToStatutory or wtr must have a value                ',
        examples=[40],
    )


class UpToAndIncluding6(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of age to be applicable for the additional leave',
        examples=[11],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description="the employee's minimal age to be applicable for the additional leave",
        examples=[50],
    )


class FieldEmbeddedItem85(BaseModel):
    from_: Optional[From6] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement12] = None
    upToAndIncluding: Optional[UpToAndIncluding6] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdAgebasedleaveGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message756]] = None
    field_embedded: Optional[List[FieldEmbeddedItem85]] = Field(None, alias='_embedded')


class Message757(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdAgebasedleaveGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message757]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersLeavePoliciesLeavePolicyIdAgebasedleaveGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdAgebasedleaveGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdAgebasedleavePostRequest(BaseModel):
    from_: Optional[From6] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement12] = None
    upToAndIncluding: Optional[UpToAndIncluding6] = None


class Message758(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content171(BaseModel):
    from_: Optional[From6] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement12] = None
    upToAndIncluding: Optional[UpToAndIncluding6] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdAgebasedleavePostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message758]] = None
    content: Optional[Content171] = None


class Message759(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdAgebasedleavePostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message759]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdAgebasedleavePostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdAgebasedleavePostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message760(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class LeaveEntitlement15(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.\n              \n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.\n              \n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )


class FieldEmbeddedItem86(BaseModel):
    fromWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the from wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement15] = None
    upToAndIncludingWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the up to and including wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdWagebasedleaveGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message760]] = None
    field_embedded: Optional[List[FieldEmbeddedItem86]] = Field(None, alias='_embedded')


class Message761(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdWagebasedleaveGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message761]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersLeavePoliciesLeavePolicyIdWagebasedleaveGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdWagebasedleaveGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdWagebasedleavePostRequest(BaseModel):
    fromWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the from wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement15] = None
    upToAndIncludingWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the up to and including wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )


class Message762(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content172(BaseModel):
    fromWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the from wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement15] = None
    upToAndIncludingWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the up to and including wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdWagebasedleavePostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message762]] = None
    content: Optional[Content172] = None


class Message763(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdWagebasedleavePostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message763]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdWagebasedleavePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdWagebasedleavePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message764(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class From9(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of service to be applicable for the additional leave',
        examples=[0],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description='the number of years of service to be applicable for the additional leave',
        examples=[40],
    )


class LeaveEntitlement18(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.\n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.\n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )


class UpToAndIncluding9(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of service to be applicable for the additional leave',
        examples=[0],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description='the number of years of service to be applicable for the additional leave',
        examples=[40],
    )


class FieldEmbeddedItem87(BaseModel):
    from_: Optional[From9] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement18] = None
    upToAndIncluding: Optional[UpToAndIncluding9] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdYearsofservicebasedleaveGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message764]] = None
    field_embedded: Optional[List[FieldEmbeddedItem87]] = Field(None, alias='_embedded')


class Message765(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdYearsofservicebasedleaveGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message765]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersLeavePoliciesLeavePolicyIdYearsofservicebasedleaveGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdYearsofservicebasedleaveGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdYearsofservicebasedleavePostRequest(
    BaseModel
):
    from_: Optional[From9] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement18] = None
    upToAndIncluding: Optional[UpToAndIncluding9] = None


class Message766(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content173(BaseModel):
    from_: Optional[From9] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement18] = None
    upToAndIncluding: Optional[UpToAndIncluding9] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdYearsofservicebasedleavePostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message766]] = None
    content: Optional[Content173] = None


class Message767(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdYearsofservicebasedleavePostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message767]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavePoliciesLeavePolicyIdYearsofservicebasedleavePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavePoliciesLeavePolicyIdYearsofservicebasedleavePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message768(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee5(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within a employer.',
        examples=[156],
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None,
        description='The last name of the partner of the employee',
        examples=['Wiel'],
    )
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the employee', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix of the partner of the employee',
        examples=['van de'],
    )


class FieldEmbeddedItem88(BaseModel):
    employee: Optional[Employee5] = None
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment ends.',
        examples=['2021-12-31'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[1],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2020-01-01'],
    )


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message768]] = None
    field_embedded: Optional[List[FieldEmbeddedItem88]] = Field(None, alias='_embedded')


class Message769(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message769]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Action7(Enum):
    link = 'link'
    unlink = 'unlink'


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsPatchRequestItem(
    BaseModel
):
    action: Action7 = Field(..., description='The action to perform.')
    id: UUID = Field(
        ...,
        description='The unique identifier (GUID/UUID) of the employment',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsPatchRequest(
    RootModel[
        List[ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsPatchRequestItem]
    ]
):
    root: List[ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsPatchRequestItem]


class Message770(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message770]] = None
    content: Optional[Dict[str, Any]] = None


class Message771(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message771]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersLeavepoliciesLeavePolicyIdEmploymentsPatchResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message771]] = None
    version: Optional[Version] = None


class Message773(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Address21(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Contact1(BaseModel):
    name: Optional[constr(max_length=50)] = Field(
        None,
        description='Name of the contact of the employer',
        examples=['Henk de Vries'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The general phone number of the employer',
        examples=['013-12345678'],
    )


class ContactInformation20(BaseModel):
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The telephone number of the employer',
        examples=['(088) 31 11150'],
    )


class ProviderSettings1(BaseModel):
    administrationNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='A free field that is most commonly used to store the Debtors Number the provider uses for the employer. This field is used as a key field in some of the existing SOAP webservices.',
        examples=['SR2'],
    )
    groupCode: Optional[int] = Field(
        None,
        description='The groupcode is used for grouping employers. It is used for filtering output and processes (only include employers in group 40 in this report).',
        examples=[40],
    )


class FieldEmbeddedItem89(BaseModel):
    address: Optional[Address21] = None
    branch: Optional[Branch] = None
    companyName: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )
    contact: Optional[Contact1] = None
    contactInformation: Optional[ContactInformation20] = None
    employerLogo: Optional[str] = Field(
        None,
        description='The location of the logo of the employer. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/providers/employers/{guid}/logo/{version}'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    providerLogo: Optional[str] = Field(
        None,
        description='This logo is displayed in the interface of loket.nl. if null no deviating logo is present and the normal provider logo should be used (aquire the URL to the logo via ../v2/providers)',
        examples=[
            'https://api.loket.nl/v2/providers/employers/{guid}/deviatingproviderlogo'
        ],
    )
    providerSettings: Optional[ProviderSettings1] = None


class ProvidersEmployersMinimizedGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message773]] = None
    field_embedded: Optional[List[FieldEmbeddedItem89]] = Field(None, alias='_embedded')


class Message774(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersMinimizedGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message774]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersMinimizedGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersMinimizedGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersNotesNoteIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message774]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersNotesNoteIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message774]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersNotesNoteIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersNotesNoteIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message777(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem90(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersNotesNoteIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message777]] = None
    field_embedded: Optional[List[FieldEmbeddedItem90]] = Field(None, alias='_embedded')


class Message778(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersNotesNoteIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message778]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersNotesNoteIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersNotesNoteIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersNotesNoteIdPutRequest(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class Message779(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content174(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersNotesNoteIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message779]] = None
    content: Optional[Content174] = None


class Message780(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersNotesNoteIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message780]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersNotesNoteIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersNotesNoteIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersNotesNoteIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message780]] = None
    version: Optional[Version] = None


class Action8(Enum):
    markAsRead = 'markAsRead'


class ProvidersEmployersNotificationsPatchRequestItem(BaseModel):
    action: Action8 = Field(
        ..., description='The action to perform on the notification'
    )
    id: UUID = Field(
        ...,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersNotificationsPatchRequest(
    RootModel[List[ProvidersEmployersNotificationsPatchRequestItem]]
):
    root: List[ProvidersEmployersNotificationsPatchRequestItem]


class Message782(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersNotificationsPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message782]] = None
    content: Optional[Dict[str, Any]] = None


class Message783(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersNotificationsPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message783]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersNotificationsPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersNotificationsPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message784(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee6(BaseModel):
    citizenServiceNumber: Optional[constr(min_length=9, max_length=9)] = Field(
        None,
        description='The social security number of the employee used in communication with the Dutch tax authorities. The number has to be a valid Dutch citizen service number (BSN).',
        examples=['042168588'],
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    gender: Optional[constr(max_length=1)] = Field(
        None, description='gender indication', examples=['M']
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )


class Employment(BaseModel):
    claExternalParty: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for external parties . NL: CaoKlantgroepAfwijkend',
        examples=[2],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends.',
        examples=['2018-10-23'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2018-01-01'],
    )


class PayrollAdministration8(BaseModel):
    payrollTaxesNumber: Optional[constr(min_length=12, max_length=12)] = Field(
        None,
        description='The payroll tax number, loonheffingennummer, is the number that is used for the Loonaangifte for the Belastingdienst.',
        examples=['111111110L46'],
    )


class FieldEmbeddedItem91(BaseModel):
    employee: Optional[Employee6] = None
    employment: Optional[Employment] = None
    payrollAdministration: Optional[PayrollAdministration8] = None


class ProvidersEmployersPayrollAdministrationsPayrollAdministrationIdMdvNotificationsPatchResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message784]] = None
    field_embedded: Optional[List[FieldEmbeddedItem91]] = Field(None, alias='_embedded')


class Message785(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrollAdministrationsPayrollAdministrationIdMdvNotificationsPatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message785]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrollAdministrationsPayrollAdministrationIdMdvNotificationsPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrollAdministrationsPayrollAdministrationIdMdvNotificationsPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message786(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ApgPensionDeclarationStatus(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[str] = Field(None, examples=['Pensioenaangifte aangemaakt'])


class ApprovedBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class CancelledBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class ExternalParty(BaseModel):
    key: Optional[int] = Field(None, examples=[13])
    value: Optional[str] = Field(None, examples=['PFZW (APG)'])


class MethodOfCreation(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Individueel'])


class PeriodType(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['month'])


class Period(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None, description='The end date of the period', examples=['2021-11-30']
    )
    periodId: Optional[int] = Field(
        None, description='The periodId of the payroll period.', examples=[202101]
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period for which the pension declaration was created. In case of a yearly tax return this value will be set to 0',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None, description='The start date of the period', examples=['2021-11-01']
    )
    periodType: Optional[PeriodType] = Field(
        None,
        description='Indicates the frequence of the process. Payrolling can be done on a montly, 4-weekly or weekly basis.',
    )
    year: Optional[int] = Field(
        None,
        description='The year of the period for which the pension declaration was created.',
        examples=[2017],
    )


class RemovedBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class RequestedBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class ResponseMessage(BaseModel):
    datetimeOfMessageReceipt: Optional[datetime] = Field(
        None,
        description='The date on which the original message was received by the external entity',
        examples=['2016-01-19'],
    )
    datetimeOfRegistration: Optional[datetime] = Field(
        None,
        description='The date on which the response message was registered in Loket',
        examples=['2016-01-19'],
    )
    description: Optional[str] = Field(
        None,
        description='The description of the response message',
        examples=['Bestand ontvangen'],
    )


class Content175(BaseModel):
    apgPensionDeclarationStatus: Optional[ApgPensionDeclarationStatus] = Field(
        None,
        description='The current status of the tax return\nPossible values:\n* Verzoek tot aanmaak pensioenaangifte (key = 1)\n* Fout bij aanmaken pensioenaangifte (key = 2)\n* Pensioenaangifte aangemaakt (key = 3)\n* Pensioenaangifte geannuleerd (key = 4)\n* Pensioenaangifte bevestigd (key = 5)\n* Pensioenaangifte verzonden (key = 6)\n* Pensioenaangifte verwijderd (key = 7)\n',
    )
    approvalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was approved by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    approvedBy: Optional[ApprovedBy] = None
    cancelledBy: Optional[CancelledBy] = None
    cancelledTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was Cancelled by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    creationTime: Optional[datetime] = Field(
        None,
        description='The time at which the pension message was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    customerGroupNumber: Optional[int] = Field(
        None,
        description='Pension declarations will alway be grouped by its customerGroupNumber (klantgroepnummer).',
    )
    externalParty: Optional[ExternalParty] = Field(
        None, description='External party (externe partij)'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    messageReference: Optional[str] = Field(
        None,
        description='The message reference (berichtkenmerk) to recognize the given declaration.\n',
        examples=['190'],
    )
    methodOfCreation: Optional[MethodOfCreation] = Field(
        None, description='Method by which the creation of the run was triggered.'
    )
    period: Optional[Period] = None
    removeTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was removed.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the  run was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    responseMessages: Optional[List[ResponseMessage]] = None
    sentTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was sent.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    withholdingAgentName: Optional[str] = Field(
        None,
        description='The withholding agent name (naam inhoudingsplichtige) for this return.\n',
        examples=['Ben-Hur BV Via Roma'],
    )


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message786]] = None
    content: Optional[Content175] = None


class Message787(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message787]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Action9(Enum):
    confirm = 'confirm'
    cancel = 'cancel'


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdPatchRequest(
    BaseModel
):
    action: Action9 = Field(
        ..., description='The action to perform on the apg pensiondeclaration'
    )


class Message788(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdPatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message788]] = None
    content: Optional[Dict[str, Any]] = None


class Message789(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdPatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message789]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdMessageGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message789]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdMessageGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdMessageGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdOverviewGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message789]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdOverviewGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsApgpensiondeclarationsApgPensionDeclarationIdOverviewGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message792(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class JournalRunStatus(BaseModel):
    key: Optional[int] = Field(
        None,
        description='Possible values for the payroll run status are;\n\n* 0\tStaat klaar voor journaliseren\n* 1\tGeen journaal resultaten\n* 2\tFout bij aanmaken\n* 3\tVerwijderd door gebruiker\n* 4\tJournaal gereed\n* 5\tWordt geëxporteerd\n* 6\tExporteren mislukt\n* 7\tJournaal geëxporteerd\n',
        examples=[4],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing the current status of the payroll run.',
        examples=['Journaal gereed'],
    )


class PayrollPeriod16(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period the record relates to',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll periode is part of a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the payroll period the record relates to',
        examples=[2017],
    )


class PayrollRun(BaseModel):
    payrollPeriod: Optional[PayrollPeriod16] = None
    payrollRunId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    sequenceNumberApproved: Optional[int] = Field(
        None,
        description='Ascending sequence number related to an approved payrol run. A payroll run may have more than one journal run. With this number the journal run may be linked to the specific payroll run. ',
        examples=[6],
    )


class Content176(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalRunStatus: Optional[JournalRunStatus] = None
    methodOfCreation: Optional[MethodOfCreation] = Field(
        None,
        description='Method by which the creation of the journal run was triggered.',
    )
    payrollRun: Optional[PayrollRun] = None
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='The time at which at which the journal run was finished processing',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removeTime: Optional[datetime] = Field(
        None,
        description='The time at which the journal run was removed.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    sequenceNumber: Optional[int] = Field(
        None,
        description='Ascending sequence number over ALL journal runs for the payroll administration.',
        examples=[8],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message792]] = None
    content: Optional[Content176] = None


class Message793(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message793]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Action10(Enum):
    MarkAsProcessed = 'MarkAsProcessed'
    MarkAsProcessingFailed = 'MarkAsProcessingFailed'


class Application(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Financieel pakket 1'])


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdPatchRequest(
    BaseModel
):
    action: Optional[Action10] = Field(
        None,
        description='The action to perform on the journal run\n* MarkAsProcessed  --> (from the loket.nl point of view) Indicates that the client succesfully processed the data (indicating that the results were imported in the financial application).\n* MarkAsProcessingFailed --> (from the loket.nl point of view) Indicates that the client was unable to process the results. Use the `message` field to communicate the error(s).',
    )
    application: Optional[Application] = Field(
        None, description='The application that downloaded and processed the results'
    )
    message: Optional[constr(max_length=255)] = Field(
        None, description='Message to be displayed to the loket.nl user'
    )


class Message794(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdPatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message794]] = None
    content: Optional[Dict[str, Any]] = None


class Message795(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdPatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message795]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdPatchResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message795]] = None
    version: Optional[Version] = None


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdDownloadPostRequest(
    BaseModel
):
    date: Optional[date_aliased] = Field(
        None, description='Date', examples=['2022-01-01']
    )
    includeCostCenter: Optional[bool] = Field(
        None,
        description='Indicates whether cost centers are included in the journal.',
        examples=[True],
    )
    includeCostUnit: Optional[bool] = Field(
        None,
        description='Indicates whether cost units are included in the journal.',
        examples=[False],
    )


class Message797(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content177(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='Date', examples=['2022-01-01']
    )
    includeCostCenter: Optional[bool] = Field(
        None,
        description='Indicates whether cost centers are included in the journal.',
        examples=[True],
    )
    includeCostUnit: Optional[bool] = Field(
        None,
        description='Indicates whether cost units are included in the journal.',
        examples=[False],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdDownloadPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message797]] = None
    content: Optional[Content177] = None


class Message798(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdDownloadPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message798]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdDownloadPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdDownloadPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdDownloadPostResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message798]] = None
    version: Optional[Version] = None


class Message800(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Error(BaseModel):
    key: Optional[int] = Field(None, description='The error code', examples=[4])
    value: Optional[str] = Field(
        None,
        description='The description of the error',
        examples=[
            'Geen verdeling gevonden voor de component, kostenplaats, kostendrager combinatie'
        ],
    )


class GeneralLedgerAccount(BaseModel):
    code: Optional[str] = Field(
        None,
        description='The general ledger accounting number (grootboekrekeningnummer)',
        examples=['4002020'],
    )
    description: Optional[str] = Field(
        None,
        description='Description for the general ledger accounting number.',
        examples=['Cars'],
    )
    key: Optional[int] = Field(
        None, description='Database id (unique per administration).', examples=[4]
    )


class PayrollComponent55(BaseModel):
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['KINDEROPV.BEL'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[286],
    )


class FieldEmbeddedItem92(BaseModel):
    PayrollEmployeeNumber: Optional[int] = Field(
        None,
        description='The number of the employment in relation to the payroll administration.',
        examples=[202],
    )
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The cost center on which the data for this entry will be booked for the ledger.\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The cost unit on which the data for this entry will be booked for the ledger.\n\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    error: Optional[Error] = None
    generalLedgerAccount: Optional[GeneralLedgerAccount] = Field(
        None,
        description='General ledger account number and description\n\n`generalLedgerAccount` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent55] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdErrorsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message800]] = None
    field_embedded: Optional[List[FieldEmbeddedItem92]] = Field(None, alias='_embedded')


class Message801(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdErrorsGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message801]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdErrorsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdErrorsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message802(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ExportStatus(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The status of the export (succesfull or failed)            \n',
        examples=[4],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing the current status of the payroll run.',
        examples=['Downloaded'],
    )


class ExportedBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class ExportedTo(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Finance Plus'])


class MethodOfExporting(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Download'])


class FieldEmbeddedItem93(BaseModel):
    exportStatus: Optional[ExportStatus] = Field(
        None, description='The status of the export'
    )
    exportedBy: Optional[ExportedBy] = None
    exportedOn: Optional[datetime] = Field(
        None,
        description='The time at which the export was started',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    exportedTo: Optional[ExportedTo] = Field(
        None,
        description='The (financial) application to which the journal results where send',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    methodOfExporting: Optional[MethodOfExporting] = Field(
        None,
        description='The ways by which the journal results where exported (download/API call)',
    )
    returendErrorMessage: Optional[constr(max_length=4000)] = Field(
        None,
        description='Incase the export (by means of an API) failed the returned errors are provided here.',
        examples=['Could not find cost center Sales'],
    )
    sequenceNumber: Optional[int] = Field(
        None,
        description='Ascending sequence number over ALL journal runs within a yearfor the payroll administration.',
        examples=[8],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdExportAuditTrailGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message802]] = None
    field_embedded: Optional[List[FieldEmbeddedItem93]] = Field(None, alias='_embedded')


class Message803(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdExportAuditTrailGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message803]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdExportAuditTrailGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdExportAuditTrailGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message804(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem94(BaseModel):
    costCenter: Optional[CostCenter] = Field(
        None,
        description='The cost center on which the data for this entry will be booked for the ledger.\n\n`costCenter` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    costUnit: Optional[CostUnit] = Field(
        None,
        description='The cost unit on which the data for this entry will be booked for the ledger.\n\n`costUnit` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    creditAmount: Optional[float] = Field(
        None, description='The credit amount for the ledger entry.\n', examples=[0]
    )
    debetAmount: Optional[float] = Field(
        None, description='The debet amount for the ledger entry.\n', examples=[500.87]
    )
    generalLedgerAccount: Optional[GeneralLedgerAccount] = Field(
        None,
        description='General ledger account number and description\n\n`generalLedgerAccount` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    payrollComponent: Optional[PayrollComponent55] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdResultsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message804]] = None
    field_embedded: Optional[List[FieldEmbeddedItem94]] = Field(None, alias='_embedded')


class Message805(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdResultsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message805]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdResultsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdResultsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdRunoverviewGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message805]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdRunoverviewGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdRunoverviewGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdRunoverviewperemploymentGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message805]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdRunoverviewperemploymentGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdRunoverviewperemploymentGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Account(BaseModel):
    id: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Account Jan'])


class Administration(BaseModel):
    id: Optional[int] = Field(None, examples=[223])
    value: Optional[str] = Field(None, examples=['Administration A'])


class SubAdministration(BaseModel):
    Id: Optional[int] = Field(None, examples=[223])
    Name: Optional[str] = Field(None, examples=['Administration A'])


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdSendPostRequest(
    BaseModel
):
    account: Optional[Account] = Field(
        None, description='The account to connect to the journal application.'
    )
    accountKey: Optional[str] = Field(None, examples=['User1'])
    administration: Optional[Administration] = Field(
        None,
        description='The administration in the journalapplication to which the journal will be added.',
    )
    date: Optional[date_aliased] = Field(
        None, description='Date', examples=['2022-01-01']
    )
    description: Optional[str] = Field(None, examples=['Opmerking 1'])
    deviatingJournalSeries: Optional[str] = Field(None, examples=['Afwijking1'])
    financialYear: Optional[int] = Field(None, examples=[2023])
    includeCostCenter: Optional[bool] = Field(
        None,
        description='Indicates whether cost centers are included in the journal.',
        examples=[True],
    )
    includeCostUnit: Optional[bool] = Field(
        None,
        description='Indicates whether cost units are included in the journal.',
        examples=[False],
    )
    journalCode: Optional[str] = Field(None, examples=['2'])
    journalNumber: Optional[int] = Field(None, examples=[2])
    linkCostCenterToGroup: Optional[UUID] = Field(
        None,
        description='The Group to which the CostCenter will be linked.\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    linkCostUnitToGroup: Optional[UUID] = Field(
        None,
        description='The Group to which the CostUnit will be linked.\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    period: Optional[int] = Field(
        None,
        description='the period to which the journal should be added.',
        examples=[2],
    )
    subAdministration: Optional[SubAdministration] = Field(
        None,
        description='The subadministration in the journalapplication to which the journal will be added.',
    )
    user: Optional[str] = Field(None, examples=['User1'])


class Message808(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content178(BaseModel):
    account: Optional[Account] = Field(
        None, description='The account to connect to the journal application.'
    )
    accountKey: Optional[str] = Field(None, examples=['User1'])
    administration: Optional[Administration] = Field(
        None,
        description='The administration in the journalapplication to which the journal will be added.',
    )
    date: Optional[date_aliased] = Field(
        None, description='Date', examples=['2022-01-01']
    )
    description: Optional[str] = Field(None, examples=['Opmerking 1'])
    deviatingJournalSeries: Optional[str] = Field(None, examples=['Afwijking1'])
    financialYear: Optional[int] = Field(None, examples=[2023])
    includeCostCenter: Optional[bool] = Field(
        None,
        description='Indicates whether cost centers are included in the journal.',
        examples=[True],
    )
    includeCostUnit: Optional[bool] = Field(
        None,
        description='Indicates whether cost units are included in the journal.',
        examples=[False],
    )
    journalCode: Optional[str] = Field(None, examples=['2'])
    journalNumber: Optional[int] = Field(None, examples=[2])
    linkCostCenterToGroup: Optional[UUID] = Field(
        None,
        description='The Group to which the CostCenter will be linked.\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    linkCostUnitToGroup: Optional[UUID] = Field(
        None,
        description='The Group to which the CostUnit will be linked.\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    period: Optional[int] = Field(
        None,
        description='the period to which the journal should be added.',
        examples=[2],
    )
    subAdministration: Optional[SubAdministration] = Field(
        None,
        description='The subadministration in the journalapplication to which the journal will be added.',
    )
    user: Optional[str] = Field(None, examples=['User1'])


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdSendPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message808]] = None
    content: Optional[Content178] = None


class Message809(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdSendPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message809]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdSendPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdSendPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsJournalrunsJournalrunIdSendPostResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message809]] = None
    version: Optional[Version] = None


class Action11(Enum):
    confirm = 'confirm'
    cancel = 'cancel'


class ProvidersEmployersPayrolladministrationsPayrollrunsPatchRequestItem(BaseModel):
    action: Action11 = Field(
        ..., description='The action to perform on the payroll run'
    )
    id: UUID = Field(
        ...,
        description='The unique identifier (GUID/UUID) of the payroll run.',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPatchRequest(
    RootModel[List[ProvidersEmployersPayrolladministrationsPayrollrunsPatchRequestItem]]
):
    root: List[ProvidersEmployersPayrolladministrationsPayrollrunsPatchRequestItem]


class Message811(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message811]] = None
    content: Optional[Dict[str, Any]] = None


class Message812(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message812]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message812]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message812]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message815(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem95(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message815]] = None
    field_embedded: Optional[List[FieldEmbeddedItem95]] = Field(None, alias='_embedded')


class Message816(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message816]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdPutRequest(
    BaseModel
):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class Message817(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content179(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message817]] = None
    content: Optional[Content179] = None


class Message818(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message818]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsNotesNoteIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message818]] = None
    version: Optional[Version] = None


class PaymentType(Enum):
    Other = 'Other'
    Salary = 'Salary'


class BatchBooking(Enum):
    BtchBookgExclude = 'BtchBookgExclude'
    BtchBookgTrue = 'BtchBookgTrue'
    BtchBookgFalse = 'BtchBookgFalse'


class ProvidersEmployersPayrolladministrationsPayrollrunsSepafilesSepafileIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message818]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsSepafilesSepafileIdGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsSepafilesSepafileIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message821(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ErrorsAndWarnings(BaseModel):
    hasErrors: Optional[bool] = Field(
        None, description='Indicates whether the payrollrun has errors'
    )
    hasWarnings: Optional[bool] = Field(
        None,
        description='Indicates whether the payrollrun has warnings',
        examples=[True],
    )


class MethodOfCreation2(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key indicating how the payroll run was created.',
        examples=[2],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing how the payroll run was created.',
        examples=['Individueel'],
    )


class PayrollRunStatus(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key indicating the current status of the payroll run.',
        examples=[9],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing the current status of the payroll run.\n* Staat klaar voor verloning. (key = 0)\n* Verloning gereed. (key = 1)\n* Proforma verloning gereed. (key = 2)\n* Verwijderd door gebruiker (key = 5)\n* Verloning geannuleerd door gebruiker. (key = 6)\n* Fout tijdens verloning. (key = 7)\n* Geen loonresultaten, verloning geannuleerd. (key = 8)\n* Verloning goedgekeurd. (key = 9)\n',
        examples=['Verloning goedgekeurd.'],
    )


class Content180(BaseModel):
    approvalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was approved by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    approvedBy: Optional[ApprovedBy] = None
    availableForEmployeeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the pay slips will be available to employees.',
        examples=['2018-05-08'],
    )
    errorsAndWarnings: Optional[ErrorsAndWarnings] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    methodOfCreation: Optional[MethodOfCreation2] = None
    payrollPeriod: Optional[PayrollPeriod16] = None
    payrollRunStatus: Optional[PayrollRunStatus] = None
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='Date-time when the calculations of the wages was finished',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removeTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was removed.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    sendEmailToEmployee: Optional[bool] = Field(
        None,
        description='Indicates whether an email should be sent to the employees when the pay slip is available to them.',
    )
    sequenceNumber: Optional[int] = Field(
        None,
        description='An incremental number with a payrolling year to uniquely identify a payroll run. Null can be returned for those runs that dont contain "wages".',
        examples=[1],
    )
    sequenceNumberApproved: Optional[int] = Field(
        None,
        description='An incremental number with a payrolling year to uniquely identify an approved payroll run.',
    )
    textPaySlip: Optional[constr(max_length=25)] = Field(
        None,
        description='An optional text provided by an authorized user that will be displayed on the pay slip.',
    )
    textPayment: Optional[constr(max_length=32)] = Field(
        None,
        description='An optional text provided by an authorized user that will be displayed as a description for the payment.',
    )
    textTariffPaySlip: Optional[constr(max_length=25)] = Field(
        None, description='An additional text to  be displayed on the tariff payslip.'
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message821]] = None
    content: Optional[Content180] = None


class Message822(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message822]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message823(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CostCenter21(BaseModel):
    code: Optional[constr(max_length=20)] = Field(
        None, description='The code of the cost center\n', examples=['SAL']
    )
    key: Optional[int] = Field(
        None, description='The key of the cost center\n', examples=[1]
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The description of the cost center\n', examples=['Sales']
    )


class CostUnit21(BaseModel):
    code: Optional[constr(max_length=20)] = Field(
        None, description='The code of the cost unit\n', examples=['INT']
    )
    key: Optional[int] = Field(
        None, description='The key of the cost unit\n', examples=[1]
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the cost unit\n',
        examples=['International'],
    )


class GeneralLedgerAccount2(BaseModel):
    generalLedgerAccountnumber: Optional[constr(max_length=20)] = Field(
        None,
        description='The account number for the general ledger account\n',
        examples=[4001],
    )
    key: Optional[int] = Field(
        None, description='The key of the general ledger account\n', examples=[1]
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the general ledger account\n',
        examples=['Wages'],
    )


class JournalAllocationItem(BaseModel):
    costCenter: Optional[CostCenter21] = None
    costUnit: Optional[CostUnit21] = None
    generalLedgerAccount: Optional[GeneralLedgerAccount2] = None


class BalanceSheetSide(BaseModel):
    key: Optional[int] = Field(
        None,
        description='Indicates on what side (debit or credit) the value should go\n',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the side of the balance sheet\n',
        examples=['Credit'],
    )


class PayrollComponent57(BaseModel):
    balanceSheetSide: Optional[BalanceSheetSide] = None
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Wage'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[70],
    )


class FieldEmbeddedItem96(BaseModel):
    journalAllocation: Optional[List[JournalAllocationItem]] = Field(
        None,
        description='If configured in the software (by configuring a "journal profile") this array returns all the combinations of `generalLedgerAccount`, `costCenter` and `costUnit` configures for the given component.\nThe hour or factor based allocation is ignored in this endpoint.',
        min_length=0,
    )
    payrollComponent: Optional[PayrollComponent57] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    value: Optional[float] = Field(
        None,
        description='The sum of all the values for the payrollcomponent in the specific payroll run. \nPayroll period, employment and normal/tarif payslip are not taken into account and simply summed up.',
        examples=[40457.01],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdBalanceSheetGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message823]] = None
    field_embedded: Optional[List[FieldEmbeddedItem96]] = Field(None, alias='_embedded')


class Message824(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdBalanceSheetGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message824]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdBalanceSheetGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdBalanceSheetGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdDefaultsetGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message824]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdDefaultsetGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdDefaultsetGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdErrorsandwarningsGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message824]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdErrorsandwarningsGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdErrorsandwarningsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdJournalentriesperdistributionunitoverviewsGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message824]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdJournalentriesperdistributionunitoverviewsGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdJournalentriesperdistributionunitoverviewsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message828(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem97(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdNotesGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message828]] = None
    field_embedded: Optional[List[FieldEmbeddedItem97]] = Field(None, alias='_embedded')


class Message829(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdNotesGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message829]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdNotesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdNotesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdNotesPostRequest(
    BaseModel
):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class Message830(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content181(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdNotesPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message830]] = None
    content: Optional[Content181] = None


class Message831(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdNotesPostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message831]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdNotesPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdNotesPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdPaymentoverviewsGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message831]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdPaymentoverviewsGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdPaymentoverviewsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdPayrollcontrolregisterGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message831]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdPayrollcontrolregisterGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdPayrollcontrolregisterGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdPayslipsGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message831]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdPayslipsGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdPayslipsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message835(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent58(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.    \n',
    )
    column: Optional[Column] = Field(
        None,
        description='The wage sheet column (kolom) of the payroll component. Kolommen are related to its specific lines on the payslip and/or wage sheet.  Also this does bear some similiarties to wage sheets columns (loonstaatkolommen) used by the Belastingdienst, however the division of columns as used by Loket is not identical to that.\n',
    )
    costsEmployer: Optional[CostsEmployer] = Field(
        None,
        description='Indicates whether the components are costs for the employer (+) or negative costs (-, i.e. benefit) for the employer. The value could also be NULL meaning that the component is not related to actual expenses.\n',
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[1],
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )


class PayrollComponentResult4(BaseModel):
    payrollComponent: Optional[PayrollComponent58] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    value: Optional[float] = Field(
        None,
        description="Value/ amount (normaal tarief voor belasting, tabelloon) for the payrollcomponent. Only a 'normal' type payslip may have value for this.",
        examples=[40],
    )
    valueSpecialTariff: Optional[float] = Field(
        None,
        description="Value/ amount (speciaal tarief voor belasting) for the payrollcomponent. Both a 'normal' and 'special tariff' type payslip may a value for this. Also, both valueNormal and valueSpecialTariff may have a value at the same time.",
        examples=[144],
    )


class PayslipType16(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Normaal strook'])


class PayslipType15(BaseModel):
    payrollComponentResults: Optional[List[PayrollComponentResult4]] = None
    payslipType: Optional[PayslipType16] = Field(
        None,
        description='The type of payslip on which underlying payroll run results will be booked. This is either normaal or bijzonder tarief.\n',
    )


class PayrollPeriod18(BaseModel):
    payrollPeriod: Optional[PayrollPeriod16] = None
    payslipTypes: Optional[List[PayslipType15]] = None


class FieldEmbeddedItem98(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[List[PayrollPeriod18]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdResultsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message835]] = None
    field_embedded: Optional[List[FieldEmbeddedItem98]] = Field(None, alias='_embedded')


class Message836(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdResultsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message836]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdResultsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdResultsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdRunoverviewsGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message836]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdRunoverviewsGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdRunoverviewsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdSepafilesGetResponseItem(
    BaseModel
):
    description: Optional[constr(max_length=32)] = Field(
        None,
        description='Description of the sepa file',
        examples=['SALARISBETALING PERIODE 9'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdSepafilesGetResponse(
    RootModel[
        List[
            ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdSepafilesGetResponseItem
        ]
    ]
):
    root: List[
        ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdSepafilesGetResponseItem
    ]


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdSepafilesGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message836]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdSepafilesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdSepafilesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdTotalsepafileGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message836]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdTotalsepafileGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdTotalsepafileGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdUndoPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message836]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdUndoPostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdUndoPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdWagesheetsGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message836]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdWagesheetsGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollrunsPayrollrunIdWagesheetsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPatchRequestItem(
    BaseModel
):
    action: Action11 = Field(
        ..., description='The action to perform on the payroll tax return'
    )
    id: UUID = Field(
        ...,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPatchRequest(
    RootModel[
        List[ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPatchRequestItem]
    ]
):
    root: List[
        ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPatchRequestItem
    ]


class Message842(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message842]] = None
    content: Optional[Dict[str, Any]] = None


class Message843(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message843]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsMessageReferencePatchRequest(
    BaseModel
):
    action: Action11 = Field(
        ..., description='The action to perform on the payroll tax return'
    )


class Message844(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsMessageReferencePatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message844]] = None
    content: Optional[Dict[str, Any]] = None


class Message845(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsMessageReferencePatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message845]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsMessageReferencePatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsMessageReferencePatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsMessageReferenceSendresponsemessagebymessagereferencePostRequest(
    BaseModel
):
    responseMessageFile: Optional[str] = Field(
        None,
        description='base64 encoded xml file of the response message',
        examples=[
            'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iSVNPLTg4NTktMSI/Pgo8UmVzcG9uc2VtZXNzYWdlIHZlcnNpb249IjIwMDYuMSI+Cgk8SWRlbnRpZmljYXRpb24+CgkJPE1lc3NhZ2VJZD5BLWVmMmJmMTQwMjMxYzExZTA4MWM5MGE5ZTA0MGIxMjM0PC9NZXNzYWdlSWQ+CgkJPFJlZmVyc1RvTWVzc2FnZUlkPlZTUDAwMTAwMTE4MzcyMkwwNDAwMDAwMTIwMTIzNDwvUmVmZXJzVG9NZXNzYWdlSWQ+CgkJPE1lc3NhZ2VJZEJkPmVmMmJmMTQwMjMxYzExZTA4MWM5MGE5ZTA0MGIxMjM0PC9NZXNzYWdlSWRCZD4KCQk8RGF0dW1UaWpkT250dmFuZ3N0PjIwMjAtMDEtMThUMTY6MDY6MzlaPC9EYXR1bVRpamRPbnR2YW5nc3Q+CgkJPFJlc3BvbnNlVHlwZT5hY2tub3dsZWRnZW1lbnQ8L1Jlc3BvbnNlVHlwZT4KCTwvSWRlbnRpZmljYXRpb24+CjwvUmVzcG9uc2VtZXNzYWdlPgo'
        ],
    )


class Message846(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsMessageReferenceSendresponsemessagebymessagereferencePostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message846]] = None
    content: Optional[Dict[str, Any]] = None


class Message847(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsMessageReferenceSendresponsemessagebymessagereferencePostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message847]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsMessageReferenceSendresponsemessagebymessagereferencePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsMessageReferenceSendresponsemessagebymessagereferencePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message848(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ApprovedBy2(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class MethodOfCreation3(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key indicating how the payroll tax return run was created.',
        examples=[2],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing how the payroll tax return run was created.',
        examples=['Individueel'],
    )


class PayrollPeriodType7(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['month'])


class PayrollTaxReturnParty(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Loket.nl'])


class PayrollTaxReturnStatus(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[str] = Field(None, examples=['Loonaangifte aangemaakt'])


class PayrollTaxReturnType(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Periodeaangifte'])


class Period1(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period for which the tax return was created. In case of a yearly tax return this value will be set to 0',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the period for which the tax return message was created.',
        examples=[2017],
    )


class RemovedBy3(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class ResponseClass(BaseModel):
    key: Optional[int] = Field(None, examples=[26])
    value: Optional[str] = Field(None, examples=['Loonheffingennummer is onjuist'])


class ResponseType(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Error'])


class ResponseMessage1(BaseModel):
    dateOfReceipt: Optional[date_aliased] = Field(
        None,
        description='The date on which the response message was received',
        examples=['2016-01-19'],
    )
    responseClass: Optional[ResponseClass] = Field(
        None, description='The Walvis class code'
    )
    responseType: Optional[ResponseType] = Field(None, description='The response type')


class Content182(BaseModel):
    approvalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll tax return run was approved by the user',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    approvedBy: Optional[ApprovedBy2] = None
    cancelledBy: Optional[CancelledBy] = None
    cancelledTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was cancelled. (Annuleren)',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    correctionAmount: Optional[float] = Field(
        None,
        description="The amount, in euro's, of wage tax to be paid as correction for previous period(s)",
        examples=[500],
    )
    deadlineForPayment: Optional[date_aliased] = Field(
        None,
        description='The final date at which the amount is due.',
        examples=['2021-12-31'],
    )
    emailAddressPayrollTaxReturnRunStarted: Optional[str] = Field(
        None,
        description='The e-mail address to which an email will be sent when the payroll tax return run is started. (Email starten)',
        examples=['info@loket.nl'],
    )
    externalIdentification: Optional[str] = Field(
        None,
        description='An identifier to be filled by external parties after submitting the tax return.',
        examples=['AA123'],
    )
    iban: Optional[str] = Field(
        None,
        description='The IBAN to which the payroll tax return should be payed. Only IBAN without spaces are accepted.',
        examples=['NL86INGB0002445588'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    inTheNameOf: Optional[str] = Field(
        None,
        description='The name of the benificiary corresponding with the IBAN',
        examples=['tnv belastingdienst Apeldoorn'],
    )
    isCorrectionMessagePriorYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll tax return is a correction message or not. A correction message is always for a prior year and no SEPA file can be downloaded for a correction message.  \n',
        examples=[True],
    )
    messageCreationTime: Optional[datetime] = Field(
        None,
        description='Date-time when the message was created',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    messageReference: Optional[str] = Field(
        None,
        description='The message reference (berichtkenmerk) that is used within the payroll tax return message.\n',
        examples=['VSP001111111110L29000035201302'],
    )
    methodOfCreation: Optional[MethodOfCreation3] = None
    paymentReference: Optional[str] = Field(
        None,
        description='The payment reference (betalingskenmerk) to be used when making the payment to the tax office.',
        examples=['8111111116529080'],
    )
    payrollPeriodType: Optional[PayrollPeriodType7] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4).',
    )
    payrollTaxReturnParty: Optional[PayrollTaxReturnParty] = Field(
        None, description='Indicates the party submitting the tax return.'
    )
    payrollTaxReturnStatus: Optional[PayrollTaxReturnStatus] = Field(
        None,
        description='The current status of the tax return\nPossible values:\n\n* Verzoek tot aanmaak loonaangifte (key = 1)\n* Fout bij aanmaken loonaangifte (key = 2)\n* Loonaangifte aangemaakt (key = 3)\n* Loonaangifte geannuleerd (key = 4)\n* Loonaangifte bevestigd (key = 5)\n* Loonaangifte verzonden (key = 6)\n* Loonaangifte verwijderd (key = 7)\n',
    )
    payrollTaxReturnType: Optional[PayrollTaxReturnType] = Field(
        None,
        description='Indicates the frequence of the payrol tax retun process. Can be each payroll period or annually.',
    )
    period: Optional[Period1] = None
    periodAmount: Optional[float] = Field(
        None,
        description="The amount, in euro's, of wage tax to be paid for this period",
        examples=[2000],
    )
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='Date-time when the calculations were finished',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    removalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll tax return run was removed (verwijderd by the user',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy3] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll tax return run was requested by the user',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    responseMessages: Optional[List[ResponseMessage1]] = None
    sendTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll tax return run message was send.',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    sequenceNumber: Optional[int] = Field(
        None, description='An incremental number.', examples=[1]
    )
    taxReturnMessageReference: Optional[str] = Field(
        None,
        description='The name of the party responsible for the payroll tax return',
        examples=['Bedrijf B.V.'],
    )
    totalAmount: Optional[float] = Field(
        None,
        description='The cumulative ammount of the correctionAmount and periodAmount. Indication the total ammount to be paid for this wagetax return',
        examples=[2500],
    )
    wageTaxNumber: Optional[constr(max_length=12)] = Field(
        None,
        description='The wage tax number aka Loonheffingennummer.',
        examples=['111111110L00'],
    )
    withholdingParty: Optional[str] = Field(
        None,
        description='The name of the party responsible for the payroll tax return',
        examples=['Bedrijf B.V.'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message848]] = None
    content: Optional[Content182] = None


class Message849(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message849]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message850(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content183(BaseModel):
    url: Optional[str] = Field(
        None,
        description='The URL leads to the IDEAL payment environment of the dutch payroll tax authorities (belastingdienst).',
        examples=[
            'https://betalen.belastingdienst.nl/kas/ideal_betaling?id=1700&code=1easdasasdasdasdasdasd5'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdIdealGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message850]] = None
    content: Optional[Content183] = None


class Message851(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdIdealGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message851]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdIdealGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdIdealGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message852(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Status6(BaseModel):
    code: Optional[str] = Field(
        None,
        description='The status code (as defined by the Dutch tax authorities) of the IDEAL payment',
        examples=['acsc'],
    )
    reason: Optional[str] = Field(
        None,
        description='The reason for the given status code of the IDEAL payment',
        examples=['accepted'],
    )


class Content184(BaseModel):
    lastStatusRequest: Optional[datetime] = Field(
        None,
        description='The date time on which the last **succesful** status request was performed',
    )
    status: Optional[Status6] = None


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdIdealPaymentStatusGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message852]] = None
    content: Optional[Content184] = None


class Message853(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdIdealPaymentStatusGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message853]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdIdealPaymentStatusGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdIdealPaymentStatusGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdMessageGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message853]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdMessageGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdMessageGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdOverviewGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message853]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdOverviewGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdOverviewGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdSendresponsemessagePostRequest(
    BaseModel
):
    responseMessageFile: Optional[str] = Field(
        None,
        description='base64 encoded xml file of the response message',
        examples=[
            'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iSVNPLTg4NTktMSI/Pgo8UmVzcG9uc2VtZXNzYWdlIHZlcnNpb249IjIwMDYuMSI+Cgk8SWRlbnRpZmljYXRpb24+CgkJPE1lc3NhZ2VJZD5BLWVmMmJmMTQwMjMxYzExZTA4MWM5MGE5ZTA0MGIxMjM0PC9NZXNzYWdlSWQ+CgkJPFJlZmVyc1RvTWVzc2FnZUlkPlZTUDAwMTAwMTE4MzcyMkwwNDAwMDAwMTIwMTIzNDwvUmVmZXJzVG9NZXNzYWdlSWQ+CgkJPE1lc3NhZ2VJZEJkPmVmMmJmMTQwMjMxYzExZTA4MWM5MGE5ZTA0MGIxMjM0PC9NZXNzYWdlSWRCZD4KCQk8RGF0dW1UaWpkT250dmFuZ3N0PjIwMjAtMDEtMThUMTY6MDY6MzlaPC9EYXR1bVRpamRPbnR2YW5nc3Q+CgkJPFJlc3BvbnNlVHlwZT5hY2tub3dsZWRnZW1lbnQ8L1Jlc3BvbnNlVHlwZT4KCTwvSWRlbnRpZmljYXRpb24+CjwvUmVzcG9uc2VtZXNzYWdlPgo'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdSendresponsemessagePostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message853]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdSendresponsemessagePostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrolltaxreturnsPayrolltaxreturnIdSendresponsemessagePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message857(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ApprovedBy3(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class ExternalParty1(BaseModel):
    key: Optional[int] = Field(None, examples=[13])
    value: Optional[str] = Field(None, examples=['PFZW (UPA)'])


class MethodOfCreation4(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Individueel'])


class Period2(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None, description='The end date of the period', examples=['2021-11-30']
    )
    periodId: Optional[int] = Field(
        None, description='The periodId of the payroll period.', examples=[202101]
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period for which the pension declaration was created. In case of a yearly tax return this value will be set to 0',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None, description='The start date of the period', examples=['2021-11-01']
    )
    periodType: Optional[PeriodType] = Field(
        None,
        description='Indicates the frequence of the process. Payrolling can be done on a montly, 4-weekly or weekly basis.',
    )
    year: Optional[int] = Field(
        None,
        description='The year of the period for which the pension declaration was created.',
        examples=[2017],
    )


class RemovedBy4(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class ResponseStatus(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Bericht niet OK (NOK)'])


class ResponseType1(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Ontvangstbevestiging (ACK)'])


class ResponseMessage2(BaseModel):
    citizenServiceNumber: Optional[constr(min_length=9, max_length=9)] = Field(
        None,
        description='The social security number of the employee used in communication with the Dutch tax authorities. The number has to be a valid Dutch citizen service number (BSN).',
        examples=['042168588'],
    )
    code: Optional[str] = Field(
        None, description='The description of the response message', examples=['NOK']
    )
    datetimeOfMessageReceipt: Optional[datetime] = Field(
        None,
        description='The date on which the original message was received by the external entity',
        examples=['2016-01-19'],
    )
    datetimeOfRegistration: Optional[datetime] = Field(
        None,
        description='The date on which the response message was registered in Loket',
        examples=['2016-01-19'],
    )
    description: Optional[str] = Field(
        None,
        description='The description of the response message',
        examples=[
            'De werkgever heeft geen contract voor de opgegeven regeling. Doe opnieuw aangifte zonder deze regeling.'
        ],
    )
    descriptionFragment: Optional[str] = Field(
        None,
        description='The description of the response message',
        examples=[
            'Het Loonheffingennummer moet bestaan, bekend en in gebruik zijn bij de PUO.'
        ],
    )
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    errorType: Optional[str] = Field(
        None,
        description='If  there is an error type then this field contain its value.',
        examples=['F'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    lineNumber: Optional[int] = Field(
        None,
        description='If  there is an error type then this field contain a value.',
        examples=[14],
    )
    linePosition: Optional[int] = Field(
        None,
        description='If  there is an error type then this field contain a value.',
        examples=[11],
    )
    responseStatus: Optional[ResponseStatus] = None
    responseType: Optional[ResponseType1] = None


class UpaPensionDeclarationStatus(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[str] = Field(None, examples=['Pensioenaangifte aangemaakt'])


class Content185(BaseModel):
    approvalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was approved by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    approvedBy: Optional[ApprovedBy3] = None
    cancelledBy: Optional[CancelledBy] = None
    cancelledTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was Cancelled by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    creationTime: Optional[datetime] = Field(
        None,
        description='The time at which the pension message was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    externalParty: Optional[ExternalParty1] = Field(
        None, description='External party (externe partij)'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    messageReference: Optional[str] = Field(
        None,
        description='The message reference (berichtkenmerk) to recognize the given declaration.\n',
        examples=['190'],
    )
    methodOfCreation: Optional[MethodOfCreation4] = Field(
        None, description='Method by which the creation of the run was triggered.'
    )
    payrollTaxesNumber: Optional[constr(min_length=12, max_length=12)] = Field(
        None,
        description='The payroll tax number, loonheffingennummer, is the number that is used for the Loonaangifte for the Belastingdienst.',
        examples=['111111110L46'],
    )
    period: Optional[Period2] = None
    removeTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was removed.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy4] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    responseMessages: Optional[List[ResponseMessage2]] = None
    sendingPartyNumber: Optional[str] = Field(
        None,
        description='The number of the sending party (i.e. nummer leverancier).\n',
        examples=['SWO00077'],
    )
    sentTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was sent.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    upaPensionDeclarationStatus: Optional[UpaPensionDeclarationStatus] = Field(
        None,
        description='The current status of the pension declaration\n\nPossible values:\n* Verzoek tot aanmaak pensioenaangifte (key = 1)\n* Fout bij aanmaken pensioenaangifte (key = 2)\n* Pensioenaangifte aangemaakt (key = 3)\n* Pensioenaangifte geannuleerd (key = 4)\n* Pensioenaangifte bevestigd (key = 5)\n* Pensioenaangifte verzonden (key = 6)\n* Pensioenaangifte verwijderd (key = 7)\n',
    )
    withholdingAgentName: Optional[str] = Field(
        None,
        description='The withholding agent name (naam inhoudingsplichtige) for this return.\n',
        examples=['Ben-Hur BV Via Roma'],
    )


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message857]] = None
    content: Optional[Content185] = None


class Message858(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message858]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdPatchRequest(
    BaseModel
):
    action: Action11 = Field(
        ..., description='The action to perform on the upa pensiondeclaration'
    )


class Message859(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdPatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message859]] = None
    content: Optional[Dict[str, Any]] = None


class Message860(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdPatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message860]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdMessageGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message860]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdMessageGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsUpapensiondeclarationsUpaPensionDeclarationIdMessageGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ReportType(Enum):
    nonAggregated = 'nonAggregated'
    aggregatedPerGeneralLedgerAccount = 'aggregatedPerGeneralLedgerAccount'


class GroupingType(Enum):
    perPeriod = 'perPeriod'
    perDistributionUnit = 'perDistributionUnit'
    perPeriodPerDistributionUnit = 'perPeriodPerDistributionUnit'


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAccumulatedbasicjournalresultsreportGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message860]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAccumulatedbasicjournalresultsreportGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAccumulatedbasicjournalresultsreportGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ReportType2(Enum):
    baseForCalculationBalancesAtStartOfYear = 'baseForCalculationBalancesAtStartOfYear'
    leaveBalancesAtStartOfYear = 'leaveBalancesAtStartOfYear'
    leaveAccrualWithinYear = 'leaveAccrualWithinYear'


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAccumulationsandbalancesreportGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message860]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAccumulationsandbalancesreportGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAccumulationsandbalancesreportGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAnnualpayrolltaxreturnreportGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message860]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAnnualpayrolltaxreturnreportGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAnnualpayrolltaxreturnreportGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAnnualwagesheetreportGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message860]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAnnualwagesheetreportGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAnnualwagesheetreportGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message866(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ExternalParty2(BaseModel):
    key: Optional[int] = Field(None, examples=[13])
    value: Optional[str] = Field(None, examples=['PFZW (APG)'])


class Period3(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None, description='The end date of the period', examples=['2021-11-30']
    )
    periodId: Optional[int] = Field(
        None, description='The periodId of the payroll period.', examples=[202101]
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period for which the pension declaration was created. In case of a yearly tax return this value will be set to 0',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None, description='The start date of the period', examples=['2021-11-01']
    )
    periodType: Optional[PeriodType] = Field(
        None,
        description='Indicates the frequence of the process. Payrolling can be done on a montly, 4-weekly or weekly basis.',
    )
    year: Optional[int] = Field(
        None,
        description='The year of the period for which the pension declaration was created.',
        examples=[2017],
    )


class ResponseMessage3(BaseModel):
    datetimeOfMessageReceipt: Optional[datetime] = Field(
        None,
        description='The date on which the original message was received by the external entity',
        examples=['2016-01-19'],
    )
    datetimeOfRegistration: Optional[datetime] = Field(
        None,
        description='The date on which the response message was registered in Loket',
        examples=['2016-01-19'],
    )
    description: Optional[str] = Field(
        None,
        description='The description of the response message',
        examples=['Bestand ontvangen'],
    )


class FieldEmbeddedItem99(BaseModel):
    apgPensionDeclarationStatus: Optional[ApgPensionDeclarationStatus] = Field(
        None,
        description='The current status of the tax return\nPossible values:\n* Verzoek tot aanmaak pensioenaangifte (key = 1)\n* Fout bij aanmaken pensioenaangifte (key = 2)\n* Pensioenaangifte aangemaakt (key = 3)\n* Pensioenaangifte geannuleerd (key = 4)\n* Pensioenaangifte bevestigd (key = 5)\n* Pensioenaangifte verzonden (key = 6)\n* Pensioenaangifte verwijderd (key = 7)\n',
    )
    approvalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was approved by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    approvedBy: Optional[ApprovedBy3] = None
    cancelledBy: Optional[CancelledBy] = None
    cancelledTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was Cancelled by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    creationTime: Optional[datetime] = Field(
        None,
        description='The time at which the pension message was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    customerGroupNumber: Optional[int] = Field(
        None,
        description='Pension declarations will alway be grouped by its customerGroupNumber (klantgroepnummer).',
    )
    externalParty: Optional[ExternalParty2] = Field(
        None, description='External party (externe partij)'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    messageReference: Optional[str] = Field(
        None,
        description='The message reference (berichtkenmerk) to recognize the given declaration.\n',
        examples=['190'],
    )
    methodOfCreation: Optional[MethodOfCreation4] = Field(
        None, description='Method by which the creation of the run was triggered.'
    )
    period: Optional[Period3] = None
    removeTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was removed.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy4] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the  run was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    responseMessages: Optional[List[ResponseMessage3]] = None
    sentTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was sent.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    withholdingAgentName: Optional[str] = Field(
        None,
        description='The withholding agent name (naam inhoudingsplichtige) for this return.\n',
        examples=['Ben-Hur BV Via Roma'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdApgpensiondeclarationsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message866]] = None
    field_embedded: Optional[List[FieldEmbeddedItem99]] = Field(None, alias='_embedded')


class Message867(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdApgpensiondeclarationsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message867]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdApgpensiondeclarationsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdApgpensiondeclarationsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message868(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content186(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdApgpensiondeclarationsInitiatePostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message868]] = None
    content: Optional[Content186] = None


class Message869(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdApgpensiondeclarationsInitiatePostResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message869]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdApgpensiondeclarationsInitiatePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdApgpensiondeclarationsInitiatePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAttachmentsofearningsreportGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message869]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAttachmentsofearningsreportGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAttachmentsofearningsreportGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message871(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee7(BaseModel):
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within an employer.',
        examples=[156],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=25)] = Field(
        None, description='The name of the employee', examples=['Bergen']
    )


class Employer(BaseModel):
    companyName: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )
    employerNumber: Optional[int] = Field(
        None,
        description='The employer number is used in various overviews and exports to identify a specific employer in Loket (please note: this is not the identifier used in the REST API).',
        examples=[20720],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Employment1(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2018-01-01'],
    )


class FieldModel(BaseModel):
    key: Optional[int] = Field(None, description='The key of the field', examples=[1])
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the field', examples=['Achternaam']
    )


class CostCenter22(BaseModel):
    code: Optional[str] = Field(None, examples=['SAL073'])
    description: Optional[str] = Field(None, examples=['Sales Den Bosch'])
    key: Optional[int] = Field(None, examples=[2])


class CostUnit22(BaseModel):
    code: Optional[str] = Field(None, examples=['01'])
    description: Optional[str] = Field(None, examples=['Cars'])
    key: Optional[int] = Field(None, examples=[2])


class DistributionUnit17(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Sales'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class PayrollPeriod20(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period to which the payroll period data applies\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the payroll period in which the payroll data is to be processed.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period to which the payroll period data applies\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the payroll period in which the payroll data is to be processed\n',
        examples=[2017],
    )


class PayslipType17(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Bijzonder tarief strook'])


class Shift18(BaseModel):
    bonusPercentage: Optional[float] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift.\n',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[float] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.\n',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None,
        description='The number for the shift. Loket.nl supports a maximum of 5 shifts per payroll administration.\n',
        examples=[1],
    )


class Identification(BaseModel):
    costCenter: Optional[CostCenter22] = Field(
        None,
        description='The cost center on which the payroll period data for this record will be booked for the ledger.\n',
    )
    costUnit: Optional[CostUnit22] = Field(
        None,
        description='The cost unit on which the data for this record will be booked for the ledger\n',
    )
    description: Optional[constr(max_length=255)] = Field(
        None,
        description='Extra identifying information for the mutation',
        examples=['Datum ingang 03-03-2005'],
    )
    distributionUnit: Optional[DistributionUnit17] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The ID of the entity record that was changed',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    payrollPeriod: Optional[PayrollPeriod20] = None
    payslipType: Optional[PayslipType17] = Field(
        None,
        description='The type of payslip (as defined by the Dutch tax authorities)\n',
    )
    shift: Optional[Shift18] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n',
    )


class MutationOrigin(BaseModel):
    key: Optional[int] = Field(
        None, description='The key of the mutationOrigin', examples=[1]
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the mutationOrigin', examples=['Import']
    )


class MutationType(BaseModel):
    key: Optional[int] = Field(
        None, description='The key of the mutationType', examples=[1]
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the mutationType', examples=['toevoegen']
    )


class PayrollAdministration9(BaseModel):
    clientNumber: Optional[int] = Field(
        None,
        description='The client number is a unique number for administrations that are used for payrolling. This field has no value if the administration is not used for payrolling.',
        examples=[1234],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the administration', examples=['ABC accountants']
    )


class PayrollComponentCategory(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Uren'])


class PerformedBy1(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class FieldEmbeddedItem100(BaseModel):
    employee: Optional[Employee7] = None
    employer: Optional[Employer] = None
    employment: Optional[Employment1] = None
    field: Optional[FieldModel] = Field(
        None, description='The application that performed the mutation\n'
    )
    identification: Optional[Identification] = Field(
        None, description='The identification of the entity record that was changed\n'
    )
    mutationOrigin: Optional[MutationOrigin] = Field(
        None,
        description='The origin of the mutation\nFor example:\n* By user * Automatich process * Collective change * Import\n',
    )
    mutationType: Optional[MutationType] = Field(
        None,
        description='The type of mutation\n\n\n  * create (toevoegen)\n  * update (wijzigen)\n  * delete (verwijderen)\n',
    )
    newValue: Optional[constr(max_length=250)] = Field(
        None,
        description='The value of the field after the change. \nIncase of an delete the nieuwValue will be NULL.',
        examples=['Hermans'],
    )
    oldValue: Optional[constr(max_length=250)] = Field(
        None,
        description='The value befor the change. \nIncase of an create the oldValue will be NULL.',
        examples=['Hermanss'],
    )
    payrollAdministration: Optional[PayrollAdministration9] = None
    payrollComponentCategory: Optional[PayrollComponentCategory] = Field(
        None,
        description='If the field is a payroll component this field will indicate the category of the payroll component otherwise its null. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    performedBy: Optional[PerformedBy1] = None
    timeStamp: Optional[datetime] = Field(
        None,
        description='The time the mutation was performed',
        examples=['2018-05-08T15:16:49+02:00'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAuditTrailPayrollPeriodDataGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message871]] = None
    field_embedded: Optional[List[FieldEmbeddedItem100]] = Field(
        None, alias='_embedded'
    )


class Message872(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAuditTrailPayrollPeriodDataGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message872]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAuditTrailPayrollPeriodDataGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAuditTrailPayrollPeriodDataGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message873(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent60(BaseModel):
    canBeSupplemented: Optional[bool] = Field(
        None,
        description='Indicates whether the atribute for this payroll component can have the value `supplement`. Refer to the description of the attribute field for an explanation.\n',
        examples=[False],
    )
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[1],
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )


class PayrollComponent59(BaseModel):
    payrollComponent: Optional[PayrollComponent60] = Field(
        None,
        description='A payroll component. These components are the core of the wage calculation software.\n\n`payrollComponents` is a metadata field within the payroll administration, loonmodel and cao context. Possible values can be managed by the user.\n',
    )


class FieldEmbeddedItem101(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['Standaard exportset']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of the payroll component set that is to be used as default set when editing payroll periode data for all employments of a payroll administration\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDefaultForBrowserPayrollPeriodData: Optional[bool] = Field(
        None,
        description='The default set is defined on payroll administration level.  To be used for the "browser variabele gegevens" to indication which set of component should be displayed by default.\n',
        examples=[False],
    )
    isDefaultForPayrollPeriodData: Optional[bool] = Field(
        None,
        description='The default set is defined on payroll administration level.  To be used for the "variabele gegevens" for an employment to indication which set of component should be displayed by default.\n',
        examples=[True],
    )
    isDefinedOnProviderLevel: Optional[bool] = Field(
        None,
        description='The set is defined at either the provider or at the payroll administration level. If this indication is true then the set was defined at provider, if false than it is defined at payroll administration level.\n',
        examples=[True],
    )
    payrollComponents: Optional[List[PayrollComponent59]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAvailablepayrollcomponentsetsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message873]] = None
    field_embedded: Optional[List[FieldEmbeddedItem101]] = Field(
        None, alias='_embedded'
    )


class Message874(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAvailablepayrollcomponentsetsGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message874]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAvailablepayrollcomponentsetsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdAvailablepayrollcomponentsetsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdDeviatingpremiumswabGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message874]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdDeviatingpremiumswabGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdDeviatingpremiumswabGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdEmploymentPayrollDataAuditTrailGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message874]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdEmploymentPayrollDataAuditTrailGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdEmploymentPayrollDataAuditTrailGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message877(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollPeriod21(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period the record relates to',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll periode is part of a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the payroll period the record relates to',
        examples=[2017],
    )


class PayrollRun1(BaseModel):
    payrollPeriod: Optional[PayrollPeriod21] = None
    payrollRunId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    sequenceNumberApproved: Optional[int] = Field(
        None,
        description='Ascending sequence number related to an approved payrol run. A payroll run may have more than one journal run. With this number the journal run may be linked to the specific payroll run. ',
        examples=[6],
    )


class FieldEmbeddedItem102(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalRunStatus: Optional[JournalRunStatus] = None
    methodOfCreation: Optional[MethodOfCreation4] = Field(
        None,
        description='Method by which the creation of the journal run was triggered.',
    )
    payrollRun: Optional[PayrollRun1] = None
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='The time at which at which the journal run was finished processing',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removeTime: Optional[datetime] = Field(
        None,
        description='The time at which the journal run was removed.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy4] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    sequenceNumber: Optional[int] = Field(
        None,
        description='Ascending sequence number over ALL journal runs for the payroll administration.',
        examples=[8],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdJournalrunsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message877]] = None
    field_embedded: Optional[List[FieldEmbeddedItem102]] = Field(
        None, alias='_embedded'
    )


class Message878(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdJournalrunsGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message878]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdJournalrunsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdJournalrunsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message879(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollRun2(BaseModel):
    payrollPeriod: Optional[PayrollPeriod21] = None
    payrollRunId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    sequenceNumberApproved: Optional[int] = Field(
        None,
        description='Ascending sequence number related to an approved payrol run. A payroll run may have more than one journal run. With this number the journal run may be linked to the specific payroll run. ',
        examples=[6],
    )


class Content187(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalRunStatus: Optional[JournalRunStatus] = None
    methodOfCreation: Optional[MethodOfCreation4] = Field(
        None,
        description='Method by which the creation of the journal run was triggered.',
    )
    payrollRun: Optional[PayrollRun2] = None
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='The time at which at which the journal run was finished processing',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removeTime: Optional[datetime] = Field(
        None,
        description='The time at which the journal run was removed.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy4] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    sequenceNumber: Optional[int] = Field(
        None,
        description='Ascending sequence number over ALL journal runs for the payroll administration.',
        examples=[8],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdJournalrunsInitiatePostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message879]] = None
    content: Optional[Content187] = None


class Message880(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdJournalrunsInitiatePostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message880]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdJournalrunsInitiatePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdJournalrunsInitiatePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollPeriodDataAuditTrailGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message880]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollPeriodDataAuditTrailGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollPeriodDataAuditTrailGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message882(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee8(BaseModel):
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )


class Employment2(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    payrollId: Optional[int] = Field(
        None,
        description='The payrolling number for this employment of the employee. Used by the payroll engine. This number is automatically generated and cannot be changed by the user.',
        examples=[2],
    )


class PayrollComponent62(BaseModel):
    canBeSupplemented: Optional[bool] = Field(
        None,
        description='Indicates whether the atribute for this payroll component can have the value `supplement`. Refer to the description of the attribute field for an explanation.\n',
        examples=[False],
    )
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[1],
    )


class PayrollComponent61(BaseModel):
    isSupplement: Optional[bool] = Field(
        None,
        description='This boolean determines what the salary calculation will do with the value of the payroll component if the payroll component has values in both the payroll period specific data (this endpoint) and in the non-payroll period specific configuration of the employment (it is possible to configure values for payroll components that span multiple payroll periods and even parts thereof).\n\n* When set to `false`, the value of the payroll component will overwrite the value specified in the non-payroll period specific data with the given value in the payroll period specific date.\n\n* When set to `true`, the value of the payroll period specific data will be added to the value of the non-payroll period specific data. Note that a value can be a negative number. For instance, a payroll period specific value of 20 and a non-payroll period specific value of -8 will effectively result in 12 for salary calculation.\n\nThis boolean can only be set to `true` in components for which `payrollComponent.canBesupplemented = true`.\n',
        examples=[False],
    )
    payrollComponent: Optional[PayrollComponent62] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period.  <br/>  Please note: Business rules may differ per component! Understanding these business rules and corresponding validations requires functional knowledge of Loket.\n',
    )
    value: Optional[float] = Field(
        None,
        description='Depending on the selected payroll component the possible value(s) for this field change (dynamic business rules).\n',
        examples=[144],
    )


class PayrollPeriod23(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period to which the payroll period data applies\n',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the payroll period in which the payroll data is to be processed.\n',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period to which the payroll period data applies\n',
        examples=['2018-01-01'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year of the payroll period in which the payroll data is to be processed\n',
        examples=[2017],
    )


class FieldEmbeddedItem103(BaseModel):
    costCenter: Optional[CostCenter22] = Field(
        None,
        description='The cost center on which the payroll period data for this record will be booked for the ledger.\n',
    )
    costUnit: Optional[CostUnit22] = Field(
        None,
        description='The cost unit on which the data for this record will be booked for the ledger\n',
    )
    distributionUnit: Optional[DistributionUnit17] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n',
    )
    employee: Optional[Employee8] = None
    employment: Optional[Employment2] = None
    payrollComponents: Optional[List[PayrollComponent61]] = Field(None, ge=0)
    payrollPeriod: Optional[PayrollPeriod23] = None
    payslipType: Optional[PayslipType17] = Field(
        None,
        description='The type of payslip (as defined by the Dutch tax authorities)\n',
    )
    shift: Optional[Shift18] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n',
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollPeriodsPayrollPeriodIdPayrollperioddataGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message882]] = None
    field_embedded: Optional[List[FieldEmbeddedItem103]] = Field(
        None, alias='_embedded'
    )


class Message883(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollPeriodsPayrollPeriodIdPayrollperioddataGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message883]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollPeriodsPayrollPeriodIdPayrollperioddataGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollPeriodsPayrollPeriodIdPayrollperioddataGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolladministrationsettingsreportGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message883]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolladministrationsettingsreportGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolladministrationsettingsreportGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message885(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class DefinedAtLevel(Enum):
    employer = 'employer'
    provider = 'provider'
    loket = 'loket'


class FieldEmbeddedItem104(BaseModel):
    canBeSupplemented: Optional[bool] = Field(
        None,
        description='Indicates whether the atribute for this payroll component can have the value `supplement`. Refer to the description of the attribute field for an explanation.\n',
        examples=[False],
    )
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    definedAtLevel: Optional[DefinedAtLevel] = Field(
        None,
        description='The component is defined at either cao, loonmodel or payroll administration level. If this indication is true then the set was defined at provider, if false than it is defined at payroll administration level.\n',
        examples=['employer'],
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[1],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollcomponentsYearYearGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message885]] = None
    field_embedded: Optional[List[FieldEmbeddedItem104]] = Field(
        None, alias='_embedded'
    )


class Message886(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollcomponentsYearYearGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message886]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollcomponentsYearYearGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollcomponentsYearYearGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message887(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AutomaticProcessing(BaseModel):
    approvePayrollRunOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the payroll run for this period is automatically approved (if all prerequisite are met).',
        examples=['2020-01-23'],
    )
    createPayrollRunOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the payroll run for this period is automatically created (if all prerequisite are met).',
        examples=['2020-01-18'],
    )
    hasAutomaticPayrollRunApprovalBeenExecuted: Optional[bool] = None
    hasAutomaticPayrollRunCreationBeenExecuted: Optional[bool] = None


class PayrollPeriodType8(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['month'])


class JournalRunStatus3(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key indicating the current status of the journal run.',
        examples=[4],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing the current status of the payroll run.',
        examples=['Journaal gereed'],
    )


class JournalRun(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalRunStatus: Optional[JournalRunStatus3] = None
    sequenceNumber: Optional[int] = Field(
        None,
        description='Ascending sequence number over ALL journal runs for the payroll administration.',
        examples=[8],
    )


class PayrollRunStatus1(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key indicating the current status of the payroll run.',
        examples=[9],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing the current status of the payroll run.',
        examples=['Verloning goedgekeurd.'],
    )


class PayrollRun3(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    journalRuns: Optional[List[JournalRun]] = Field(None, min_length=0)
    payrollRunStatus: Optional[PayrollRunStatus1] = None
    sequenceNumber: Optional[int] = Field(
        None,
        description='An incremental number with a payrolling year to uniquely identify a payroll run. Null can be returned for those runs that dont contain "wages".',
        examples=[1],
    )
    sequenceNumberApproved: Optional[int] = Field(
        None,
        description='An incremental number with a payrolling year to uniquely identify an approved payroll run.',
        examples=[3],
    )


class FieldEmbeddedItem105(BaseModel):
    automaticProcessing: Optional[AutomaticProcessing] = None
    endDate: Optional[date_aliased] = Field(
        None, description='The last day of the payroll period', examples=['2020-01-31']
    )
    id: Optional[int] = Field(
        None, description='The id for this specific payroll period.', examples=[202001]
    )
    payrollPeriodType: Optional[PayrollPeriodType8] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly, 4-weekly or weekly basis.',
    )
    payrollRuns: Optional[List[PayrollRun3]] = Field(None, min_length=0)
    periodNumber: Optional[int] = Field(
        None, description='The period number of the payroll period', examples=[1]
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The first day of the payroll period', examples=['2020-01-01']
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll year is a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(None, description='The payroll year', examples=[2020])


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message887]] = None
    field_embedded: Optional[List[FieldEmbeddedItem105]] = Field(
        None, alias='_embedded'
    )


class Message888(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message888]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message889(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollComponent63(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.    \n',
    )
    column: Optional[Column] = Field(
        None,
        description='The wage sheet column (kolom) of the payroll component. Kolommen are related to its specific lines on the payslip and/or wage sheet.  Also this does bear some similiarties to wage sheets columns (loonstaatkolommen) used by the Belastingdienst, however the division of columns as used by Loket is not identical to that.\n',
    )
    costsEmployer: Optional[CostsEmployer] = Field(
        None,
        description='Indicates whether the components are costs for the employer (+) or negative costs (-, i.e. benefit) for the employer. The value could also be NULL meaning that the component is not related to actual expenses.\n',
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[1],
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )


class PayrollComponentResult5(BaseModel):
    payrollComponent: Optional[PayrollComponent63] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    value: Optional[float] = Field(
        None,
        description="Value/ amount (normaal tarief voor belasting, tabelloon) for the payrollcomponent. Only a 'normal' type payslip may have value for this.",
        examples=[40],
    )
    valueSpecialTariff: Optional[float] = Field(
        None,
        description="Value/ amount (speciaal tarief voor belasting) for the payrollcomponent. Both a 'normal' and 'special tariff' type payslip may a value for this. Also, both valueNormal and valueSpecialTariff may have a value at the same time.",
        examples=[144],
    )


class PayrollPeriod24(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period the record relates to',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll periode is part of a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the payroll period the record relates to',
        examples=[2017],
    )


class FieldEmbeddedItem106(BaseModel):
    numberOfPayrolledEmployments: Optional[conint(ge=0)] = Field(
        None,
        description='The number of employments that where payrolled',
        examples=[34],
    )
    payrollComponentResults: Optional[List[PayrollComponentResult5]] = None
    payrollPeriod: Optional[PayrollPeriod24] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsCompareGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message889]] = None
    field_embedded: Optional[List[FieldEmbeddedItem106]] = Field(
        None, alias='_embedded'
    )


class Message890(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsCompareGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message890]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsCompareGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsCompareGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollPeriod25(BaseModel):
    periodNumber: Optional[conint(ge=1, le=53)] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53]) of the payroll period.\n',
        examples=[1],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None, description='The year of the payroll period\n', examples=[2017]
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsInitialisePostRequest(
    BaseModel
):
    payrollPeriod: Optional[PayrollPeriod25] = None
    setAnnualBaseForCalculationsBasedOnFunds: Optional[bool] = Field(
        None,
        description='Jaargrondslag fondsen bepalen. Sets baseForCalculationsBasedOnFunds-related component(s) in the payroll period data based on the configuration of the employment.',
        examples=[False],
    )
    setBaseForCalculations: Optional[bool] = Field(
        None,
        description='Grondslagen activeren. Sets baseForCalculation-related component(s) in the payroll period data based on the configuration of the employment.',
        examples=[False],
    )
    setHoursWorked: Optional[bool] = Field(
        None,
        description='Berekenen uren. Sets hours worked-related component(s) in the payroll period data based on the configuration of the employment.',
        examples=[False],
    )
    setLeaveHours: Optional[bool] = Field(
        None,
        description='Verlofuren op basis van uren bepalen. Sets leave hours-related component(s) in the payroll period data based on the configuration of the employment.',
        examples=[False],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsInitialisePostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message890]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsInitialisePostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsInitialisePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message892(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem107(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The last day of the payroll period', examples=['2020-01-31']
    )
    hasApprovedPayrollRun: Optional[bool] = Field(
        None,
        description='Indicates if the payroll period has atleast 1 approved payrollrun',
        examples=[False],
    )
    id: Optional[int] = Field(
        None, description='The id for this specific payroll period.', examples=[202001]
    )
    payrollPeriodType: Optional[PayrollPeriodType8] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly, 4-weekly or weekly basis.',
    )
    periodNumber: Optional[int] = Field(
        None, description='The period number of the payroll period', examples=[1]
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The first day of the payroll period', examples=['2020-01-01']
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll year is a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(None, description='The payroll year', examples=[2020])


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsMinimizedGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message892]] = None
    field_embedded: Optional[List[FieldEmbeddedItem107]] = Field(
        None, alias='_embedded'
    )


class Message893(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsMinimizedGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message893]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsMinimizedGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsMinimizedGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message894(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollPeriod27(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period the record relates to',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll periode is part of a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the payroll period the record relates to',
        examples=[2017],
    )


class PayrollComponent64(BaseModel):
    category: Optional[Category] = Field(
        None,
        description='The category of the payroll component. Example categories are, hours/extra hours/net payment/net deduction etc.    \n',
    )
    column: Optional[Column] = Field(
        None,
        description='The wage sheet column (kolom) of the payroll component. Kolommen are related to its specific lines on the payslip and/or wage sheet.  Also this does bear some similiarties to wage sheets columns (loonstaatkolommen) used by the Belastingdienst, however the division of columns as used by Loket is not identical to that.\n',
    )
    costsEmployer: Optional[CostsEmployer] = Field(
        None,
        description='Indicates whether the components are costs for the employer (+) or negative costs (-, i.e. benefit) for the employer. The value could also be NULL meaning that the component is not related to actual expenses.\n',
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[1],
    )
    value: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )


class PayrollComponentResult6(BaseModel):
    payrollComponent: Optional[PayrollComponent64] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    value: Optional[float] = Field(
        None,
        description="Value/ amount (normaal tarief voor belasting, tabelloon) for the payrollcomponent. Only a 'normal' type payslip may have value for this.",
        examples=[40],
    )
    valueSpecialTariff: Optional[float] = Field(
        None,
        description="Value/ amount (speciaal tarief voor belasting) for the payrollcomponent. Both a 'normal' and 'special tariff' type payslip may a value for this. Also, both valueNormal and valueSpecialTariff may have a value at the same time.",
        examples=[144],
    )


class PayslipType20(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Normaal strook'])


class PayslipType19(BaseModel):
    payrollComponentResults: Optional[List[PayrollComponentResult6]] = None
    payslipType: Optional[PayslipType20] = Field(
        None,
        description='The type of payslip on which underlying payroll run results will be booked. This is either normaal or bijzonder tarief.\n',
    )


class PayrollPeriod26(BaseModel):
    payrollPeriod: Optional[PayrollPeriod27] = None
    payslipTypes: Optional[List[PayslipType19]] = None


class FieldEmbeddedItem108(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollPeriods: Optional[List[PayrollPeriod26]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsPayrollPeriodIdPayrollresultsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message894]] = None
    field_embedded: Optional[List[FieldEmbeddedItem108]] = Field(
        None, alias='_embedded'
    )


class Message895(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsPayrollPeriodIdPayrollresultsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message895]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsPayrollPeriodIdPayrollresultsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollperiodsPayrollPeriodIdPayrollresultsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollComponents(RootModel[List[int]]):
    root: List[int] = Field(..., examples=['70,151,12'])


class Message896(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class JournalPossibleActionsAdditionalInfo(BaseModel):
    key: Optional[str] = Field(None, examples=['0.7'])
    value: Optional[str] = Field(None, examples=['The period has a journalrun queued.'])


class JournalPossibleActions(BaseModel):
    journalPossibleActionsAdditionalInfo: Optional[
        JournalPossibleActionsAdditionalInfo
    ] = Field(
        None,
        description='Additional information on the possible action of the journal process in the period.\n',
    )
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[str] = Field(None, examples=['None'])


class JournalStatusAdditionalInfo(BaseModel):
    key: Optional[str] = Field(None, examples=['2.1'])
    value: Optional[str] = Field(
        None, examples=['The period has a journalrun ready for export']
    )


class JournalStatus(BaseModel):
    journalStatusAdditionalInfo: Optional[JournalStatusAdditionalInfo] = Field(
        None,
        description='Additional information on the the status of the payroll process in the period.\n',
    )
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Queued'])


class Journal(BaseModel):
    journalPossibleActions: Optional[JournalPossibleActions] = Field(
        None,
        description='Possible actions for the journal process in the period.\nPossible actions are:\n- 0\tNone (no action possible)\n- 1\tStart\n- 2 Export\n',
    )
    journalStatus: Optional[JournalStatus] = Field(
        None,
        description='Status of the journal process in the period.\nPossible statuses are:\n- 0\tInvalid\n- 1\tQueued\n- 2\tExporting\n- 3\tIncorrect\n- 4\tIncorrect and preceding journalrun\n- 5\tNo results\n- 6\tNo results and preceding journalrun \n- 7\tLast export failed\n- 8\tJournal ready\n- 9 Export failed\n- 10 Not started\n- 11 Exported\n',
    )


class PayrollPossibleActionsAdditionalInfo(BaseModel):
    key: Optional[str] = Field(None, examples=['0.7'])
    value: Optional[str] = Field(None, examples=['The period has a payrollrun queued.'])


class PayrollPossibleActions(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    payrollPossibleActionsAdditionalInfo: Optional[
        PayrollPossibleActionsAdditionalInfo
    ] = Field(
        None,
        description='Additional information on the possible action of the payroll process in the period.\n',
    )
    value: Optional[str] = Field(None, examples=['None'])


class PayrollStatusAdditionalInfo(BaseModel):
    key: Optional[str] = Field(None, examples=['2.1'])
    value: Optional[str] = Field(None, examples=['The period has a payrollrun queued.'])


class PayrollStatus(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    payrollStatusAdditionalInfo: Optional[PayrollStatusAdditionalInfo] = Field(
        None,
        description='Additional information on the the status of the payroll process in the period.\n',
    )
    value: Optional[str] = Field(None, examples=['Queued'])


class TypeOfInitiationLastPayrollRun(Enum):
    regular = 'regular'
    withoutEmploymentData = 'withoutEmploymentData'


class Payroll(BaseModel):
    payrollPossibleActions: Optional[PayrollPossibleActions] = Field(
        None,
        description='Possible actions for the payroll process in the period.\nPossible actions are:\n- 0\tNone (no action possible)\n- 1\tReady to proces\n- 2\tStart\n- 3\tRestart\n',
    )
    payrollStatus: Optional[PayrollStatus] = Field(
        None,
        description='Status of the payroll process in the period.\nPossible statuses are:\n- 0\tInvalid\n- 1\tNot started\n- 2\tQueued\n- 3\tWaiting for approval\n- 4\tIncorrect and there is an approved preceding payrollrun\n- 5\tIncorrect\n- 6\tApproved \n- 7\tNo results\n- 8\tNo results and there is an approved preceding payrollrun\n',
    )
    typeOfInitiationLastPayrollRun: Optional[TypeOfInitiationLastPayrollRun] = Field(
        None,
        description='Indicates whether the run is completed with or withour employments.',
    )


class PayrollPeriod28(BaseModel):
    payrollPeriodId: Optional[int] = Field(
        None,
        description='The year and period of the payroll period\n',
        examples=[202004],
    )
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period to which the payroll period data applies\n',
        examples=['2020-06-30'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53])\n',
        examples=[4],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period to which the payroll period data applies\n',
        examples=['2020-04-01'],
    )
    year: Optional[int] = Field(
        None, description='The year of the payroll period\n', examples=[2020]
    )


class PayrollTaxReturnPossibleActionsAdditionalInfo(BaseModel):
    key: Optional[str] = Field(None, examples=['0.13'])
    value: Optional[str] = Field(None, examples=['There is a queued payrolltaxreturn.'])


class PayrollTaxReturnPossibleActions(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    payrollTaxReturnPossibleActionsAdditionalInfo: Optional[
        PayrollTaxReturnPossibleActionsAdditionalInfo
    ] = Field(
        None,
        description='Additional information on the possible action of the payroll tax return process in the period.\n',
    )
    value: Optional[str] = Field(None, examples=['Start'])


class PayrollTaxReturnStatusAdditionalInfo(BaseModel):
    key: Optional[str] = Field(None, examples=['2'])
    value: Optional[str] = Field(
        None, examples=['The period has a payrolltaxrun queued.']
    )


class PayrollTaxReturnStatus1(BaseModel):
    key: Optional[int] = Field(None, examples=[6])
    payrollTaxReturnStatusAdditionalInfo: Optional[
        PayrollTaxReturnStatusAdditionalInfo
    ] = Field(
        None,
        description='Additional information on the status of the payroll tax return process in the period.\n',
    )
    value: Optional[str] = Field(None, examples=['Done'])


class PayrollTaxReturn(BaseModel):
    payrollTaxReturnPossibleActions: Optional[PayrollTaxReturnPossibleActions] = Field(
        None,
        description='Possible actions for the payroll tax return process in the period.\nPossible actions are:\n- 0\tNone (no action possible)\n- 1\tReady to proces\n- 2\tStart\n',
    )
    payrollTaxReturnStatus: Optional[PayrollTaxReturnStatus1] = Field(
        None,
        description='Status of the payroll taxreturn process in the period.\nPossible statuses are: \n- 0\tInvalid\n- 1\tNot started\n- 2\tQueued\n- 3\tWaiting for approval\n- 5\tIncorrect\n- 6\tApproved\n- 9\tApproved and sent\n- 10\tNot available\n- 11\tCancelled\n- 12\tDeleted\n- 13\tBlank\n',
    )


class PensionAdministratorType(Enum):
    UPA = 'UPA'
    APG = 'APG'


class PensionDeclarationPossibleActionsAdditionalInfo(BaseModel):
    key: Optional[str] = Field(None, examples=['UPAC014'])
    value: Optional[str] = Field(
        None, examples=['There is a queued pensiondeclaration.']
    )


class PensionDeclarationPossibleActions(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    pensionDeclarationPossibleActionsAdditionalInfo: Optional[
        PensionDeclarationPossibleActionsAdditionalInfo
    ] = Field(
        None,
        description='Additional information on the possible action of the pensiondeclaration process in the period.\n',
    )
    value: Optional[str] = Field(None, examples=['Start'])


class PensionDeclarationStatusAdditionalInfo(BaseModel):
    key: Optional[str] = Field(None, examples=['2'])
    value: Optional[str] = Field(
        None, examples=['The period has a pensiondeclaration queued.']
    )


class PensionDeclarationStatus(BaseModel):
    key: Optional[int] = Field(None, examples=[6])
    pensionDeclarationStatusAdditionalInfo: Optional[
        PensionDeclarationStatusAdditionalInfo
    ] = Field(
        None,
        description='Additional information on the status of the pensiondeclaration process in the period.\n',
    )
    value: Optional[str] = Field(None, examples=['Done'])


class PensionDeclaration(BaseModel):
    pensionAdministratorType: Optional[PensionAdministratorType] = Field(
        None, description='The type of Pension declaration'
    )
    pensionDeclarationPossibleActions: Optional[PensionDeclarationPossibleActions] = (
        Field(
            None,
            description='Possible actions for the pensiondeclaration process in the period.\nPossible actions are:\n- 0\tNone (no action possible)\n- 1\tReady to proces\n- 2\tStart\n',
        )
    )
    pensionDeclarationStatus: Optional[PensionDeclarationStatus] = Field(
        None,
        description='Status of the pensiondeclaration process in the period.\nPossible statuses are: \n- 0\tInvalid\n- 1\tNot started\n- 2\tQueued\n- 3\tWaiting for approval\n- 5\tIncorrect\n- 6\tApproved\n- 9\tApproved and sent\n- 10\tNot available\n- 11\tCancelled\n- 12\tDeleted\n- 13\tBlank\n',
    )


class FieldEmbeddedItem109(BaseModel):
    journal: Optional[Journal] = Field(
        None, description='Status and possible actions of the journal process'
    )
    payroll: Optional[Payroll] = Field(
        None, description='Status and possible actions of the payroll process'
    )
    payrollPeriod: Optional[PayrollPeriod28] = None
    payrollTaxReturn: Optional[PayrollTaxReturn] = Field(
        None, description='Status and possible actions of the payroll taxReturn process'
    )
    pensionDeclaration: Optional[PensionDeclaration] = Field(
        None,
        description='Status and possible actions of the pensiondeclaration process',
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollprocessoverviewGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message896]] = None
    field_embedded: Optional[List[FieldEmbeddedItem109]] = Field(
        None, alias='_embedded'
    )


class Message897(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollprocessoverviewGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message897]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollprocessoverviewGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollprocessoverviewGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message898(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class MethodOfCreation8(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key indicating how the payroll run was created.',
        examples=[2],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing how the payroll run was created.',
        examples=['Individueel'],
    )


class PayrollPeriod29(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period the record relates to',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    testYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll periode is part of a test year.\n\nIn Loket it is possible to run a year of a payrolladministration as a so-called test year.  This is typically done to test the configuration of a new payroll administration, by running payrollruns within the context of a test year. \nPlease note: if the payroll run belongs to a test year the results of the run should not be regarded as actual data but as test data.',
        examples=[False],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the payroll period the record relates to',
        examples=[2017],
    )


class PayrollRunStatus2(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key indicating the current status of the payroll run.',
        examples=[9],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing the current status of the payroll run.\n* Staat klaar voor verloning. (key = 0)\n* Verloning gereed. (key = 1)\n* Proforma verloning gereed. (key = 2)\n* Verwijderd door gebruiker (key = 5)\n* Verloning geannuleerd door gebruiker. (key = 6)\n* Fout tijdens verloning. (key = 7)\n* Geen loonresultaten, verloning geannuleerd. (key = 8)\n* Verloning goedgekeurd. (key = 9)\n',
        examples=['Verloning goedgekeurd.'],
    )


class FieldEmbeddedItem110(BaseModel):
    approvalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was approved by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    approvedBy: Optional[ApprovedBy3] = None
    availableForEmployeeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the pay slips will be available to employees.',
        examples=['2018-05-08'],
    )
    errorsAndWarnings: Optional[ErrorsAndWarnings] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    methodOfCreation: Optional[MethodOfCreation8] = None
    payrollPeriod: Optional[PayrollPeriod29] = None
    payrollRunStatus: Optional[PayrollRunStatus2] = None
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='Date-time when the calculations of the wages was finished',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removeTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was removed.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy4] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    sendEmailToEmployee: Optional[bool] = Field(
        None,
        description='Indicates whether an email should be sent to the employees when the pay slip is available to them.',
    )
    sequenceNumber: Optional[int] = Field(
        None,
        description='An incremental number with a payrolling year to uniquely identify a payroll run. Null can be returned for those runs that dont contain "wages".',
        examples=[1],
    )
    sequenceNumberApproved: Optional[int] = Field(
        None,
        description='An incremental number with a payrolling year to uniquely identify an approved payroll run.',
    )
    textPaySlip: Optional[constr(max_length=25)] = Field(
        None,
        description='An optional text provided by an authorized user that will be displayed on the pay slip.',
    )
    textPayment: Optional[constr(max_length=32)] = Field(
        None,
        description='An optional text provided by an authorized user that will be displayed as a description for the payment.',
    )
    textTariffPaySlip: Optional[constr(max_length=25)] = Field(
        None, description='An additional text to  be displayed on the tariff payslip.'
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message898]] = None
    field_embedded: Optional[List[FieldEmbeddedItem110]] = Field(
        None, alias='_embedded'
    )


class Message899(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message899]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class TypeOfInitiation(Enum):
    regular = 'regular'
    withoutEmploymentData = 'withoutEmploymentData'


class InitiationParameters(BaseModel):
    emailAddressPayrollRunFinished: Optional[constr(max_length=255)] = Field(
        None,
        description='The e-mail address to which an email will be sent when the payroll run is finished. (Email gereed)',
        examples=['info@loket.nl'],
    )
    emailAddressPayrollRunStarted: Optional[constr(max_length=255)] = Field(
        None,
        description='The e-mail address to which an email will be sent when the payroll run is started. (Email starten)',
        examples=['info@loket.nl'],
    )
    typeOfInitiation: Optional[TypeOfInitiation] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsInitiatePostRequest(
    BaseModel
):
    approvalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was approved by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    approvedBy: Optional[ApprovedBy3] = None
    availableForEmployeeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the pay slips will be available to employees.',
        examples=['2018-05-08'],
    )
    errorsAndWarnings: Optional[ErrorsAndWarnings] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    methodOfCreation: Optional[MethodOfCreation8] = None
    payrollPeriod: Optional[PayrollPeriod29] = None
    payrollRunStatus: Optional[PayrollRunStatus2] = None
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='Date-time when the calculations of the wages was finished',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removeTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was removed.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy4] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    sendEmailToEmployee: Optional[bool] = Field(
        None,
        description='Indicates whether an email should be sent to the employees when the pay slip is available to them.',
    )
    sequenceNumber: Optional[int] = Field(
        None,
        description='An incremental number with a payrolling year to uniquely identify a payroll run. Null can be returned for those runs that dont contain "wages".',
        examples=[1],
    )
    sequenceNumberApproved: Optional[int] = Field(
        None,
        description='An incremental number with a payrolling year to uniquely identify an approved payroll run.',
    )
    textPaySlip: Optional[constr(max_length=25)] = Field(
        None,
        description='An optional text provided by an authorized user that will be displayed on the pay slip.',
    )
    textPayment: Optional[constr(max_length=32)] = Field(
        None,
        description='An optional text provided by an authorized user that will be displayed as a description for the payment.',
    )
    textTariffPaySlip: Optional[constr(max_length=25)] = Field(
        None, description='An additional text to  be displayed on the tariff payslip.'
    )
    initiationParameters: Optional[InitiationParameters] = None


class Content188(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (GUID/UUID) of the payroll run.',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsInitiatePostResponse(
    BaseModel
):
    content: Optional[Content188] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsInitiatePostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message899]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsInitiatePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsInitiatePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message901(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content189(BaseModel):
    availableForEmployeeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the pay slips will be available to employees.',
        examples=['2021-05-08'],
    )
    emailAddressPayrollRunApproved: Optional[str] = Field(
        None,
        description='The email address to send an email to, after starting the payroll run has been approved."',
    )
    emailAddressPayrollRunFinished: Optional[str] = Field(
        None,
        description='The email address to send an email to, after the payroll run has been calculated.',
    )
    emailAddressPayrollRunStarted: Optional[str] = Field(
        None,
        description='The email address to send an email to, after starting the payroll run proces.',
    )
    payrollPeriod: Optional[PayrollPeriod29] = None
    sendEmailToEmployee: Optional[bool] = Field(
        None,
        description='Indicates whether an email should be sent to the employees when the pay slip is available to them.',
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsPeriodIdInitiationvaluesGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message901]] = None
    content: Optional[Content189] = None


class Message902(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsPeriodIdInitiationvaluesGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message902]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsPeriodIdInitiationvaluesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrollrunsPeriodIdInitiationvaluesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message903(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ApprovedBy7(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class MethodOfCreation10(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key indicating how the payroll tax return run was created.',
        examples=[2],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing how the payroll tax return run was created.',
        examples=['Individueel'],
    )


class PayrollPeriodType10(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['month'])


class PayrollTaxReturnStatus2(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[str] = Field(None, examples=['Loonaangifte aangemaakt'])


class Period4(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which the tax return message was created',
        examples=['2018-01-31'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period for which the tax return was created. In case of a yearly tax return this value will be set to 0',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which the tax return message was created',
        examples=['2018-01-01'],
    )
    year: Optional[int] = Field(
        None,
        description='The year of the period for which the tax return message was created.',
        examples=[2017],
    )


class RemovedBy10(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class ResponseType2(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Error'])


class ResponseMessage4(BaseModel):
    dateOfReceipt: Optional[date_aliased] = Field(
        None,
        description='The date on which the response message was received',
        examples=['2016-01-19'],
    )
    responseClass: Optional[ResponseClass] = Field(
        None, description='The Walvis class code'
    )
    responseType: Optional[ResponseType2] = Field(None, description='The response type')


class FieldEmbeddedItem111(BaseModel):
    approvalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll tax return run was approved by the user',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    approvedBy: Optional[ApprovedBy7] = None
    cancelledBy: Optional[CancelledBy] = None
    cancelledTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was cancelled. (Annuleren)',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    correctionAmount: Optional[float] = Field(
        None,
        description="The amount, in euro's, of wage tax to be paid as correction for previous period(s)",
        examples=[500],
    )
    deadlineForPayment: Optional[date_aliased] = Field(
        None,
        description='The final date at which the amount is due.',
        examples=['2021-12-31'],
    )
    emailAddressPayrollTaxReturnRunStarted: Optional[str] = Field(
        None,
        description='The e-mail address to which an email will be sent when the payroll tax return run is started. (Email starten)',
        examples=['info@loket.nl'],
    )
    externalIdentification: Optional[str] = Field(
        None,
        description='An identifier to be filled by external parties after submitting the tax return.',
        examples=['AA123'],
    )
    iban: Optional[str] = Field(
        None,
        description='The IBAN to which the payroll tax return should be payed. Only IBAN without spaces are accepted.',
        examples=['NL86INGB0002445588'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    inTheNameOf: Optional[str] = Field(
        None,
        description='The name of the benificiary corresponding with the IBAN',
        examples=['tnv belastingdienst Apeldoorn'],
    )
    isCorrectionMessagePriorYear: Optional[bool] = Field(
        None,
        description='Indicates whether the payroll tax return is a correction message or not. A correction message is always for a prior year and no SEPA file can be downloaded for a correction message.  \n',
        examples=[True],
    )
    messageCreationTime: Optional[datetime] = Field(
        None,
        description='Date-time when the message was created',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    messageReference: Optional[str] = Field(
        None,
        description='The message reference (berichtkenmerk) that is used within the payroll tax return message.\n',
        examples=['VSP001111111110L29000035201302'],
    )
    methodOfCreation: Optional[MethodOfCreation10] = None
    paymentReference: Optional[str] = Field(
        None,
        description='The payment reference (betalingskenmerk) to be used when making the payment to the tax office.',
        examples=['8111111116529080'],
    )
    payrollPeriodType: Optional[PayrollPeriodType10] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4).',
    )
    payrollTaxReturnParty: Optional[PayrollTaxReturnParty] = Field(
        None, description='Indicates the party submitting the tax return.'
    )
    payrollTaxReturnStatus: Optional[PayrollTaxReturnStatus2] = Field(
        None,
        description='The current status of the tax return\nPossible values:\n\n* Verzoek tot aanmaak loonaangifte (key = 1)\n* Fout bij aanmaken loonaangifte (key = 2)\n* Loonaangifte aangemaakt (key = 3)\n* Loonaangifte geannuleerd (key = 4)\n* Loonaangifte bevestigd (key = 5)\n* Loonaangifte verzonden (key = 6)\n* Loonaangifte verwijderd (key = 7)\n',
    )
    payrollTaxReturnType: Optional[PayrollTaxReturnType] = Field(
        None,
        description='Indicates the frequence of the payrol tax retun process. Can be each payroll period or annually.',
    )
    period: Optional[Period4] = None
    periodAmount: Optional[float] = Field(
        None,
        description="The amount, in euro's, of wage tax to be paid for this period",
        examples=[2000],
    )
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='Date-time when the calculations were finished',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    removalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll tax return run was removed (verwijderd by the user',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy10] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll tax return run was requested by the user',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    responseMessages: Optional[List[ResponseMessage4]] = None
    sendTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll tax return run message was send.',
        examples=['2021-05-08T15:16:49+02:00'],
    )
    sequenceNumber: Optional[int] = Field(
        None, description='An incremental number.', examples=[1]
    )
    taxReturnMessageReference: Optional[str] = Field(
        None,
        description='The name of the party responsible for the payroll tax return',
        examples=['Bedrijf B.V.'],
    )
    totalAmount: Optional[float] = Field(
        None,
        description='The cumulative ammount of the correctionAmount and periodAmount. Indication the total ammount to be paid for this wagetax return',
        examples=[2500],
    )
    wageTaxNumber: Optional[constr(max_length=12)] = Field(
        None,
        description='The wage tax number aka Loonheffingennummer.',
        examples=['111111110L00'],
    )
    withholdingParty: Optional[str] = Field(
        None,
        description='The name of the party responsible for the payroll tax return',
        examples=['Bedrijf B.V.'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message903]] = None
    field_embedded: Optional[List[FieldEmbeddedItem111]] = Field(
        None, alias='_embedded'
    )


class Message904(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message904]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsInitiatePostRequest(
    BaseModel
):
    notifyOfInitiation: Optional[str] = None


class Content190(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (GUID/UUID) of the payroll tax return run.',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsInitiatePostResponse(
    BaseModel
):
    content: Optional[Content190] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsInitiatePostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message904]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsInitiatePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsInitiatePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsPayrolltaxreturnIdSepafileGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message904]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsPayrolltaxreturnIdSepafileGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPayrolltaxreturnsPayrolltaxreturnIdSepafileGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class EmailAddressPeriodReadyForPayrollItem(
    RootModel[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ]
):
    root: constr(
        pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
        max_length=255,
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPeriodreadyforpayrollPostRequest(
    BaseModel
):
    emailAddressPeriodReadyForPayroll: Optional[
        List[EmailAddressPeriodReadyForPayrollItem]
    ] = Field(
        None,
        description='The email address(es) of the recipient(s)',
        examples=[['email@kantoor.nl', 'email2@kantoor.nl']],
        max_length=10,
        min_length=1,
    )
    payrollPeriodId: Optional[int] = Field(
        None, description='The id for this specific payroll period.', examples=[202101]
    )
    userComment: Optional[constr(max_length=1000)] = Field(
        None,
        description='A personal message from the sender.',
        examples=['All mutations are done.'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPeriodreadyforpayrollPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message904]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPeriodreadyforpayrollPostResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message904]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPeriodreadyforpayrollPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdPeriodreadyforpayrollPostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message909(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ApprovedBy8(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class ExternalParty3(BaseModel):
    key: Optional[int] = Field(None, examples=[13])
    value: Optional[str] = Field(None, examples=['PFZW (UPA)'])


class MethodOfCreation11(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[str] = Field(None, examples=['Individueel'])


class Period5(BaseModel):
    periodEndDate: Optional[date_aliased] = Field(
        None, description='The end date of the period', examples=['2021-11-30']
    )
    periodId: Optional[int] = Field(
        None, description='The periodId of the payroll period.', examples=[202101]
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period number of the payroll period for which the pension declaration was created. In case of a yearly tax return this value will be set to 0',
        examples=[1],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None, description='The start date of the period', examples=['2021-11-01']
    )
    periodType: Optional[PeriodType] = Field(
        None,
        description='Indicates the frequence of the process. Payrolling can be done on a montly, 4-weekly or weekly basis.',
    )
    year: Optional[int] = Field(
        None,
        description='The year of the period for which the pension declaration was created.',
        examples=[2017],
    )


class RemovedBy11(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class ResponseType3(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Ontvangstbevestiging (ACK)'])


class ResponseMessage5(BaseModel):
    citizenServiceNumber: Optional[constr(min_length=9, max_length=9)] = Field(
        None,
        description='The social security number of the employee used in communication with the Dutch tax authorities. The number has to be a valid Dutch citizen service number (BSN).',
        examples=['042168588'],
    )
    code: Optional[str] = Field(
        None, description='The description of the response message', examples=['NOK']
    )
    datetimeOfMessageReceipt: Optional[datetime] = Field(
        None,
        description='The date on which the original message was received by the external entity',
        examples=['2016-01-19'],
    )
    datetimeOfRegistration: Optional[datetime] = Field(
        None,
        description='The date on which the response message was registered in Loket',
        examples=['2016-01-19'],
    )
    description: Optional[str] = Field(
        None,
        description='The description of the response message',
        examples=[
            'De werkgever heeft geen contract voor de opgegeven regeling. Doe opnieuw aangifte zonder deze regeling.'
        ],
    )
    descriptionFragment: Optional[str] = Field(
        None,
        description='The description of the response message',
        examples=[
            'Het Loonheffingennummer moet bestaan, bekend en in gebruik zijn bij de PUO.'
        ],
    )
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    errorType: Optional[str] = Field(
        None,
        description='If  there is an error type then this field contain its value.',
        examples=['F'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    lineNumber: Optional[int] = Field(
        None,
        description='If  there is an error type then this field contain a value.',
        examples=[14],
    )
    linePosition: Optional[int] = Field(
        None,
        description='If  there is an error type then this field contain a value.',
        examples=[11],
    )
    responseStatus: Optional[ResponseStatus] = None
    responseType: Optional[ResponseType3] = None


class FieldEmbeddedItem112(BaseModel):
    approvalTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was approved by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    approvedBy: Optional[ApprovedBy8] = None
    cancelledBy: Optional[CancelledBy] = None
    cancelledTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was Cancelled by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    creationTime: Optional[datetime] = Field(
        None,
        description='The time at which the pension message was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    externalParty: Optional[ExternalParty3] = Field(
        None, description='External party (externe partij)'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    messageReference: Optional[str] = Field(
        None,
        description='The message reference (berichtkenmerk) to recognize the given declaration.\n',
        examples=['190'],
    )
    methodOfCreation: Optional[MethodOfCreation11] = Field(
        None, description='Method by which the creation of the run was triggered.'
    )
    payrollTaxesNumber: Optional[constr(min_length=12, max_length=12)] = Field(
        None,
        description='The payroll tax number, loonheffingennummer, is the number that is used for the Loonaangifte for the Belastingdienst.',
        examples=['111111110L46'],
    )
    period: Optional[Period5] = None
    removeTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was removed.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    removedBy: Optional[RemovedBy11] = None
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the payroll run was requested by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    requestedBy: Optional[RequestedBy] = None
    responseMessages: Optional[List[ResponseMessage5]] = None
    sendingPartyNumber: Optional[str] = Field(
        None,
        description='The number of the sending party (i.e. nummer leverancier).\n',
        examples=['SWO00077'],
    )
    sentTime: Optional[datetime] = Field(
        None,
        description='The time at which the pay roll run was sent.',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    upaPensionDeclarationStatus: Optional[UpaPensionDeclarationStatus] = Field(
        None,
        description='The current status of the pension declaration\n\nPossible values:\n* Verzoek tot aanmaak pensioenaangifte (key = 1)\n* Fout bij aanmaken pensioenaangifte (key = 2)\n* Pensioenaangifte aangemaakt (key = 3)\n* Pensioenaangifte geannuleerd (key = 4)\n* Pensioenaangifte bevestigd (key = 5)\n* Pensioenaangifte verzonden (key = 6)\n* Pensioenaangifte verwijderd (key = 7)\n',
    )
    withholdingAgentName: Optional[str] = Field(
        None,
        description='The withholding agent name (naam inhoudingsplichtige) for this return.\n',
        examples=['Ben-Hur BV Via Roma'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdUpapensiondeclarationsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message909]] = None
    field_embedded: Optional[List[FieldEmbeddedItem112]] = Field(
        None, alias='_embedded'
    )


class Message910(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdUpapensiondeclarationsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message910]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdUpapensiondeclarationsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdUpapensiondeclarationsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message911(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content191(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdUpapensiondeclarationsInitiatePostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message911]] = None
    content: Optional[Content191] = None


class Message912(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdUpapensiondeclarationsInitiatePostResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message912]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdUpapensiondeclarationsInitiatePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdUpapensiondeclarationsInitiatePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message913(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem113(BaseModel):
    year: Optional[int] = Field(
        None,
        description='The year for which a year-end statement is available.',
        examples=[2018],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdYearendstatementsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message913]] = None
    field_embedded: Optional[List[FieldEmbeddedItem113]] = Field(
        None, alias='_embedded'
    )


class Message914(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdYearendstatementsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message914]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdYearendstatementsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdYearendstatementsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdYearendstatementsYearGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message914]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdYearendstatementsYearGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersPayrolladministrationsPayrollAdministrationIdYearendstatementsYearGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message916(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class DownloadRequestStatus(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key indicating the current status of the download request.',
        examples=[2],
    )
    value: Optional[str] = Field(None, examples=['Bestand aangemaakt'])


class FieldEmbeddedItem114(BaseModel):
    downloadRequestStatus: Optional[DownloadRequestStatus] = None
    expirationTime: Optional[datetime] = Field(
        None,
        description='The time at which the download will expire.',
        examples=['2018-05-16T15:16:49+02:00'],
    )
    filename: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the download file.\n',
        examples=['WerkgeverDownload.rar'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    latestDownloadTime: Optional[datetime] = Field(
        None,
        description='The time of the most recent download.',
        examples=['2018-05-09T15:16:49+02:00'],
    )
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='The time when the download become available.',
        examples=['2018-05-09T15:16:49+02:00'],
    )
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the download request was created by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None, description='The year of the download request relates to', examples=[2017]
    )


class ProvidersEmployersUsersDownloadrequestsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message916]] = None
    field_embedded: Optional[List[FieldEmbeddedItem114]] = Field(
        None, alias='_embedded'
    )


class Message917(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersDownloadrequestsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message917]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersUsersDownloadrequestsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersDownloadrequestsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersUsersDownloadrequestsPostRequest(BaseModel):
    downloadRequestStatus: Optional[DownloadRequestStatus] = None
    expirationTime: Optional[datetime] = Field(
        None,
        description='The time at which the download will expire.',
        examples=['2018-05-16T15:16:49+02:00'],
    )
    filename: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the download file.\n',
        examples=['WerkgeverDownload.rar'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    latestDownloadTime: Optional[datetime] = Field(
        None,
        description='The time of the most recent download.',
        examples=['2018-05-09T15:16:49+02:00'],
    )
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='The time when the download become available.',
        examples=['2018-05-09T15:16:49+02:00'],
    )
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the download request was created by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None, description='The year of the download request relates to', examples=[2017]
    )


class Message918(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content192(BaseModel):
    downloadRequestStatus: Optional[DownloadRequestStatus] = None
    expirationTime: Optional[datetime] = Field(
        None,
        description='The time at which the download will expire.',
        examples=['2018-05-16T15:16:49+02:00'],
    )
    filename: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the download file.\n',
        examples=['WerkgeverDownload.rar'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    latestDownloadTime: Optional[datetime] = Field(
        None,
        description='The time of the most recent download.',
        examples=['2018-05-09T15:16:49+02:00'],
    )
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='The time when the download become available.',
        examples=['2018-05-09T15:16:49+02:00'],
    )
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the download request was created by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None, description='The year of the download request relates to', examples=[2017]
    )


class ProvidersEmployersUsersDownloadrequestsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message918]] = None
    content: Optional[Content192] = None


class Message919(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersDownloadrequestsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message919]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersDownloadrequestsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersDownloadrequestsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message919]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message919]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message922(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content193(BaseModel):
    downloadRequestStatus: Optional[DownloadRequestStatus] = None
    expirationTime: Optional[datetime] = Field(
        None,
        description='The time at which the download will expire.',
        examples=['2018-05-16T15:16:49+02:00'],
    )
    filename: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the download file.\n',
        examples=['WerkgeverDownload.rar'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    latestDownloadTime: Optional[datetime] = Field(
        None,
        description='The time of the most recent download.',
        examples=['2018-05-09T15:16:49+02:00'],
    )
    processingFinishedTime: Optional[datetime] = Field(
        None,
        description='The time when the download become available.',
        examples=['2018-05-09T15:16:49+02:00'],
    )
    requestTime: Optional[datetime] = Field(
        None,
        description='The time at which the download request was created by the user',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None, description='The year of the download request relates to', examples=[2017]
    )


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message922]] = None
    content: Optional[Content193] = None


class Message923(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message923]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdFileGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message923]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdFileGetResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersDownloadrequestsDownloadRequestIdFileGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message925(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ExternalTenant(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (GUID/UUID) of an external tenant.  Input validation; the value of this field MUST match one of the external tenants that is available to this user (check the GetExternalTenants call)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=28)] = Field(
        None,
        description='The user-friendly name of the external tenant',
        examples=['Loket tenant'],
    )


class ExternalUser(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an Azure AD user. The id of an user can be found in in Azure AD application. Within this endpoint there is no input validation for this value, but in order to succesfully perform the Azure AD login flow it must correspond with an actual user id within the provided external tenant.',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Content194(BaseModel):
    externalTenant: Optional[ExternalTenant] = None
    externalUser: Optional[ExternalUser] = None


class ProvidersEmployersUsersEmployerUserIdConfiguredexternaltenantGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message925]] = None
    content: Optional[Content194] = None


class Message926(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersEmployerUserIdConfiguredexternaltenantGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message926]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersUsersEmployerUserIdConfiguredexternaltenantGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersEmployerUserIdConfiguredexternaltenantGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersUsersEmployerUserIdConfiguredexternaltenantPatchRequest(
    BaseModel
):
    externalTenant: Optional[ExternalTenant] = None
    externalUser: Optional[ExternalUser] = None


class Message927(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content195(BaseModel):
    externalTenant: Optional[ExternalTenant] = None
    externalUser: Optional[ExternalUser] = None


class ProvidersEmployersUsersEmployerUserIdConfiguredexternaltenantPatchResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message927]] = None
    content: Optional[Content195] = None


class Message928(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersEmployerUserIdConfiguredexternaltenantPatchResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message928]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersEmployerUserIdConfiguredexternaltenantPatchResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersEmployerUserIdConfiguredexternaltenantPatchResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersUsersUserIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message928]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersUserIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message928]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersUserIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message931(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AccessStatus(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[constr(max_length=255)] = Field(
        None, examples=['Has access to Client']
    )


class TenantRegistrationLevel(Enum):
    provider = 'provider'
    employer = 'employer'


class Tenant(BaseModel):
    description: Optional[constr(max_length=100)] = Field(
        None, examples=['Customer X Azure AD']
    )
    id: Optional[UUID] = Field(
        None,
        description='Id for the tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    tenantRegistrationLevel: Optional[TenantRegistrationLevel] = None


class AzureActiveDirectory(BaseModel):
    tenant: Optional[Tenant] = Field(None, description='The Azure AD tennant')
    userId: Optional[str] = Field(
        None,
        description='The userId as known in the Azure AD of the selected tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ContactInformation21(BaseModel):
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None, description='The e-mail address of the user.', examples=['info@loket.nl']
    )
    phoneNumber: Optional[constr(min_length=1, max_length=15)] = Field(
        None, description='The phone number of the user.', examples=['+31 13-1234567']
    )
    placeOfEmployment: Optional[constr(min_length=1, max_length=24)] = Field(
        None,
        description='The place of employment (standplaats) for the user.',
        examples=['Amsterdam office'],
    )


class LoginMethod(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Only via SSO'])


class PersonalDetails12(BaseModel):
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None, description='The first name of the user', examples=['Susan']
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials of the user', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None, description='The last name of the user', examples=['Bergen']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix of the user', examples=['van']
    )


class UserSpecifiedRole(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Salarisadministrateur']
    )


class Content196(BaseModel):
    accessStatus: Optional[AccessStatus] = Field(
        None, description='indicates the access status of the user.'
    )
    azureActiveDirectory: Optional[AzureActiveDirectory] = None
    contactInformation: Optional[ContactInformation21] = None
    dateTimeCreation: Optional[datetime] = Field(
        None,
        description='The date on which the user was created',
        examples=['2020-01-19'],
    )
    dateTimeLastLogin: Optional[datetime] = Field(
        None,
        description='The date on which the user loged in for the last time',
        examples=['2021-01-19'],
    )
    hasAccessToPayrollingTestData: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to data for payrolling test years',
        examples=[False],
    )
    hasIntegrations: Optional[bool] = Field(
        None,
        description='Indicates if the user has integrations with clients other that Loket',
        examples=[False],
    )
    hasMultiFactorAuthentication: Optional[bool] = Field(
        None,
        description='Indicates if the user has multi factor authentication enabled\n\nCan only be changed from true to false.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDepartmentManager: Optional[bool] = Field(
        None,
        description='Indicates if the user is a department manager',
        examples=[False],
    )
    isLinkedToMultipleEmployers: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to multiple employer.',
        examples=[False],
    )
    loginMethod: Optional[LoginMethod] = Field(
        None, description='The allowedlogin method for the user'
    )
    personalDetails: Optional[PersonalDetails12] = None
    twoFactorAuthenticationRequired: Optional[bool] = Field(
        None,
        description='Indicates whether two factor authentication is required for the user. This setting is only available for login method: Via website en SSO ',
        examples=[False],
    )
    userCustomSpecifiedRole: Optional[constr(max_length=50)] = Field(
        None,
        description='Further specification of the user role.\n',
        examples=['Secretariaat medewerker'],
    )
    userName: Optional[constr(min_length=3, max_length=50)] = Field(
        None, description='The username', examples=['User42']
    )
    userSpecifiedRole: Optional[UserSpecifiedRole] = Field(
        None, description='The Role which the user has specified.'
    )


class ProvidersEmployersUsersUserIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message931]] = None
    content: Optional[Content196] = None


class Message932(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersUserIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message932]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersUserIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Action15(Enum):
    Resend = 'Resend'
    Revoke = 'Revoke'


class ProvidersEmployersUsersUserIdPatchRequest(BaseModel):
    action: Optional[Action15] = Field(
        None, description='indicates the action to perform.'
    )
    destinationForSecret: Optional[constr(min_length=3, max_length=15)] = Field(
        None,
        description='The destination phonenumber to sent the secret to during registration.',
        examples=['0612345678'],
    )


class Message933(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Tenant1(BaseModel):
    description: Optional[constr(max_length=100)] = Field(
        None, examples=['Customer X Azure AD']
    )
    id: Optional[UUID] = Field(
        None,
        description='Id for the tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    tenantRegistrationLevel: Optional[TenantRegistrationLevel] = None


class AzureActiveDirectory1(BaseModel):
    tenant: Optional[Tenant1] = Field(None, description='The Azure AD tennant')
    userId: Optional[str] = Field(
        None,
        description='The userId as known in the Azure AD of the selected tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Content197(BaseModel):
    accessStatus: Optional[AccessStatus] = Field(
        None, description='indicates the access status of the user.'
    )
    azureActiveDirectory: Optional[AzureActiveDirectory1] = None
    contactInformation: Optional[ContactInformation21] = None
    dateTimeCreation: Optional[datetime] = Field(
        None,
        description='The date on which the user was created',
        examples=['2020-01-19'],
    )
    dateTimeLastLogin: Optional[datetime] = Field(
        None,
        description='The date on which the user loged in for the last time',
        examples=['2021-01-19'],
    )
    hasAccessToPayrollingTestData: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to data for payrolling test years',
        examples=[False],
    )
    hasIntegrations: Optional[bool] = Field(
        None,
        description='Indicates if the user has integrations with clients other that Loket',
        examples=[False],
    )
    hasMultiFactorAuthentication: Optional[bool] = Field(
        None,
        description='Indicates if the user has multi factor authentication enabled\n\nCan only be changed from true to false.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDepartmentManager: Optional[bool] = Field(
        None,
        description='Indicates if the user is a department manager',
        examples=[False],
    )
    isLinkedToMultipleEmployers: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to multiple employer.',
        examples=[False],
    )
    loginMethod: Optional[LoginMethod] = Field(
        None, description='The allowedlogin method for the user'
    )
    personalDetails: Optional[PersonalDetails12] = None
    twoFactorAuthenticationRequired: Optional[bool] = Field(
        None,
        description='Indicates whether two factor authentication is required for the user. This setting is only available for login method: Via website en SSO ',
        examples=[False],
    )
    userCustomSpecifiedRole: Optional[constr(max_length=50)] = Field(
        None,
        description='Further specification of the user role.\n',
        examples=['Secretariaat medewerker'],
    )
    userName: Optional[constr(min_length=3, max_length=50)] = Field(
        None, description='The username', examples=['User42']
    )
    userSpecifiedRole: Optional[UserSpecifiedRole] = Field(
        None, description='The Role which the user has specified.'
    )


class ProvidersEmployersUsersUserIdPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message933]] = None
    content: Optional[Content197] = None


class Message934(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersUserIdPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message934]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersUserIdPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Tenant2(BaseModel):
    description: Optional[constr(max_length=100)] = Field(
        None, examples=['Customer X Azure AD']
    )
    id: Optional[UUID] = Field(
        None,
        description='Id for the tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    tenantRegistrationLevel: Optional[TenantRegistrationLevel] = None


class AzureActiveDirectory2(BaseModel):
    tenant: Optional[Tenant2] = Field(None, description='The Azure AD tennant')
    userId: Optional[str] = Field(
        None,
        description='The userId as known in the Azure AD of the selected tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersUsersUserIdPutRequest(BaseModel):
    accessStatus: Optional[AccessStatus] = Field(
        None, description='indicates the access status of the user.'
    )
    azureActiveDirectory: Optional[AzureActiveDirectory2] = None
    contactInformation: Optional[ContactInformation21] = None
    dateTimeCreation: Optional[datetime] = Field(
        None,
        description='The date on which the user was created',
        examples=['2020-01-19'],
    )
    dateTimeLastLogin: Optional[datetime] = Field(
        None,
        description='The date on which the user loged in for the last time',
        examples=['2021-01-19'],
    )
    hasAccessToPayrollingTestData: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to data for payrolling test years',
        examples=[False],
    )
    hasIntegrations: Optional[bool] = Field(
        None,
        description='Indicates if the user has integrations with clients other that Loket',
        examples=[False],
    )
    hasMultiFactorAuthentication: Optional[bool] = Field(
        None,
        description='Indicates if the user has multi factor authentication enabled\n\nCan only be changed from true to false.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDepartmentManager: Optional[bool] = Field(
        None,
        description='Indicates if the user is a department manager',
        examples=[False],
    )
    isLinkedToMultipleEmployers: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to multiple employer.',
        examples=[False],
    )
    loginMethod: Optional[LoginMethod] = Field(
        None, description='The allowedlogin method for the user'
    )
    personalDetails: Optional[PersonalDetails12] = None
    twoFactorAuthenticationRequired: Optional[bool] = Field(
        None,
        description='Indicates whether two factor authentication is required for the user. This setting is only available for login method: Via website en SSO ',
        examples=[False],
    )
    userCustomSpecifiedRole: Optional[constr(max_length=50)] = Field(
        None,
        description='Further specification of the user role.\n',
        examples=['Secretariaat medewerker'],
    )
    userName: Optional[constr(min_length=3, max_length=50)] = Field(
        None, description='The username', examples=['User42']
    )
    userSpecifiedRole: Optional[UserSpecifiedRole] = Field(
        None, description='The Role which the user has specified.'
    )


class ProvidersEmployersUsersUserIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message934]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersUserIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message934]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersUserIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersUsersUserIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message934]] = None
    version: Optional[Version] = None


class Message938(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ContactInformation24(BaseModel):
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The telephone number of the employer',
        examples=['(088) 31 11150'],
    )


class FieldEmbeddedItem115(BaseModel):
    address: Optional[Address21] = None
    branch: Optional[Branch] = None
    companyName: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )
    contact: Optional[Contact1] = None
    contactInformation: Optional[ContactInformation24] = None
    employerLogo: Optional[str] = Field(
        None,
        description='The location of the logo of the employer. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/providers/employers/{guid}/logo/{version}'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    providerLogo: Optional[str] = Field(
        None,
        description='This logo is displayed in the interface of loket.nl. if null no deviating logo is present and the normal provider logo should be used (aquire the URL to the logo via ../v2/providers)',
        examples=[
            'https://api.loket.nl/v2/providers/employers/{guid}/deviatingproviderlogo'
        ],
    )
    providerSettings: Optional[ProviderSettings1] = None


class ProvidersEmployersUsersUserIdEmployersGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message938]] = None
    field_embedded: Optional[List[FieldEmbeddedItem115]] = Field(
        None, alias='_embedded'
    )


class Message939(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersUserIdEmployersGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message939]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersUsersUserIdEmployersGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdEmployersGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message940(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Application1(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isBlocked: Optional[bool] = Field(
        None,
        description='Indicates whether the application as a whole is blocked (for all users)',
        examples=[True],
    )
    logo: Optional[str] = Field(
        None,
        description='An URI to the logo of the client',
        examples=['https://api.loket.nl/v2/application/{applicationId}/logo/{version}'],
    )
    name: Optional[constr(max_length=100)] = Field(None, examples=['ABC international'])


class FieldEmbedded2(BaseModel):
    application: Optional[Application1] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The time the integration was succesfully initiated',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    isBlocked: Optional[bool] = Field(
        None,
        description='Indicates whether the application user combination is blocked (for this single user)',
        examples=[True],
    )
    lastLogin: Optional[datetime] = Field(
        None,
        description='The time the integration was last active',
        examples=['2018-05-08T15:16:49+02:00'],
    )


class ProvidersEmployersUsersUserIdIntegrationsGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message940]] = None
    field_embedded: Optional[FieldEmbedded2] = Field(None, alias='_embedded')


class Message941(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersUserIdIntegrationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message941]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersUsersUserIdIntegrationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdIntegrationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message941]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message941]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdPutRequest(BaseModel):
    application: Optional[Application1] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The time the integration was succesfully initiated',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    isBlocked: Optional[bool] = Field(
        None,
        description='Indicates whether the application user combination is blocked (for this single user)',
        examples=[True],
    )
    lastLogin: Optional[datetime] = Field(
        None,
        description='The time the integration was last active',
        examples=['2018-05-08T15:16:49+02:00'],
    )


class Message944(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content198(BaseModel):
    application: Optional[Application1] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The time the integration was succesfully initiated',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    isBlocked: Optional[bool] = Field(
        None,
        description='Indicates whether the application user combination is blocked (for this single user)',
        examples=[True],
    )
    lastLogin: Optional[datetime] = Field(
        None,
        description='The time the integration was last active',
        examples=['2018-05-08T15:16:49+02:00'],
    )


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message944]] = None
    content: Optional[Content198] = None


class Message945(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message945]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdLogoGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdIntegrationsApplicationIdLogoGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message946(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class NotificationType(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[constr(max_length=70)] = Field(
        None, examples=['Start of employment']
    )


class FieldEmbeddedItem116(BaseModel):
    createNumberOfDaysBeforeEvent: Optional[conint(ge=0, le=99)] = Field(
        None,
        description='The number of days that the notification is created befor the event takes place.',
        examples=[30],
    )
    isEnabled: Optional[bool] = Field(
        None, description='Enable or disable a notification for a user'
    )
    notificationType: Optional[NotificationType] = Field(
        None, description='The notification set'
    )
    receiveDepartmentSignalsOnly: Optional[bool] = Field(
        None,
        description='Only receive notification for your departments.\nNot relevant if the user is not a department manager.',
        examples=[False],
    )
    sendMailWhenNotificationIsCreated: Optional[bool] = Field(
        None,
        description='send an email when on creation of the notification',
        examples=[False],
    )


class ProvidersEmployersUsersUserIdNotificationsettingsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message946]] = None
    field_embedded: Optional[List[List[FieldEmbeddedItem116]]] = Field(
        None, alias='_embedded'
    )


class Message947(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersUserIdNotificationsettingsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message947]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersUsersUserIdNotificationsettingsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdNotificationsettingsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class NotificationSet(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['Salarisadministrateur']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Notification(BaseModel):
    createNumberOfDaysBeforeEvent: Optional[conint(ge=0, le=99)] = Field(
        None,
        description='The number of days that the notification is created befor the event takes place.',
        examples=[30],
    )
    isEnabled: Optional[bool] = Field(
        None, description='Enable or disable a notification for a user'
    )
    notificationType: Optional[NotificationType] = Field(
        None, description='The notification set'
    )
    receiveDepartmentSignalsOnly: Optional[bool] = Field(
        None,
        description='Only receive notification for your departments.\nNot relevant if the user is not a department manager.',
        examples=[False],
    )
    sendMailWhenNotificationIsCreated: Optional[bool] = Field(
        None,
        description='send an email when on creation of the notification',
        examples=[False],
    )


class ProvidersEmployersUsersUserIdNotificationsettingsPatchRequest(BaseModel):
    notificationSet: Optional[NotificationSet] = None
    notifications: Optional[List[Notification]] = None


class Message948(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersUsersUserIdNotificationsettingsPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message948]] = None
    content: Optional[Dict[str, Any]] = None


class Message949(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersUsersUserIdNotificationsettingsPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message949]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersUsersUserIdNotificationsettingsPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersUsersUserIdNotificationsettingsPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message950(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class HttpVerb(Enum):
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'


class Transition(BaseModel):
    action: Optional[UUID] = Field(
        None,
        description='The unique identifier for the action to be taken',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    description: Optional[str] = Field(
        None, description='Description of the action', examples=['Approve']
    )


class AllowedTransition(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None,
        description='The description of the transition (task)',
        examples=['Controleer de vergoedingen'],
    )
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.loket.nl/v2/providers/employers/workflows/{workflowId}/transition'
        ],
    )
    httpVerb: Optional[HttpVerb] = None
    transitions: Optional[List[Transition]] = Field(
        None,
        examples=[
            [
                {
                    'action': 'fabf3b25-abf9-4e8c-a8f7-81400d1b0e96',
                    'description': 'Approve',
                },
                {
                    'action': 'abc31d45-f593-4d73-8078-6caba9cebdcc',
                    'description': 'Reject',
                },
            ]
        ],
    )


class Role(BaseModel):
    description: Optional[str] = Field(
        None, description='A description of the role.', examples=['Employer']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class User(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class Assignee(BaseModel):
    role: Optional[Role] = None
    user: Optional[User] = None


class InitiatedBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class LastModifiedBy21(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class Status7(BaseModel):
    key: Optional[int] = Field(None, description='The unique identifier', examples=[1])
    value: Optional[str] = Field(None, examples=['In progress'])


class Trigger(BaseModel):
    description: Optional[str] = Field(None, examples=['Address change for employee'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class WorkflowTemplate(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None, examples=['Approval by employer']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    version: Optional[int] = Field(
        None,
        description='The version of the workflow template this workflow was based on. Changes to a workflow template do not affect existing workflows.',
        examples=[2],
    )


class Content199(BaseModel):
    allowedTransitions: Optional[List[AllowedTransition]] = Field(
        None,
        description='In this object the posible transitions are returned.\nBy sending a request to the `href` with the given `httpVerb` and one of the options given in `transitions` in the body. The workflow is transitioned to the given state.',
    )
    assignee: Optional[Assignee] = Field(
        None,
        description='A workflow is either assigned to a user or a role. A role can be filled by multiple users.',
    )
    data: Optional[str] = Field(
        None,
        description='A JSON representation of the mutation/data regarding this workflow',
        examples=[
            {
                'address': {
                    'city': 'Leiden',
                    'country': {'key': 1},
                    'houseNumber': 12,
                    'houseNumberAddition': 'D',
                    'postalCode': '1234 AA',
                    'street': 'Voordijk',
                }
            }
        ],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initiatedBy: Optional[InitiatedBy] = None
    initiatedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    lastModifiedBy: Optional[LastModifiedBy21] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='date and time on which the last modification on the workflow was performed. This can be either by the system or a user.',
        examples=['2019-11-23T11:14:06Z'],
    )
    status: Optional[Status7] = Field(
        None, description='Indicates the status of the workflow as a whole.'
    )
    trigger: Optional[Trigger] = Field(
        None,
        description='Indicates the trigger that started the workflow.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate] = Field(
        None,
        description='Indicates what workflow template was used to initiate the workflow.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class ProvidersEmployersWorkflowsWorkflowIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message950]] = None
    content: Optional[Content199] = None


class Message951(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersWorkflowsWorkflowIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message951]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersWorkflowsWorkflowIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersWorkflowsWorkflowIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class AllowedTransition1(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None,
        description='The description of the transition (task)',
        examples=['Controleer de vergoedingen'],
    )
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.loket.nl/v2/providers/employers/workflows/{workflowId}/transition'
        ],
    )
    httpVerb: Optional[HttpVerb] = None
    transitions: Optional[List[Transition]] = Field(
        None,
        examples=[
            [
                {
                    'action': 'fabf3b25-abf9-4e8c-a8f7-81400d1b0e96',
                    'description': 'Approve',
                },
                {
                    'action': 'abc31d45-f593-4d73-8078-6caba9cebdcc',
                    'description': 'Reject',
                },
            ]
        ],
    )


class Assignee1(BaseModel):
    role: Optional[Role] = None
    user: Optional[User] = None


class ProvidersEmployersWorkflowsWorkflowIdPutRequest(BaseModel):
    allowedTransitions: Optional[List[AllowedTransition1]] = Field(
        None,
        description='In this object the posible transitions are returned.\nBy sending a request to the `href` with the given `httpVerb` and one of the options given in `transitions` in the body. The workflow is transitioned to the given state.',
    )
    assignee: Optional[Assignee1] = Field(
        None,
        description='A workflow is either assigned to a user or a role. A role can be filled by multiple users.',
    )
    data: Optional[str] = Field(
        None,
        description='A JSON representation of the mutation/data regarding this workflow',
        examples=[
            {
                'address': {
                    'city': 'Leiden',
                    'country': {'key': 1},
                    'houseNumber': 12,
                    'houseNumberAddition': 'D',
                    'postalCode': '1234 AA',
                    'street': 'Voordijk',
                }
            }
        ],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initiatedBy: Optional[InitiatedBy] = None
    initiatedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    lastModifiedBy: Optional[LastModifiedBy21] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='date and time on which the last modification on the workflow was performed. This can be either by the system or a user.',
        examples=['2019-11-23T11:14:06Z'],
    )
    status: Optional[Status7] = Field(
        None, description='Indicates the status of the workflow as a whole.'
    )
    trigger: Optional[Trigger] = Field(
        None,
        description='Indicates the trigger that started the workflow.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate] = Field(
        None,
        description='Indicates what workflow template was used to initiate the workflow.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class Message952(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AllowedTransition2(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None,
        description='The description of the transition (task)',
        examples=['Controleer de vergoedingen'],
    )
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.loket.nl/v2/providers/employers/workflows/{workflowId}/transition'
        ],
    )
    httpVerb: Optional[HttpVerb] = None
    transitions: Optional[List[Transition]] = Field(
        None,
        examples=[
            [
                {
                    'action': 'fabf3b25-abf9-4e8c-a8f7-81400d1b0e96',
                    'description': 'Approve',
                },
                {
                    'action': 'abc31d45-f593-4d73-8078-6caba9cebdcc',
                    'description': 'Reject',
                },
            ]
        ],
    )


class Assignee2(BaseModel):
    role: Optional[Role] = None
    user: Optional[User] = None


class Content200(BaseModel):
    allowedTransitions: Optional[List[AllowedTransition2]] = Field(
        None,
        description='In this object the posible transitions are returned.\nBy sending a request to the `href` with the given `httpVerb` and one of the options given in `transitions` in the body. The workflow is transitioned to the given state.',
    )
    assignee: Optional[Assignee2] = Field(
        None,
        description='A workflow is either assigned to a user or a role. A role can be filled by multiple users.',
    )
    data: Optional[str] = Field(
        None,
        description='A JSON representation of the mutation/data regarding this workflow',
        examples=[
            {
                'address': {
                    'city': 'Leiden',
                    'country': {'key': 1},
                    'houseNumber': 12,
                    'houseNumberAddition': 'D',
                    'postalCode': '1234 AA',
                    'street': 'Voordijk',
                }
            }
        ],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initiatedBy: Optional[InitiatedBy] = None
    initiatedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    lastModifiedBy: Optional[LastModifiedBy21] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='date and time on which the last modification on the workflow was performed. This can be either by the system or a user.',
        examples=['2019-11-23T11:14:06Z'],
    )
    status: Optional[Status7] = Field(
        None, description='Indicates the status of the workflow as a whole.'
    )
    trigger: Optional[Trigger] = Field(
        None,
        description='Indicates the trigger that started the workflow.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate] = Field(
        None,
        description='Indicates what workflow template was used to initiate the workflow.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class ProvidersEmployersWorkflowsWorkflowIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message952]] = None
    content: Optional[Content200] = None


class Message953(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersWorkflowsWorkflowIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message953]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersWorkflowsWorkflowIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersWorkflowsWorkflowIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersWorkflowsWorkflowIdTransitionPostRequest(BaseModel):
    pass


class ProvidersEmployersWorkflowsWorkflowIdTransitionPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message953]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersWorkflowsWorkflowIdTransitionPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message953]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersWorkflowsWorkflowIdTransitionPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersWorkflowsWorkflowIdTransitionPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message953]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message953]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message958(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CreatedBy21(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class Trigger3(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None, examples=['Address change for employee']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class WorkflowTemplate3(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None, examples=['Approval by employer']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Content201(BaseModel):
    createdBy: Optional[CreatedBy21] = None
    createdOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy21] = None
    lastModifiedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    trigger: Optional[Trigger3] = Field(
        None,
        description='Indicates the workflow trigger to be configured.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate3] = Field(
        None,
        description='Indicates what workflow template will be used to initiate a workflow when the trigger takes place.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message958]] = None
    content: Optional[Content201] = None


class Message959(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message959]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdPutRequest(
    BaseModel
):
    createdBy: Optional[CreatedBy21] = None
    createdOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy21] = None
    lastModifiedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    trigger: Optional[Trigger3] = Field(
        None,
        description='Indicates the workflow trigger to be configured.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate3] = Field(
        None,
        description='Indicates what workflow template will be used to initiate a workflow when the trigger takes place.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class Message960(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content202(BaseModel):
    createdBy: Optional[CreatedBy21] = None
    createdOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy21] = None
    lastModifiedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    trigger: Optional[Trigger3] = Field(
        None,
        description='Indicates the workflow trigger to be configured.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate3] = Field(
        None,
        description='Indicates what workflow template will be used to initiate a workflow when the trigger takes place.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message960]] = None
    content: Optional[Content202] = None


class Message961(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message961]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersWorkflowtriggermappingsWorkflowTriggerMappingIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message961]] = None
    version: Optional[Version] = None


class Message963(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FurtherIndication35(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address23(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country43] = None
    furtherIndication: Optional[FurtherIndication35] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234AA']
    )
    province: Optional[Province] = Field(None, description='A Dutch province')
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Contact3(BaseModel):
    function: Optional[constr(max_length=50)] = Field(
        None,
        description='The job title/function of the contact of the employer',
        examples=['Manager'],
    )
    name: Optional[constr(max_length=50)] = Field(
        None,
        description='Name of the contact of the employer',
        examples=['Henk de Vries'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The general phone number of the employer',
        examples=['013-12345678'],
    )


class ContactInformation25(BaseModel):
    emailAddress: Optional[EmailStr] = Field(
        None,
        description='The email address of the employer',
        examples=['info@voorbeeldbv.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None, description='The fax number of the employer', examples=['(088) 31 11149']
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The telephone number of the employer',
        examples=['(088) 31 11150'],
    )
    website: Optional[constr(max_length=255)] = Field(
        None, description='The website of the employer', examples=['www.voorbeeldbv.nl']
    )


class Country51(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication36(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress11(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country51] = None
    furtherIndication: Optional[FurtherIndication36] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    poBox: Optional[int] = Field(None, description='Post office box', examples=[5000])
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ProviderSettings3(BaseModel):
    administrationNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='A free field that is most commonly used to store the Debtors Number the provider uses for the employer. This field is used as a key field in some of the existing SOAP webservices.',
        examples=['SR2'],
    )
    groupCode: Optional[int] = Field(
        None,
        description='The groupcode is used for grouping employers. It is used for filtering output and processes (only include employers in group 40 in this report).',
        examples=[40],
    )
    parentEmployerForConsolidatedOverviews: Optional[int] = Field(
        None,
        description='This field is used to link employers in order to generate reports containing the information of all the linked employers. By applying this method, infinite amount of employers can be linked.',
        examples=[9933],
    )
    sendEmailWhenSalarySlipIsAvailable: Optional[bool] = Field(
        None,
        description='Indicates whether an e-mail should be sent to an employee if a salary slip becomes available in the employee portal (loket.nl\'s "werknemer.loket")',
        examples=[True],
    )


class Content203(BaseModel):
    address: Optional[Address23] = None
    branch: Optional[Branch] = None
    chamberOfCommerceNumber: Optional[constr(max_length=35)] = Field(
        None,
        description='Chamber of commerce number. In Dutch "Kamer van koophandel" number',
        examples=['18124676'],
    )
    companyName: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )
    contact: Optional[Contact3] = None
    contactInformation: Optional[ContactInformation25] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress11] = None
    employerLogo: Optional[str] = Field(
        None,
        description='The location of the logo of the employer. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/providers/employers/{guid}/logo/{version}'],
    )
    employerNumber: Optional[int] = Field(
        None,
        description='The employer number is used in various overviews and exports to identify a specific employer in Loket (please note: this is not the identifier used in the REST API).',
        examples=[20720],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    legalForm: Optional[LegalForm] = None
    providerLogo: Optional[str] = Field(
        None,
        description='This logo is displayed in the interface of loket.nl. if null no deviating logo is present and the normal provider logo should be used (aquire the URL to the logo via ../v2/providers)',
        examples=[
            'https://api.loket.nl/v2/providers/employers/{guid}/deviatingproviderlogo'
        ],
    )
    providerSettings: Optional[ProviderSettings3] = None
    sbi: Optional[Sbi] = Field(
        None,
        description="The 'Standard Industrial Classifications (Dutch SBI 2008, NACE and ISIC)' as defined bij the Dutch chamber of commerce",
    )


class ProvidersEmployersEmployerIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message963]] = None
    content: Optional[Content203] = None


class Message964(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message964]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Country52(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication37(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address24(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country52] = None
    furtherIndication: Optional[FurtherIndication37] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234AA']
    )
    province: Optional[Province] = Field(None, description='A Dutch province')
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Country53(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication38(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress12(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country53] = None
    furtherIndication: Optional[FurtherIndication38] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    poBox: Optional[int] = Field(None, description='Post office box', examples=[5000])
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ProvidersEmployersEmployerIdPutRequest(BaseModel):
    address: Optional[Address24] = None
    branch: Optional[Branch] = None
    chamberOfCommerceNumber: Optional[constr(max_length=35)] = Field(
        None,
        description='Chamber of commerce number. In Dutch "Kamer van koophandel" number',
        examples=['18124676'],
    )
    companyName: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )
    contact: Optional[Contact3] = None
    contactInformation: Optional[ContactInformation25] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress12] = None
    employerLogo: Optional[str] = Field(
        None,
        description='The location of the logo of the employer. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/providers/employers/{guid}/logo/{version}'],
    )
    employerNumber: Optional[int] = Field(
        None,
        description='The employer number is used in various overviews and exports to identify a specific employer in Loket (please note: this is not the identifier used in the REST API).',
        examples=[20720],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    legalForm: Optional[LegalForm] = None
    providerLogo: Optional[str] = Field(
        None,
        description='This logo is displayed in the interface of loket.nl. if null no deviating logo is present and the normal provider logo should be used (aquire the URL to the logo via ../v2/providers)',
        examples=[
            'https://api.loket.nl/v2/providers/employers/{guid}/deviatingproviderlogo'
        ],
    )
    providerSettings: Optional[ProviderSettings3] = None
    sbi: Optional[Sbi] = Field(
        None,
        description="The 'Standard Industrial Classifications (Dutch SBI 2008, NACE and ISIC)' as defined bij the Dutch chamber of commerce",
    )


class Message965(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country54(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication39(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address25(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country54] = None
    furtherIndication: Optional[FurtherIndication39] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234AA']
    )
    province: Optional[Province] = Field(None, description='A Dutch province')
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Country55(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication40(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress13(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country55] = None
    furtherIndication: Optional[FurtherIndication40] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    poBox: Optional[int] = Field(None, description='Post office box', examples=[5000])
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Content204(BaseModel):
    address: Optional[Address25] = None
    branch: Optional[Branch] = None
    chamberOfCommerceNumber: Optional[constr(max_length=35)] = Field(
        None,
        description='Chamber of commerce number. In Dutch "Kamer van koophandel" number',
        examples=['18124676'],
    )
    companyName: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )
    contact: Optional[Contact3] = None
    contactInformation: Optional[ContactInformation25] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress13] = None
    employerLogo: Optional[str] = Field(
        None,
        description='The location of the logo of the employer. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/providers/employers/{guid}/logo/{version}'],
    )
    employerNumber: Optional[int] = Field(
        None,
        description='The employer number is used in various overviews and exports to identify a specific employer in Loket (please note: this is not the identifier used in the REST API).',
        examples=[20720],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    legalForm: Optional[LegalForm] = None
    providerLogo: Optional[str] = Field(
        None,
        description='This logo is displayed in the interface of loket.nl. if null no deviating logo is present and the normal provider logo should be used (aquire the URL to the logo via ../v2/providers)',
        examples=[
            'https://api.loket.nl/v2/providers/employers/{guid}/deviatingproviderlogo'
        ],
    )
    providerSettings: Optional[ProviderSettings3] = None
    sbi: Optional[Sbi] = Field(
        None,
        description="The 'Standard Industrial Classifications (Dutch SBI 2008, NACE and ISIC)' as defined bij the Dutch chamber of commerce",
    )


class ProvidersEmployersEmployerIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message965]] = None
    content: Optional[Content204] = None


class Message966(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message966]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message966]] = None
    version: Optional[Version] = None


class Message968(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Department10(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Verkoop'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Function10(BaseModel):
    description: Optional[constr(max_length=50)] = Field(None, examples=['Directeur'])
    group: Optional[constr(max_length=5)] = Field(None, examples=['internal'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class OrganizationalEntity(BaseModel):
    department: Optional[Department10] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[constr(max_length=50)] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[constr(max_length=5)] = Field(
        None,
        description='The deviating function group description of the employment. Only applies when a deviating function description is defined.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit17] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    function: Optional[Function10] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    internalTelephoneExtensionNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the standard working location (standplaats) for the employment.',
        examples=['678'],
    )
    placeOfEmployment: Optional[constr(max_length=24)] = Field(
        None,
        description='The standard working location (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class FieldEmbeddedItem117(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    organizationalEntity: Optional[OrganizationalEntity] = None


class ProvidersEmployersEmployerIdActualorganizationalentitiesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message968]] = None
    field_embedded: Optional[List[FieldEmbeddedItem117]] = Field(
        None, alias='_embedded'
    )


class Message969(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdActualorganizationalentitiesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message969]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdActualorganizationalentitiesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdActualorganizationalentitiesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message970(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PayrollPeriodType11(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Maand'])


class Wage1(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected.\n',
        examples=[True],
    )
    employerCosts: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The cost for the employer for this employee.\n',
        examples=[3500],
    )
    employerCostsType: Optional[EmployerCostsType] = Field(
        None,
        description='Indicates whether the employer costs are hourly costs or periodic costs. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    grossWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross wage for the employee\n', examples=[2300]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a Periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isGrossWageFullTime: Optional[bool] = Field(
        None,
        description='Indicates whether the given grossWage is either a full-time wage or a part-time wage. Full-time wage is the default value (isGrossWageFulltime = true) and Loket.nl recommends to use this option. A full-time wage takes into account the part-time percentage of an employment. While a part-time wage does not. E.g. A full-time wage of 2400 euro’s is registered. The employments works 20 out of 40 hours (40 fours is a full-time shift) thus having a 20/40 = 50% part-time percentage. The part-time hours (deviatingHoursPerWeek) are accessible through the endpoint for working hours of an employement. In the wage calculation Loket.nl will divide the grossWage component by 50% resulting in a grossWage of 1200 euro’s. In the case of a part-time wage the part-time percentage will be ignored.\n',
        examples=[True],
    )
    netWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='Net wage for the employment\n', examples=[2400]
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description="A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee's level, rank or status within the employer's organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n",
    )
    payrollPeriodType: Optional[PayrollPeriodType11] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4). The value of this field is used to further specify the meaning of grossWageType, netWageType and employerCostsType. When the key fields of these three wage types have a value 1 (meaning periodic wage), the payrollPeriodType field shows the period type (month, 4 weeks or week) applicable to the wages for the employment. E.g. If the value for grossWageType.key = 1 (periodic wage) and the value for payrollPeriodType.key = 1 (meaning Month), then the wage registerd in grossWage is a monthly wage. Note that in cases where the wage type is an hourly wage (grossWageType.key = 2), the payrollPeriodType should be ignored.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n__Note__ It is posible to have no wage record.\n',
        examples=['1995-05-21'],
    )


class FieldEmbeddedItem118(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    wage: Optional[Wage1] = None


class ProvidersEmployersEmployerIdActualwagesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message970]] = None
    field_embedded: Optional[List[FieldEmbeddedItem118]] = Field(
        None, alias='_embedded'
    )


class Message971(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdActualwagesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message971]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdActualwagesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdActualwagesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message972(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CalculateUsingWorkPattern10(BaseModel):
    daysDailyRate: Optional[bool] = Field(
        None,
        description='Indicates whether the number of days of dailyrate should be calculated based on the workpattern. The number of days are normally calculated by the working hours.',
        examples=[False],
    )
    deviatingDaysAndHours: Optional[bool] = Field(
        None,
        description='Indication whether  the deviating hours per week and deviating SV-days per period are to be automatically calculated based on the workpattern. Please note (!) that any values in the deviatingHoursPerWeek and deviatingSvDaysPerPeriod fields (of this workingHours record) will be overwritten based on this calculation if true (and endDate=NULL)!',
        examples=[False],
    )
    hoursBrokenPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern in broken periods. These are periods of in or out of service.',
        examples=[False],
    )
    hoursRegularPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern for regular periods.',
        examples=[False],
    )
    leaveHours: Optional[bool] = Field(
        None,
        description='Indicates whether then leave balances (verlof) are to be calculated based on the workpattern.  If set to false and the user is not linked to a leave policy with `applyLeaveSchedule` set to true the following fields are used for the calculation `deviatingHoursPerWeek` if null `shift.fullTimeHoursPerWeek` is used\n',
        examples=[True],
    )


class FlexibleHoursContract10(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Minimum uren contract']
    )


class Shift20(BaseModel):
    bonusPercentage: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift.\n',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.\n',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None, description='The number for the shift.\n', examples=[1]
    )


class WorkPattern10(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class WorkingHours1(BaseModel):
    aggregatedHoursPerWeek: Optional[confloat(ge=0.01, le=168.0)] = Field(
        None,
        description="This read-only field provides the user with a single point of knowledge as to what number of hours per week employment is actually registered in regards to the payrolling process. This number may be respectively based on the workpattern, deviating hours per week or shift hours. If the employment is an 'on call employment' (oproepkracht/invalkracht) the number is either NULL or represents the min-hours if that is applicable.\nThis field is especially useful for third-parties that want to know the number of hours per week (without having to apply specific Loket logic). I.e. this field is not visible in Loket GUI.",
        examples=[24],
    )
    averageHoursPerWeek: Optional[confloat(ge=0.0, le=168.0)] = Field(
        None,
        description='This field can be used to register the average hours per week an employment with varying hours works. For example, 0 hour contracts and min max contracts. The value of this field does NOT directly affect the payrolling proces.',
        examples=[32],
    )
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor, purely for administrative purposes. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100. \nPlease note that this field is not used in the actual payroll proces! For the payroll process the number of hours is used.',
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern10] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object). Onderliggende elementen geven aan of specifieke waardes berekend moeten worden op basis van het twee wekelijks werkpatroon `workPattern`\n',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='If this field is empty the fulltime hours are based as defined by the shift, this optional field is used to register an overwriting value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[conint(ge=1, le=23)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value.',
        examples=[20],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.\n',
        examples=['2018-10-23'],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract10] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.',
        examples=[True],
    )
    shift: Optional[Shift20] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    shiftRateSickLeave: Optional[ShiftRateSickLeave] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shiftRateSickLeave` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n',
        examples=['2018-01-01'],
    )
    workPattern: Optional[WorkPattern10] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class FieldEmbeddedItem119(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    workingHours: Optional[WorkingHours1] = None


class ProvidersEmployersEmployerIdActualworkinghoursGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message972]] = None
    field_embedded: Optional[List[FieldEmbeddedItem119]] = Field(
        None, alias='_embedded'
    )


class Message973(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdActualworkinghoursGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message973]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdActualworkinghoursGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdActualworkinghoursGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message974(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem120(BaseModel):
    clientNumber: Optional[int] = Field(
        None,
        description='The client number is a unique number for administrations that are used for payrolling. This field has no value if the administration is not used for payrolling.',
        examples=[1234],
    )
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day the administration is active.\n',
        examples=['2020-12-31'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isPayrollAdministration: Optional[bool] = Field(
        None,
        description='Indicates whether the administration is a payroll administration\n',
        examples=[True],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The first day the administration is active.\n',
        examples=['2016-01-01'],
    )


class ProvidersEmployersEmployerIdAdministrationsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message974]] = None
    field_embedded: Optional[List[FieldEmbeddedItem120]] = Field(
        None, alias='_embedded'
    )


class Message975(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdAdministrationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message975]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdAdministrationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdAdministrationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message976(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem121(BaseModel):
    creationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the announcement was announced.',
        examples=['2018-02-05'],
    )
    description: Optional[constr(max_length=7500)] = Field(
        None,
        description='description of the announcement',
        examples=['Schaal X krijgt een verhoging van Y procent.'],
    )
    effectiveDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the announcement takes effect',
        examples=['2018-02-05'],
    )
    expirationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the announcement expires',
        examples=['2018-02-05'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isExpired: Optional[bool] = Field(
        None,
        description='Indicates whether the announcement has expired.',
        examples=[False],
    )
    isRead: Optional[bool] = Field(
        None,
        description='Indicates whether the announcement has been read',
        examples=[False],
    )
    subject: Optional[constr(max_length=50)] = Field(
        None, description='subject of the announcement', examples=['Schaalverhoging']
    )


class ProvidersEmployersEmployerIdAnnouncementsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message976]] = None
    field_embedded: Optional[List[FieldEmbeddedItem121]] = Field(
        None, alias='_embedded'
    )


class Message977(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdAnnouncementsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message977]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdAnnouncementsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdAnnouncementsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message978(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ApplicationType(BaseModel):
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[Any] = Field(
        None,
        description='Example values: - arbeidsvoorwaarden - data-analyse  - document management - financieel - integratie - pensioenuitvoerder - planning - portal - proces - rapportage - tijdregistratie - verzuim/verzekering',
        examples=['planning'],
    )


class TargetIndustry(BaseModel):
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    value: Optional[str] = Field(
        None,
        description='-  accountancy & administratie -  agrosector -  bouw, installatie & infrastructuur -  cultuur & sport -  energie -  financiële dienstverlening -  gezondheidszorg & maatschappelijke dienstverlening -  groothandel -  horeca -  ICT, media & communicatie -  industrie -  kinderopvang -  onderwijs & training -  onroerend goed -  persoonlijke dienstverlening & non-profit -  retail -  vervoer, post & opslag -  water & afval -  zakelijke dienstverlening       ',
    )


class FieldEmbeddedItem122(BaseModel):
    activationUrl: Optional[str] = Field(
        None,
        description='An URI to a webpage of the application where the user can initiate the integration.',
        examples=['https://application.nl'],
    )
    applicationTypes: Optional[List[ApplicationType]] = Field(
        None, description='The type of software e.g. planning or finiance.'
    )
    dateAddedToStore: Optional[date_aliased] = Field(
        None,
        description='The date to which the application was added to the store',
        examples=['2021-12-31'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isActivatedForEmployer: Optional[bool] = Field(
        None,
        description='Indicates whether the application is configured for the given employer.\nIf one (or more) users with access to the employer have a connection with the application (the isBlocked boolean from both application and application user are ignored for this field)',
        examples=[True],
    )
    isHighlighted: Optional[bool] = Field(
        None,
        description='Indicates whether the application is highlighted (shown at the top of the list by default)',
        examples=[True],
    )
    logo: Optional[str] = Field(
        None,
        description='An URI to the logo of the application',
        examples=[
            'https://api.loket.nl/v2/applications/{applicationId}/logo/{version}'
        ],
    )
    marketplaceDescription: Optional[str] = Field(
        None,
        description='A description of the application. The description must be in HTML.',
        examples=['ABC international is the worlds leading etc.'],
    )
    marketplaceSummary: Optional[constr(max_length=200)] = Field(
        None,
        description='A short summary of the application. The description must be in plain text.',
        examples=['World-leading application for excellent employers'],
    )
    name: Optional[constr(max_length=100)] = Field(None, examples=['ABC international'])
    targetIndustries: Optional[List[TargetIndustry]] = Field(
        None, description='The industries for which the software is primarily used'
    )
    website: Optional[str] = Field(
        None,
        description='An URI to the website of the application',
        examples=['https://application.nl'],
    )


class ProvidersEmployersEmployerIdApplicationsGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message978]] = None
    field_embedded: Optional[List[FieldEmbeddedItem122]] = Field(
        None, alias='_embedded'
    )


class Message979(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdApplicationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message979]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdApplicationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdApplicationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message980(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem123(BaseModel):
    createdOn: Optional[datetime] = Field(
        None,
        description='The time the integration was succesfully initiated',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    isblocked: Optional[bool] = Field(
        None,
        description='Indicates whether this specific user application link is blocked',
        examples=[True],
    )
    lastLogin: Optional[datetime] = Field(
        None,
        description='The last time the integration was active',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    user: Optional[User] = None


class ProvidersEmployersEmployerIdApplicationsApplicationIdUsersGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message980]] = None
    field_embedded: Optional[List[FieldEmbeddedItem123]] = Field(
        None, alias='_embedded'
    )


class Message981(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdApplicationsApplicationIdUsersGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message981]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdApplicationsApplicationIdUsersGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdApplicationsApplicationIdUsersGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message982(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class EmployeeOrConceptEmployee(Enum):
    employee = 'employee'
    conceptEmployee = 'conceptEmployee'
    notFound = 'notFound'


class Participant(BaseModel):
    email: Optional[str] = Field(
        None,
        description='The email adresses of the initiator',
        examples=['test@test.com'],
    )
    employeeOrConceptEmployee: Optional[EmployeeOrConceptEmployee] = Field(
        None,
        description='This field determines what the id belongs to. It may belong to an employee or a concept employee or no associated entity was found.',
    )
    firstName: Optional[str] = Field(
        None, description='The first name of the initiator', examples=['Ben']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastName: Optional[str] = Field(
        None, description='The last name of the initiator', examples=['Hur']
    )


class RequestedBy12(BaseModel):
    email: Optional[str] = Field(
        None,
        description='The email adresses of the initiator',
        examples=['test@test.com'],
    )
    firstName: Optional[str] = Field(
        None, description='The first name of the initiator', examples=['Ben']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastName: Optional[str] = Field(
        None, description='The last name of the initiator', examples=['Hur']
    )


class Status10(Enum):
    sent = 'sent'
    completed = 'completed'
    denied = 'denied'
    shared = 'shared'


class FieldEmbeddedItem124(BaseModel):
    invitedDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the invite for the Assessment was send',
        examples=['2022-02-22'],
    )
    participant: Optional[Participant] = Field(
        None, description='Information about the participant.'
    )
    requestedBy: Optional[RequestedBy12] = Field(
        None, description='Information about the requestor / initiator.'
    )
    resultUrl: Optional[str] = Field(
        None,
        description='The url on which the report can be found',
        examples=[
            'https://portal.theselectionlab.com/candidate?email=<email>&user_type=recruiter'
        ],
    )
    status: Optional[Status10] = None


class ProvidersEmployersEmployerIdAssessmentsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message982]] = None
    field_embedded: Optional[List[FieldEmbeddedItem124]] = Field(
        None, alias='_embedded'
    )


class Message983(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdAssessmentsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message983]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdAssessmentsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdAssessmentsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message984(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AllowedTransition3(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None,
        description='The description of the transition (task)',
        examples=['Controleer de vergoedingen'],
    )
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.loket.nl/v2/providers/employers/workflows/{workflowId}/transition'
        ],
    )
    httpVerb: Optional[HttpVerb] = None
    transitions: Optional[List[Transition]] = Field(
        None,
        examples=[
            [
                {
                    'action': 'fabf3b25-abf9-4e8c-a8f7-81400d1b0e96',
                    'description': 'Approve',
                },
                {
                    'action': 'abc31d45-f593-4d73-8078-6caba9cebdcc',
                    'description': 'Reject',
                },
            ]
        ],
    )


class Assignee3(BaseModel):
    role: Optional[Role] = None
    user: Optional[User] = None


class Status11(BaseModel):
    key: Optional[int] = Field(None, description='The unique identifier', examples=[1])
    value: Optional[str] = Field(None, examples=['In progress'])


class Trigger6(BaseModel):
    description: Optional[str] = Field(None, examples=['Address change for employee'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class WorkflowTemplate6(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None, examples=['Approval by employer']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    version: Optional[int] = Field(
        None,
        description='The version of the workflow template this workflow was based on. Changes to a workflow template do not affect existing workflows.',
        examples=[2],
    )


class FieldEmbeddedItem125(BaseModel):
    allowedTransitions: Optional[List[AllowedTransition3]] = Field(
        None,
        description='In this object the posible transitions are returned.\nBy sending a request to the `href` with the given `httpVerb` and one of the options given in `transitions` in the body. The workflow is transitioned to the given state.',
    )
    assignee: Optional[Assignee3] = Field(
        None,
        description='A workflow is either assigned to a user or a role. A role can be filled by multiple users.',
    )
    data: Optional[str] = Field(
        None,
        description='A JSON representation of the mutation/data regarding this workflow',
        examples=[
            {
                'address': {
                    'city': 'Leiden',
                    'country': {'key': 1},
                    'houseNumber': 12,
                    'houseNumberAddition': 'D',
                    'postalCode': '1234 AA',
                    'street': 'Voordijk',
                }
            }
        ],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initiatedBy: Optional[InitiatedBy] = None
    initiatedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    lastModifiedBy: Optional[LastModifiedBy21] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='date and time on which the last modification on the workflow was performed. This can be either by the system or a user.',
        examples=['2019-11-23T11:14:06Z'],
    )
    status: Optional[Status11] = Field(
        None, description='Indicates the status of the workflow as a whole.'
    )
    trigger: Optional[Trigger6] = Field(
        None,
        description='Indicates the trigger that started the workflow.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate6] = Field(
        None,
        description='Indicates what workflow template was used to initiate the workflow.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class ProvidersEmployersEmployerIdAssignedworkflowsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message984]] = None
    field_embedded: Optional[List[FieldEmbeddedItem125]] = Field(
        None, alias='_embedded'
    )


class Message985(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdAssignedworkflowsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message985]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdAssignedworkflowsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdAssignedworkflowsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message986(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee9(BaseModel):
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within an employer.',
        examples=[156],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=25)] = Field(
        None, description='The name of the employee', examples=['Bergen']
    )


class Employment3(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2018-01-01'],
    )


class Entity(BaseModel):
    key: Optional[int] = Field(None, description='The key of the entity', examples=[1])
    value: Optional[Any] = Field(
        None, description='Description of table', examples=['employee']
    )


class Identification1(BaseModel):
    description: Optional[constr(max_length=255)] = Field(
        None,
        description='Extra identifying information for the mutation',
        examples=['Datum ingang 03-03-2005'],
    )


class FieldEmbeddedItem126(BaseModel):
    employee: Optional[Employee9] = None
    employer: Optional[Employer] = None
    employment: Optional[Employment3] = None
    entity: Optional[Entity] = Field(
        None, description='The table on which the change took place\n'
    )
    field: Optional[FieldModel] = Field(
        None, description='The application that performed the mutation\n'
    )
    identification: Optional[Identification1] = Field(
        None, description='The identification of the entity record that was changed\n'
    )
    mutationOrigin: Optional[MutationOrigin] = Field(
        None,
        description='The origin of the mutation\nFor example:\n* By user * Automatich process * Collective change * Import\n',
    )
    mutationType: Optional[MutationType] = Field(
        None,
        description='The type of mutation\n\n\n  * create (toevoegen)\n  * update (wijzigen)\n  * delete (verwijderen)\n',
    )
    newValue: Optional[constr(max_length=250)] = Field(
        None,
        description='The value of the field after the change. \nIncase of an delete the nieuwValue will be NULL.',
        examples=['Hermans'],
    )
    oldValue: Optional[constr(max_length=250)] = Field(
        None,
        description='The value befor the change. \nIncase of an create the oldValue will be NULL.',
        examples=['Hermanss'],
    )
    performedBy: Optional[PerformedBy1] = None
    timeStamp: Optional[datetime] = Field(
        None,
        description='The time the mutation was performed',
        examples=['2018-05-08T15:16:49+02:00'],
    )


class ProvidersEmployersEmployerIdAuditTrailEmployeeDataGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message986]] = None
    field_embedded: Optional[List[FieldEmbeddedItem126]] = Field(
        None, alias='_embedded'
    )


class Message987(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdAuditTrailEmployeeDataGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message987]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdAuditTrailEmployeeDataGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdAuditTrailEmployeeDataGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message988(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem127(BaseModel):
    name: Optional[str] = None


class ProvidersEmployersEmployerIdAuthorizationsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message988]] = None
    field_embedded: Optional[List[FieldEmbeddedItem127]] = Field(
        None, alias='_embedded'
    )


class FieldEmbeddedItem128(BaseModel):
    description: Optional[str] = Field(
        None, examples=['GetJournalRunsByPayrollAdministrationId']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdAuthorizationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message988]] = None
    field_embedded: Optional[List[FieldEmbeddedItem128]] = Field(
        None, alias='_embedded'
    )


class Message990(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdAuthorizationsGetResponse2(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message990]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdAuthorizationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdAuthorizationsGetResponse4(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message991(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem129(BaseModel):
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the benifit in kind type',
        examples=['Laptop'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdBenefitinkindtypesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message991]] = None
    field_embedded: Optional[List[FieldEmbeddedItem129]] = Field(
        None, alias='_embedded'
    )


class Message992(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdBenefitinkindtypesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message992]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdBenefitinkindtypesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdBenefitinkindtypesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdBenefitinkindtypesPostRequest(BaseModel):
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the benifit in kind type',
        examples=['Laptop'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message993(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content205(BaseModel):
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the benifit in kind type',
        examples=['Laptop'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdBenefitinkindtypesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message993]] = None
    content: Optional[Content205] = None


class Message994(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdBenefitinkindtypesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message994]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdBenefitinkindtypesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdBenefitinkindtypesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message995(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employer2(BaseModel):
    companyName: Optional[str] = Field(None, examples=['Janssen B.V.'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Person(BaseModel):
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description="The last name of the employee's partner.", examples=['Wiel']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description="The prefix to the last name of the employee's partner.",
        examples=['van de'],
    )


class IssuedTo(BaseModel):
    name: Optional[constr(max_length=50)] = Field(None, examples=['B. Janssen'])
    person: Optional[Person] = Field(
        None,
        description='Information on the person to whom the billable item was issued to. \n',
    )


class User5(BaseModel):
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None, description='The first name of the user', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the user.',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials of the user', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None, description='The last name of the user', examples=['Bergen']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix of the user', examples=['van']
    )


class RequestedBy13(BaseModel):
    name: Optional[str] = Field(
        None, description='The name of the user\n', examples=['B. Janssen']
    )
    user: Optional[User5] = Field(
        None, description='Data on who has requested the billable item. \n'
    )


class ItemType(BaseModel):
    description: Optional[str] = Field(
        None,
        description='The description of the item type.',
        examples=['Preboarding traject'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The item type of the billed item.',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Status12(Enum):
    open = 'open'
    completed = 'completed'
    endedPrematurely = 'endedPrematurely'


class PreboardingTrajectory(BaseModel):
    dateLastModification: Optional[date_aliased] = Field(
        None,
        description='The date on which the status was last modified',
        examples=['2022-04-12'],
    )
    status: Optional[Status12] = Field(
        None, description='The status of the preboardingTraject.\n', examples=['open']
    )


class RequestedItem(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    itemType: Optional[ItemType] = Field(
        None, description='Details on the requested item.\n'
    )
    preboardingTrajectory: Optional[PreboardingTrajectory] = Field(
        None, description='This object contains item type specific data\n'
    )


class FieldEmbeddedItem130(BaseModel):
    employer: Optional[Employer2] = Field(
        None, description='Data about the employer.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    issuedTo: Optional[IssuedTo] = Field(
        None,
        description='Information about the person to whom the billable item was issued. If the person is still active then the person object is filled. if the person is no longer active, the name field is filled.\n',
    )
    providerId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    requestedBy: Optional[RequestedBy13] = Field(
        None,
        description='Data on who has requested the billable item. If the user is still active then the user object is filled. if the user is no longer active, the name field is filled.\n',
    )
    requestedDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the billable item is requested.\n',
        examples=['2022-04-12'],
    )
    requestedItem: Optional[RequestedItem] = Field(
        None, description='Details on the requested item.\n'
    )


class ProvidersEmployersEmployerIdBillableitemsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message995]] = None
    field_embedded: Optional[List[FieldEmbeddedItem130]] = Field(
        None, alias='_embedded'
    )


class Message996(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdBillableitemsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message996]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdBillableitemsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdBillableitemsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message997(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country56(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(None, examples=['NL'])
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Netherlands'])


class FurtherIndication41(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['WW'])


class Address26(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country56] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication41] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ContactInformation28(BaseModel):
    emailAddress: Optional[constr(max_length=255)] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The fax number to contact this individual',
        examples=['+31 13-1234561'],
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class DeviatingPostalAddress14(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country56] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication41] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class TypeOfDocument9(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the type of document. Possible values can be acquired via the metadata endpoint',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the type of document', examples=['Passport']
    )


class IdentityDocument9(BaseModel):
    documentIdentification: Optional[constr(max_length=20)] = Field(
        None,
        description='Description of the type of document',
        examples=['CRE45553433'],
    )
    typeOfDocument: Optional[TypeOfDocument9] = None


class CivilStatus12(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Married'])


class Nationality12(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Dutch'])


class PersonalDetails15(BaseModel):
    civilStatus: Optional[CivilStatus12] = Field(
        None, description='The civil status of the employee'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth of the employee.', examples=['1995-05-21']
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee.', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender of the employee')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format `formattedName`. '
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee.', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee.', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee`s partner.', examples=['Wiel']
    )
    nationality: Optional[Nationality12] = Field(
        None, description='The nationality of the employee'
    )
    placeOfBirth: Optional[constr(max_length=24)] = Field(
        None, description='Place of birth of the employee', examples=['Amsterdam']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee.',
        examples=['van'],
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee"s partner.',
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).')


class EmployeeData4(BaseModel):
    address: Optional[Address26] = Field(
        None, description='The address of the employee'
    )
    contactInformation: Optional[ContactInformation28] = Field(
        None, description='Contact information for the employee'
    )
    deviatingPostalAddress: Optional[DeviatingPostalAddress14] = Field(
        None,
        description='The deviating address of the employee (used as a postal address)',
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer.',
        examples=[156],
    )
    iban: Optional[constr(max_length=35)] = Field(
        None,
        description='International Bank Account Number. Only IBAN without spaces are accepted.',
        examples=['NL52ABNA0424968264'],
    )
    identityDocument: Optional[IdentityDocument9] = Field(
        None, description='The identification document of the employee'
    )
    personalDetails: Optional[PersonalDetails15] = Field(
        None,
        description='The personal details of the employee. e.g. Name, civil status en gender',
    )


class PayrollAdministration10(BaseModel):
    clientNumber: Optional[int] = Field(
        None,
        description='The client number is a unique number for administrations that are used for payrolling. This field has no value if the administration is not used for payrolling.',
        examples=[1234],
    )
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the administration', examples=['ABC accountants']
    )


class TypeOfParticipation8(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[str] = Field(None, examples=['n.v.t.'])


class EmploymentData4(BaseModel):
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period.',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer.',
        examples=['2019-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties.',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end.',
        examples=['2019-01-01'],
    )
    deviatingCLATaxReturn: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns .',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests.',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user. ',
    )
    employmentContractType: Optional[EmploymentContractType7] = Field(
        None, description='The type of employment applicable for the employment.'
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None, description='A selection of pre defined durations for the employment.'
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user. ',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht)',
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether first-day notification (EersteDagsMelding) is applicable for the employment',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation.',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company.',
        examples=['2012-05-01'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None, description='Indicates whether employee is anonymous ', examples=[True]
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classiefied as a director and major shareholder (Dutch --> directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Werknemerverzekering', examples=[True]
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Volksverzekering', examples=[True]
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment.',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration7] = Field(
        None,
        description='An administration that can not be used for payrolling. This field can not have a value at the same time as `payrollAdministration`\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration10] = Field(
        None,
        description='An administration used for payrolling. This field can not have a value at the same time as `nonPayrollAdministration`\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    periodPayGradeAdjustment: Optional[int] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’.',
        examples=[2],
    )
    professionCode: Optional[int] = Field(
        None, description='A code field for a profession.', examples=[4]
    )
    sendMdvNotification: Optional[bool] = Field(
        None,
        description='Indicate if a Mdv (melding dienstverband) should be send.',
        examples=[True],
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None, description='Indicates the special income ratio'
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month.',
        examples=['2019-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2019-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment.',
    )
    typeOfParticipation: Optional[TypeOfParticipation8] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s.',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Dit the employment and employer make a written contract?',
        examples=[True],
    )


class FiscalData4(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=1000000000.0)] = Field(
        None, description='The fiscal annual salary', examples=[60000]
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting)',
        examples=[False],
    )
    applyStudentDeduction: Optional[bool] = Field(
        None, description='Apply the "Scholierenregeling"', examples=[False]
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[float] = Field(
        None,
        description='Indicates a deviating payroll tax percentage is to be applied',
        examples=[27.45],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description='Indicates if there is a deviating payroll tax table is applicable (green vs white table)',
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )


class Department11(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Verkoop'])
    key: Optional[UUID] = Field(None, examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'])


class DistributionUnit20(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Sales'])
    key: Optional[UUID] = Field(None, examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'])


class Function11(BaseModel):
    description: Optional[str] = Field(None, examples=['Directeur'])
    group: Optional[str] = Field(None, examples=['internal'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class OrganizationalEntityData4(BaseModel):
    department: Optional[Department11] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[str] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[str] = Field(
        None,
        description='The deviating functiongroup description of the employment.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit20] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center. \n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user. \n',
    )
    function: Optional[Function11] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    internalTelephoneExtensionNumber: Optional[str] = Field(
        None,
        description='The phone extention number for the employment.',
        examples=['0133031600'],
    )
    placeOfEmployment: Optional[str] = Field(
        None,
        description='The place of employment (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )


class OtherPayrollVariablesData4(BaseModel):
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup9] = Field(
        None,
        description='Indicates what deviating premie sector fonds should apply for the employment. Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )


class Status13(Enum):
    HasAccessToClient = 'HasAccessToClient'
    NoAccessToClient = 'NoAccessToClient'
    UserIsBlocked = 'UserIsBlocked'
    AccessToClientIsBlocked = 'AccessToClientIsBlocked'


class SelfService3(BaseModel):
    status: Optional[Status13] = Field(None, description='Description of the status')


class SocialSecurityData4(BaseModel):
    healthCareInsuranceActType: Optional[HealthCareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[False],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[False],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[False],
    )


class WageData4(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected. \n',
        examples=[True],
    )
    grossWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='The gross wage for the employee\n', examples=[23]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    netWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='Net wage for the employment\n'
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description='A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee"s level, rank or status within the employer"s organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )


class CalculateUsingWorkPattern11(BaseModel):
    daysDailyRate: Optional[bool] = Field(
        None,
        description='Indicates whether the number of days of dailyrate should be calculated based on the workpattern. The number of days are normally calculated by the working hours.       ',
        examples=[False],
    )
    deviatingDaysAndHours: Optional[bool] = Field(
        None,
        description='Indication whether  the deviating hours per week and deviating SV-days per period are to be automatically calculated based on the workpattern. Please note (!) that any values in the deviatingHoursPerWeek and deviatingSvDaysPerPeriod fields (of this workingHours record) will be overwritten based on this calculation if true (and endDate=NULL)!',
        examples=[False],
    )
    hoursBrokenPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern in broken periods. These are periods of in or out of service.',
        examples=[False],
    )
    hoursPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern for regular periods.         ',
        examples=[False],
    )
    leaveHours: Optional[bool] = Field(
        None,
        description='Indicates whether then leave balances (verlof) are to be calculated based on the workpattern.',
        examples=[True],
    )


class FlexibleHoursContract11(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[constr(max_length=50)] = Field(None, examples=['n.v.t.'])


class Shift21(BaseModel):
    bonusPercentage: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift. ',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None, description='The number for the shift. ', examples=[1]
    )


class WorkPattern11(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class WorkingHoursData4(BaseModel):
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100',
        examples=[37.5],
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern11] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object).',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='Fulltime hours are normally based as defined by the shift, this optional field is used to register a deviating value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[confloat(ge=1.0, le=23.0)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value. ',
        examples=[32],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract11] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.  ',
        examples=[True],
    )
    shift: Optional[Shift21] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    workPattern: Optional[WorkPattern11] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class FieldEmbeddedItem131(BaseModel):
    creationDate: Optional[datetime] = Field(
        None,
        description='The date time on which the record was added (ISO-8601)',
        examples=['2018-05-08'],
    )
    employeeData: Optional[EmployeeData4] = None
    employmentData: Optional[EmploymentData4] = None
    fiscalData: Optional[FiscalData4] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    organizationalEntityData: Optional[OrganizationalEntityData4] = None
    otherPayrollVariablesData: Optional[OtherPayrollVariablesData4] = None
    selfService: Optional[SelfService3] = None
    socialSecurityData: Optional[SocialSecurityData4] = None
    uniqueName: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The unique name for this concept employment. It is commonly used as a displayname in the user interface to select this entry in a dropdown box.',
        examples=['Sollicitant 013'],
    )
    wageData: Optional[WageData4] = None
    workingHoursData: Optional[WorkingHoursData4] = None


class ProvidersEmployersEmployerIdConceptemployeesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message997]] = None
    field_embedded: Optional[List[FieldEmbeddedItem131]] = Field(
        None, alias='_embedded'
    )


class Message998(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdConceptemployeesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message998]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdConceptemployeesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdConceptemployeesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Address27(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country56] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication41] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class DeviatingPostalAddress15(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country56] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication41] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument10(BaseModel):
    documentIdentification: Optional[constr(max_length=20)] = Field(
        None,
        description='Description of the type of document',
        examples=['CRE45553433'],
    )
    typeOfDocument: Optional[TypeOfDocument9] = None


class PersonalDetails16(BaseModel):
    civilStatus: Optional[CivilStatus12] = Field(
        None, description='The civil status of the employee'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth of the employee.', examples=['1995-05-21']
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee.', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender of the employee')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format `formattedName`. '
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee.', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee.', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee`s partner.', examples=['Wiel']
    )
    nationality: Optional[Nationality12] = Field(
        None, description='The nationality of the employee'
    )
    placeOfBirth: Optional[constr(max_length=24)] = Field(
        None, description='Place of birth of the employee', examples=['Amsterdam']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee.',
        examples=['van'],
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee"s partner.',
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).')


class EmployeeData5(BaseModel):
    address: Optional[Address27] = Field(
        None, description='The address of the employee'
    )
    contactInformation: Optional[ContactInformation28] = Field(
        None, description='Contact information for the employee'
    )
    deviatingPostalAddress: Optional[DeviatingPostalAddress15] = Field(
        None,
        description='The deviating address of the employee (used as a postal address)',
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer.',
        examples=[156],
    )
    iban: Optional[constr(max_length=35)] = Field(
        None,
        description='International Bank Account Number. Only IBAN without spaces are accepted.',
        examples=['NL52ABNA0424968264'],
    )
    identityDocument: Optional[IdentityDocument10] = Field(
        None, description='The identification document of the employee'
    )
    personalDetails: Optional[PersonalDetails16] = Field(
        None,
        description='The personal details of the employee. e.g. Name, civil status en gender',
    )


class EmploymentData5(BaseModel):
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period.',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer.',
        examples=['2019-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties.',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end.',
        examples=['2019-01-01'],
    )
    deviatingCLATaxReturn: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns .',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests.',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user. ',
    )
    employmentContractType: Optional[EmploymentContractType7] = Field(
        None, description='The type of employment applicable for the employment.'
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None, description='A selection of pre defined durations for the employment.'
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user. ',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht)',
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether first-day notification (EersteDagsMelding) is applicable for the employment',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation.',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company.',
        examples=['2012-05-01'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None, description='Indicates whether employee is anonymous ', examples=[True]
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classiefied as a director and major shareholder (Dutch --> directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Werknemerverzekering', examples=[True]
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Volksverzekering', examples=[True]
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment.',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration7] = Field(
        None,
        description='An administration that can not be used for payrolling. This field can not have a value at the same time as `payrollAdministration`\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration10] = Field(
        None,
        description='An administration used for payrolling. This field can not have a value at the same time as `nonPayrollAdministration`\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    periodPayGradeAdjustment: Optional[int] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’.',
        examples=[2],
    )
    professionCode: Optional[int] = Field(
        None, description='A code field for a profession.', examples=[4]
    )
    sendMdvNotification: Optional[bool] = Field(
        None,
        description='Indicate if a Mdv (melding dienstverband) should be send.',
        examples=[True],
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None, description='Indicates the special income ratio'
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month.',
        examples=['2019-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2019-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment.',
    )
    typeOfParticipation: Optional[TypeOfParticipation8] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s.',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Dit the employment and employer make a written contract?',
        examples=[True],
    )


class FiscalData5(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=1000000000.0)] = Field(
        None, description='The fiscal annual salary', examples=[60000]
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting)',
        examples=[False],
    )
    applyStudentDeduction: Optional[bool] = Field(
        None, description='Apply the "Scholierenregeling"', examples=[False]
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[float] = Field(
        None,
        description='Indicates a deviating payroll tax percentage is to be applied',
        examples=[27.45],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description='Indicates if there is a deviating payroll tax table is applicable (green vs white table)',
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )


class OrganizationalEntityData5(BaseModel):
    department: Optional[Department11] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[str] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[str] = Field(
        None,
        description='The deviating functiongroup description of the employment.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit20] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center. \n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user. \n',
    )
    function: Optional[Function11] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    internalTelephoneExtensionNumber: Optional[str] = Field(
        None,
        description='The phone extention number for the employment.',
        examples=['0133031600'],
    )
    placeOfEmployment: Optional[str] = Field(
        None,
        description='The place of employment (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )


class OtherPayrollVariablesData5(BaseModel):
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup9] = Field(
        None,
        description='Indicates what deviating premie sector fonds should apply for the employment. Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )


class SelfService4(BaseModel):
    status: Optional[Status13] = Field(None, description='Description of the status')


class SocialSecurityData5(BaseModel):
    healthCareInsuranceActType: Optional[HealthCareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[False],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[False],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[False],
    )


class WageData5(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected. \n',
        examples=[True],
    )
    grossWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='The gross wage for the employee\n', examples=[23]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    netWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='Net wage for the employment\n'
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description='A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee"s level, rank or status within the employer"s organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )


class WorkPattern12(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class WorkingHoursData5(BaseModel):
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100',
        examples=[37.5],
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern11] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object).',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='Fulltime hours are normally based as defined by the shift, this optional field is used to register a deviating value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[confloat(ge=1.0, le=23.0)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value. ',
        examples=[32],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract11] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.  ',
        examples=[True],
    )
    shift: Optional[Shift21] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    workPattern: Optional[WorkPattern12] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class ProvidersEmployersEmployerIdConceptemployeesPostRequest(BaseModel):
    creationDate: Optional[datetime] = Field(
        None,
        description='The date time on which the record was added (ISO-8601)',
        examples=['2018-05-08'],
    )
    employeeData: Optional[EmployeeData5] = None
    employmentData: Optional[EmploymentData5] = None
    fiscalData: Optional[FiscalData5] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    organizationalEntityData: Optional[OrganizationalEntityData5] = None
    otherPayrollVariablesData: Optional[OtherPayrollVariablesData5] = None
    selfService: Optional[SelfService4] = None
    socialSecurityData: Optional[SocialSecurityData5] = None
    uniqueName: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The unique name for this concept employment. It is commonly used as a displayname in the user interface to select this entry in a dropdown box.',
        examples=['Sollicitant 013'],
    )
    wageData: Optional[WageData5] = None
    workingHoursData: Optional[WorkingHoursData5] = None


class Message999(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Address28(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country56] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication41] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class DeviatingPostalAddress16(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country56] = Field(
        None, description='The country of residence of the employee'
    )
    furtherIndication: Optional[FurtherIndication41] = Field(
        None,
        description='Futher indication of the address for example onboard (a ship) or living in a trailer',
    )
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument11(BaseModel):
    documentIdentification: Optional[constr(max_length=20)] = Field(
        None,
        description='Description of the type of document',
        examples=['CRE45553433'],
    )
    typeOfDocument: Optional[TypeOfDocument9] = None


class PersonalDetails17(BaseModel):
    civilStatus: Optional[CivilStatus12] = Field(
        None, description='The civil status of the employee'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth of the employee.', examples=['1995-05-21']
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee.', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender of the employee')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format `formattedName`. '
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee.', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee.', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee`s partner.', examples=['Wiel']
    )
    nationality: Optional[Nationality12] = Field(
        None, description='The nationality of the employee'
    )
    placeOfBirth: Optional[constr(max_length=24)] = Field(
        None, description='Place of birth of the employee', examples=['Amsterdam']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee.',
        examples=['van'],
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix to the last name of the employee"s partner.',
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).')


class EmployeeData6(BaseModel):
    address: Optional[Address28] = Field(
        None, description='The address of the employee'
    )
    contactInformation: Optional[ContactInformation28] = Field(
        None, description='Contact information for the employee'
    )
    deviatingPostalAddress: Optional[DeviatingPostalAddress16] = Field(
        None,
        description='The deviating address of the employee (used as a postal address)',
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer.',
        examples=[156],
    )
    iban: Optional[constr(max_length=35)] = Field(
        None,
        description='International Bank Account Number. Only IBAN without spaces are accepted.',
        examples=['NL52ABNA0424968264'],
    )
    identityDocument: Optional[IdentityDocument11] = Field(
        None, description='The identification document of the employee'
    )
    personalDetails: Optional[PersonalDetails17] = Field(
        None,
        description='The personal details of the employee. e.g. Name, civil status en gender',
    )


class EmploymentData6(BaseModel):
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period.',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer.',
        examples=['2019-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties.',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end.',
        examples=['2019-01-01'],
    )
    deviatingCLATaxReturn: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns .',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests.',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user. ',
    )
    employmentContractType: Optional[EmploymentContractType7] = Field(
        None, description='The type of employment applicable for the employment.'
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None, description='A selection of pre defined durations for the employment.'
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user. ',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht)',
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether first-day notification (EersteDagsMelding) is applicable for the employment',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation.',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company.',
        examples=['2012-05-01'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None, description='Indicates whether employee is anonymous ', examples=[True]
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classiefied as a director and major shareholder (Dutch --> directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Werknemerverzekering', examples=[True]
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Volksverzekering', examples=[True]
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment.',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration7] = Field(
        None,
        description='An administration that can not be used for payrolling. This field can not have a value at the same time as `payrollAdministration`\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration10] = Field(
        None,
        description='An administration used for payrolling. This field can not have a value at the same time as `nonPayrollAdministration`\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    periodPayGradeAdjustment: Optional[int] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’.',
        examples=[2],
    )
    professionCode: Optional[int] = Field(
        None, description='A code field for a profession.', examples=[4]
    )
    sendMdvNotification: Optional[bool] = Field(
        None,
        description='Indicate if a Mdv (melding dienstverband) should be send.',
        examples=[True],
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None, description='Indicates the special income ratio'
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month.',
        examples=['2019-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2019-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment.',
    )
    typeOfParticipation: Optional[TypeOfParticipation8] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s.',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Dit the employment and employer make a written contract?',
        examples=[True],
    )


class FiscalData6(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=1000000000.0)] = Field(
        None, description='The fiscal annual salary', examples=[60000]
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting)',
        examples=[False],
    )
    applyStudentDeduction: Optional[bool] = Field(
        None, description='Apply the "Scholierenregeling"', examples=[False]
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[float] = Field(
        None,
        description='Indicates a deviating payroll tax percentage is to be applied',
        examples=[27.45],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description='Indicates if there is a deviating payroll tax table is applicable (green vs white table)',
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )


class OrganizationalEntityData6(BaseModel):
    department: Optional[Department11] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[str] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[str] = Field(
        None,
        description='The deviating functiongroup description of the employment.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit20] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center. \n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user. \n',
    )
    function: Optional[Function11] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    internalTelephoneExtensionNumber: Optional[str] = Field(
        None,
        description='The phone extention number for the employment.',
        examples=['0133031600'],
    )
    placeOfEmployment: Optional[str] = Field(
        None,
        description='The place of employment (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )


class OtherPayrollVariablesData6(BaseModel):
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup9] = Field(
        None,
        description='Indicates what deviating premie sector fonds should apply for the employment. Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )


class SelfService5(BaseModel):
    status: Optional[Status13] = Field(None, description='Description of the status')


class SocialSecurityData6(BaseModel):
    healthCareInsuranceActType: Optional[HealthCareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[False],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[False],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[False],
    )


class WageData6(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected. \n',
        examples=[True],
    )
    grossWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='The gross wage for the employee\n', examples=[23]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    netWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='Net wage for the employment\n'
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description='A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee"s level, rank or status within the employer"s organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )


class WorkPattern13(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class WorkingHoursData6(BaseModel):
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100',
        examples=[37.5],
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern11] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object).',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='Fulltime hours are normally based as defined by the shift, this optional field is used to register a deviating value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[confloat(ge=1.0, le=23.0)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value. ',
        examples=[32],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract11] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.  ',
        examples=[True],
    )
    shift: Optional[Shift21] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    workPattern: Optional[WorkPattern13] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class Content206(BaseModel):
    creationDate: Optional[datetime] = Field(
        None,
        description='The date time on which the record was added (ISO-8601)',
        examples=['2018-05-08'],
    )
    employeeData: Optional[EmployeeData6] = None
    employmentData: Optional[EmploymentData6] = None
    fiscalData: Optional[FiscalData6] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    organizationalEntityData: Optional[OrganizationalEntityData6] = None
    otherPayrollVariablesData: Optional[OtherPayrollVariablesData6] = None
    selfService: Optional[SelfService5] = None
    socialSecurityData: Optional[SocialSecurityData6] = None
    uniqueName: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The unique name for this concept employment. It is commonly used as a displayname in the user interface to select this entry in a dropdown box.',
        examples=['Sollicitant 013'],
    )
    wageData: Optional[WageData6] = None
    workingHoursData: Optional[WorkingHoursData6] = None


class ProvidersEmployersEmployerIdConceptemployeesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message999]] = None
    content: Optional[Content206] = None


class Message1000(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdConceptemployeesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1000]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdConceptemployeesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdConceptemployeesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1001(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem132(BaseModel):
    conceptEmployee: Optional[ConceptEmployee] = None
    status: Optional[Status13] = Field(None, description='Description of the status')


class ProvidersEmployersEmployerIdConceptemployeesSelfserviceGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1001]] = None
    field_embedded: Optional[List[FieldEmbeddedItem132]] = Field(
        None, alias='_embedded'
    )


class Message1002(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdConceptemployeesSelfserviceGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1002]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdConceptemployeesSelfserviceGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdConceptemployeesSelfserviceGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1003(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem133(BaseModel):
    code: Optional[int] = Field(
        None,
        description='An unique code for the contract code within the scope of the employer',
        examples=[1022],
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the contract code',
        examples=['Special contract'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdContractcodesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1003]] = None
    field_embedded: Optional[List[FieldEmbeddedItem133]] = Field(
        None, alias='_embedded'
    )


class Message1004(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdContractcodesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1004]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdContractcodesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdContractcodesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdContractcodesPostRequest(BaseModel):
    code: Optional[int] = Field(
        None,
        description='An unique code for the contract code within the scope of the employer',
        examples=[1022],
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the contract code',
        examples=['Special contract'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message1005(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content207(BaseModel):
    code: Optional[int] = Field(
        None,
        description='An unique code for the contract code within the scope of the employer',
        examples=[1022],
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the contract code',
        examples=['Special contract'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdContractcodesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1005]] = None
    content: Optional[Content207] = None


class Message1006(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdContractcodesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1006]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdContractcodesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdContractcodesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1007(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem134(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom field which can be used at the employee and employment level',
        examples=['Shoe size'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdCustomfieldsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1007]] = None
    field_embedded: Optional[List[FieldEmbeddedItem134]] = Field(
        None, alias='_embedded'
    )


class Message1008(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdCustomfieldsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1008]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdCustomfieldsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdCustomfieldsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdCustomfieldsPostRequest(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom field which can be used at the employee and employment level',
        examples=['Shoe size'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message1009(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content208(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom field which can be used at the employee and employment level',
        examples=['Shoe size'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdCustomfieldsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1009]] = None
    content: Optional[Content208] = None


class Message1010(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdCustomfieldsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1010]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdCustomfieldsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdCustomfieldsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1011(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem135(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The date for the custom holiday.', examples=['2021-01-01']
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom holiday.',
        examples=['Company 100th year anniversary'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdCustomholidaysGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1011]] = None
    field_embedded: Optional[List[FieldEmbeddedItem135]] = Field(
        None, alias='_embedded'
    )


class Message1012(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdCustomholidaysGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1012]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdCustomholidaysGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdCustomholidaysGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdCustomholidaysPostRequest(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The date for the custom holiday.', examples=['2021-01-01']
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom holiday.',
        examples=['Company 100th year anniversary'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message1013(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content209(BaseModel):
    date: Optional[date_aliased] = Field(
        None, description='The date for the custom holiday.', examples=['2021-01-01']
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the custom holiday.',
        examples=['Company 100th year anniversary'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdCustomholidaysPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1013]] = None
    content: Optional[Content209] = None


class Message1014(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdCustomholidaysPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1014]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdCustomholidaysPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdCustomholidaysPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1015(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content210(BaseModel):
    dashboardLocation: Optional[str] = Field(
        None,
        description='The location of the Qlik employer dashboard.',
        examples=[
            'http://qlik01.loket.nl/loket-api/sense/app/00000000-0000-0000-0000-000000000000/sheet/00000000-0000-0000-0000-000000000000/state/analysis?qlikTicket=0000000000000000'
        ],
    )


class ProvidersEmployersEmployerIdDashboardGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1015]] = None
    content: Optional[Content210] = None


class Message1016(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDashboardGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1016]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDashboardGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDashboardGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1017(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class PersonalDetails18(BaseModel):
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None, description='The first name of the user', examples=['Susan']
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials of the user', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None, description='The last name of the user', examples=['Bergen']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix of the user', examples=['van']
    )


class User6(BaseModel):
    personalDetails: Optional[PersonalDetails18] = None
    userId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class License(BaseModel):
    user: Optional[User6] = None


class FieldEmbeddedItem136(BaseModel):
    license: Optional[License] = None


class ProvidersEmployersEmployerIdDashboardLicensesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1017]] = None
    field_embedded: Optional[List[FieldEmbeddedItem136]] = Field(
        None, alias='_embedded'
    )


class Message1018(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDashboardLicensesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1018]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdDashboardLicensesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDashboardLicensesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class User7(BaseModel):
    personalDetails: Optional[PersonalDetails18] = None
    userId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class License1(BaseModel):
    user: Optional[User7] = None


class ProvidersEmployersEmployerIdDashboardLicensesPutRequestItem(BaseModel):
    license: Optional[License1] = None


class ProvidersEmployersEmployerIdDashboardLicensesPutRequest(
    RootModel[List[ProvidersEmployersEmployerIdDashboardLicensesPutRequestItem]]
):
    root: List[ProvidersEmployersEmployerIdDashboardLicensesPutRequestItem]


class Message1019(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class User8(BaseModel):
    personalDetails: Optional[PersonalDetails18] = None
    userId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class License2(BaseModel):
    user: Optional[User8] = None


class FieldEmbeddedItem137(BaseModel):
    license: Optional[License2] = None


class ProvidersEmployersEmployerIdDashboardLicensesPutResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1019]] = None
    field_embedded: Optional[List[FieldEmbeddedItem137]] = Field(
        None, alias='_embedded'
    )


class Message1020(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDashboardLicensesPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1020]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDashboardLicensesPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDashboardLicensesPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDashboardLicensesPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1020]] = None
    version: Optional[Version] = None


class Message1022(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content211(BaseModel):
    dataNewBusinessToken: Optional[str] = Field(
        None,
        description='The access token for calling the Data New Business (DNB) API.',
        examples=[
            'tKcYuqJtbo7Q0wBzRzDFN6mnDghfJfvMOLMj0mOj9W1EW0wk9k8bWmRLug-AprELWHqHIc9f7Q6rNQQ6U6MNDGvVkxcnZH62FCebdqPhquBUEI1q24eCiqsT3Vn8eC27sX5phOhgHK9_bP2lLnDbqZoo5Li7bKmpS75S0_U7SO_BLyl6p-5jJHV2ZS0XFzjEkwIYkW3rPq41nDmbpuh1kNOyxa1fRbfmGhVJnGmWsQBxPwwypC30wFPUcNHHIBXlrryAXESR5Kal8gOolC5n09FlBFKW2EnCDyC-Wl2I0j95MZTUXwr-5JqiOQNWsILLE0GVW5EPmfvXo7hIRhpi1nl-XyWgHEl6wah9mW0G2sVXnbD0oBfMbFSBXTTcZpsVo3yTJB'
        ],
    )
    expiresIn: Optional[int] = Field(
        None,
        description='The number of seconds until the token expires.',
        examples=[3600],
    )


class ProvidersEmployersEmployerIdDatanewbusinesstokenGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1022]] = None
    content: Optional[Content211] = None


class Message1023(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDatanewbusinesstokenGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1023]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDatanewbusinesstokenGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDatanewbusinesstokenGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1024(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem138(BaseModel):
    code: Optional[int] = Field(
        None, description='The visible identifier of the department.\n', examples=[2]
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The visible description (i.e. name) of the department.\n',
        examples=['Verkoop Binnendienst'],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. Typically this is the mailadress of a manager that would get a notification mail when a new leave requet is to be processed.',
        examples=['api@loket.nl'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    subDepartmentOf: Optional[SubDepartmentOf] = Field(
        None,
        description='If the department is a sub department (i.e. underlying) of another department, then the key-field of that other department may be entered here.\n',
    )


class ProvidersEmployersEmployerIdDepartmentsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1024]] = None
    field_embedded: Optional[List[FieldEmbeddedItem138]] = Field(
        None, alias='_embedded'
    )


class Message1025(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDepartmentsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1025]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdDepartmentsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDepartmentsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDepartmentsPostRequest(BaseModel):
    code: Optional[int] = Field(
        None, description='The visible identifier of the department.\n', examples=[2]
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The visible description (i.e. name) of the department.\n',
        examples=['Verkoop Binnendienst'],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. Typically this is the mailadress of a manager that would get a notification mail when a new leave requet is to be processed.',
        examples=['api@loket.nl'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    subDepartmentOf: Optional[SubDepartmentOf] = Field(
        None,
        description='If the department is a sub department (i.e. underlying) of another department, then the key-field of that other department may be entered here.\n',
    )


class Message1026(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content212(BaseModel):
    code: Optional[int] = Field(
        None, description='The visible identifier of the department.\n', examples=[2]
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The visible description (i.e. name) of the department.\n',
        examples=['Verkoop Binnendienst'],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. Typically this is the mailadress of a manager that would get a notification mail when a new leave requet is to be processed.',
        examples=['api@loket.nl'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    subDepartmentOf: Optional[SubDepartmentOf] = Field(
        None,
        description='If the department is a sub department (i.e. underlying) of another department, then the key-field of that other department may be entered here.\n',
    )


class ProvidersEmployersEmployerIdDepartmentsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1026]] = None
    content: Optional[Content212] = None


class Message1027(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDepartmentsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1027]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDepartmentsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDepartmentsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1028(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem139(BaseModel):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    category: Optional[constr(max_length=4000)] = Field(
        None,
        description='The category of the document. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    isReadBy: Optional[IsReadBy] = None
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    submittedBy: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the user that has submitted the document. Qwoater: Docfield 34 Gebruiker\n',
        examples=['Bowls, John'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )
    filename: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )


class ProvidersEmployersEmployerIdDocumentsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1028]] = None
    field_embedded: Optional[List[FieldEmbeddedItem139]] = Field(
        None, alias='_embedded'
    )


class Message1029(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDocumentsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1029]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdDocumentsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumentsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumentsPostRequest(BaseModel):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    category: Optional[constr(max_length=4000)] = Field(
        None,
        description='The category of the document. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    isReadBy: Optional[IsReadBy] = None
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    submittedBy: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the user that has submitted the document. Qwoater: Docfield 34 Gebruiker\n',
        examples=['Bowls, John'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )
    filename: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    file: Optional[str] = Field(
        None, description='base64 encoded document file.', examples=['YQ==']
    )
    sendEmailNotification: Optional[bool] = Field(
        False,
        description='Indicate whether to send an email to the employees.',
        examples=[True],
    )


class ProvidersEmployersEmployerIdDocumentsPostResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1029]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdDocumentsPostResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumentsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1031(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CanWrite(BaseModel):
    departmentManager: Optional[bool] = Field(None, examples=[False])
    employee: Optional[bool] = Field(None, examples=[False])
    employer: Optional[bool] = Field(None, examples=[False])
    provider: Optional[bool] = Field(None, examples=[True])


class FieldEmbeddedItem140(BaseModel):
    canWrite: Optional[CanWrite] = Field(
        None,
        description='This object describes the authorization per category for each role.\n',
    )
    category: Optional[str] = Field(
        None, description='The category\n', examples=['Arbeidsovereenkomst']
    )
    isAuthorizaionEditRestricted: Optional[bool] = Field(
        None,
        description='Indicates whether the authorizations of the category can be edited or not.\n',
    )
    isTemplate: Optional[bool] = Field(
        None, description='Indicates whether the category is a template.\n'
    )


class ProvidersEmployersEmployerIdDocumentsAuthorizationsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1031]] = None
    field_embedded: Optional[List[FieldEmbeddedItem140]] = Field(
        None, alias='_embedded'
    )


class ProvidersEmployersEmployerIdDocumentsAuthorizationsGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumentsAuthorizationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumentsAuthorizationsPutRequestItem(BaseModel):
    canWrite: Optional[CanWrite] = Field(
        None,
        description='This object describes the authorization per category for each role.\n',
    )
    category: Optional[str] = Field(
        None, description='The category\n', examples=['Arbeidsovereenkomst']
    )
    isAuthorizaionEditRestricted: Optional[bool] = Field(
        None,
        description='Indicates whether the authorizations of the category can be edited or not.\n',
    )
    isTemplate: Optional[bool] = Field(
        None, description='Indicates whether the category is a template.\n'
    )


class ProvidersEmployersEmployerIdDocumentsAuthorizationsPutRequest(
    RootModel[List[ProvidersEmployersEmployerIdDocumentsAuthorizationsPutRequestItem]]
):
    root: List[ProvidersEmployersEmployerIdDocumentsAuthorizationsPutRequestItem]


class ProvidersEmployersEmployerIdDocumentsAuthorizationsPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1031]] = None
    content: Optional[Dict[str, Any]] = None


class Message1033(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDocumentsAuthorizationsPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1033]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDocumentsAuthorizationsPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumentsAuthorizationsPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumentsAuthorizationsPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1033]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployerIdDocumentsCompletedossierDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1033]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDocumentsCompletedossierDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1033]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDocumentsCompletedossierDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumentsCompletedossierDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumentsCompletedossierDeleteResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1033]] = None
    version: Optional[Version] = None


class Message1038(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployerIdDocumentsCompletedossierInitiatePostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message1038]] = None


class Message1039(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDocumentsCompletedossierInitiatePostResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message1039]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDocumentsCompletedossierInitiatePostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumentsCompletedossierInitiatePostResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumentsCompletedossierInitiatePostResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1039]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployerIdDocumentsDocumentIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1039]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDocumentsDocumentIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1039]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDocumentsDocumentIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumentsDocumentIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumentsDocumentIdGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumentsDocumentIdGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumentsDocumentIdPutRequest(BaseModel):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    category: Optional[constr(max_length=4000)] = Field(
        None,
        description='The category of the document. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    isReadBy: Optional[IsReadBy] = None
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    submittedBy: Optional[constr(max_length=4000)] = Field(
        None,
        description='The name of the user that has submitted the document. Qwoater: Docfield 34 Gebruiker\n',
        examples=['Bowls, John'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )


class ProvidersEmployersEmployerIdDocumentsDocumentIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1039]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDocumentsDocumentIdPutResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumentsDocumentIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumentsDocumentIdPutResponse3(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1039]] = None
    version: Optional[Version] = None


class Message1045(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem141(BaseModel):
    attribute: Optional[str] = Field(
        None, description='Qwoater: Kenmerk\n', examples=['']
    )
    category: Optional[str] = Field(
        None, description='Qwoater: DocumentType\n', examples=['']
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time the declaration was submitted. Qwoater: Signaleringsdatum\n',
        examples=['2018-05-08'],
    )
    description: Optional[str] = Field(
        None, description='Qwoater: Omschrijving\n', examples=['VSP004']
    )
    endUser: Optional[str] = Field(
        None, description='Qwoater: EndUser\n', examples=['Hur, Ben']
    )
    event: Optional[str] = Field(
        None, description='Qwoater: Event\n', examples=['Audittrail opgevraagd']
    )
    eventDate: Optional[datetime] = Field(
        None,
        description='The time the declaration was submitted. Qwoater: AuditEventDate\n',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    role: Optional[str] = Field(
        None, description='Qwoater: Role\n', examples=['Provider']
    )
    year: Optional[str] = Field(None, description='Qwoater: Jaar\n', examples=['2020'])


class ProvidersEmployersEmployerIdDocumentsDocumentIdAudittrailGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1045]] = None
    field_embedded: Optional[List[FieldEmbeddedItem141]] = Field(
        None, alias='_embedded'
    )


class Message1046(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDocumentsDocumentIdAudittrailGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1046]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdDocumentsDocumentIdAudittrailGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumentsDocumentIdAudittrailGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1047(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem142(BaseModel):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    filename: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    targetCategory: Optional[constr(max_length=4000)] = Field(
        None,
        description='The target category will be used to set the category for a document which is generated with the template. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )


class ProvidersEmployersEmployerIdDocumenttemplatesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1047]] = None
    field_embedded: Optional[List[FieldEmbeddedItem142]] = Field(
        None, alias='_embedded'
    )


class Message1048(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdDocumenttemplatesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1048]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdDocumenttemplatesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumenttemplatesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumenttemplatesPostRequest(BaseModel):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )
    dateOfSubmission: Optional[date_aliased] = Field(
        None,
        description='The time at which document was submitted. Qwoater: CreationDate\n',
        examples=['2018-05-08'],
    )
    filename: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    targetCategory: Optional[constr(max_length=4000)] = Field(
        None,
        description='The target category will be used to set the category for a document which is generated with the template. Provided value must be a valid metadata option. Qwoater: DocumentType\n',
        examples=['Arbeidsovereenkomst'],
    )
    file: Optional[str] = Field(
        None, description='base64 encoded document file.', examples=['YQ==']
    )


class ProvidersEmployersEmployerIdDocumenttemplatesPostResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1048]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdDocumenttemplatesPostResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumenttemplatesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1048]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1048]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdPutRequest(BaseModel):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The time at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    qwoaterDocumentId: Optional[UUID] = Field(
        None, description='Qwoater documentId', examples=['']
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1048]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdPutResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdPutResponse3(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1048]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdGeneratedocumentsPostRequest(
    BaseModel
):
    attribute: Optional[constr(max_length=250)] = Field(
        None,
        description='The attribute defined by the submitter. Qwoater: Docfield 32 Kenmerk\n',
        examples=['VSP004'],
    )
    dateOfAlert: Optional[date_aliased] = Field(
        None,
        description='The date at which document will alerted for cancellation. Qwoater: AlertDate\n',
        examples=['2018-05-08'],
    )
    description: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The description defined by the submitter. Qwoater: Docfield 33 Omschrijving\n',
        examples=['Copy of id card'],
    )
    filename: Optional[constr(min_length=1, max_length=250)] = Field(
        None,
        description='The name of the file. Qwoater: Filename\n',
        examples=['BowlsJohn.pdf'],
    )
    referenceDate: Optional[date_aliased] = Field(
        None,
        description='This date will be used to select date depending data such as department and function.\n',
        examples=['2020-05-08'],
    )
    templateEmployerId: Optional[UUID] = Field(
        None,
        description='The unique identifier of the employer to which the template belongs (GUID/UUID).',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    year: Optional[conint(ge=1000, le=9999)] = Field(
        None,
        description='The year the document relates to. Qwoater: Docfield 86 Jaar\n',
        examples=[2017],
    )
    employmentIds: Optional[List[UUID]] = None
    sendEmailNotification: Optional[bool] = Field(
        False,
        description='Indicate whether to send an email to the employees.',
        examples=[True],
    )


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdGeneratedocumentsPostResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1048]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdGeneratedocumentsPostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdDocumenttemplatesDocumentIdGeneratedocumentsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1055(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem143(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction further indication within the scope of the employer',
        examples=['lts'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education furhter indication',
        examples=['Lagere technische school'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdEducationfurtherindicationsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1055]] = None
    field_embedded: Optional[List[FieldEmbeddedItem143]] = Field(
        None, alias='_embedded'
    )


class Message1056(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEducationfurtherindicationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1056]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEducationfurtherindicationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEducationfurtherindicationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdEducationfurtherindicationsPostRequest(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction further indication within the scope of the employer',
        examples=['lts'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education furhter indication',
        examples=['Lagere technische school'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message1057(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content213(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction further indication within the scope of the employer',
        examples=['lts'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education furhter indication',
        examples=['Lagere technische school'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdEducationfurtherindicationsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1057]] = None
    content: Optional[Content213] = None


class Message1058(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEducationfurtherindicationsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1058]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEducationfurtherindicationsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEducationfurtherindicationsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1059(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem144(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction type within the scope of the employer',
        examples=['WO'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education type',
        examples=['Wetenschappelijk onderwijs'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdEducationtypesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1059]] = None
    field_embedded: Optional[List[FieldEmbeddedItem144]] = Field(
        None, alias='_embedded'
    )


class Message1060(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEducationtypesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1060]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEducationtypesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEducationtypesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdEducationtypesPostRequest(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction type within the scope of the employer',
        examples=['WO'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education type',
        examples=['Wetenschappelijk onderwijs'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message1061(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content214(BaseModel):
    code: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=10)
    ] = Field(
        None,
        description='An unique code for the eduction type within the scope of the employer',
        examples=['WO'],
    )
    description: Optional[
        constr(pattern=r'^[\s\S]*\S[\s\S]*$', min_length=1, max_length=50)
    ] = Field(
        None,
        description='The description of the education type',
        examples=['Wetenschappelijk onderwijs'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdEducationtypesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1061]] = None
    content: Optional[Content214] = None


class Message1062(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEducationtypesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1062]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEducationtypesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEducationtypesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1063(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class EmailIdentityType(Enum):
    DOMAIN = 'DOMAIN'


class FieldEmbeddedItem145(BaseModel):
    dkimTokens: Optional[List[str]] = None
    emailIdentity: Optional[str] = Field(
        None,
        description='The emailIdentity that can be used when sending email.',
        examples=['provider.com'],
    )
    emailIdentityType: Optional[EmailIdentityType] = Field(
        None, description='The type of the set emailIdentity'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDkimVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    isSpfVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    lastDkimVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Dkim settings were last verified.',
        examples=['2022-01-31'],
    )
    lastSpfVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Spf settings were last verified.',
        examples=['2022-01-31'],
    )


class ProvidersEmployersEmployerIdEmailidentitiesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1063]] = None
    field_embedded: Optional[List[FieldEmbeddedItem145]] = Field(
        None, alias='_embedded'
    )


class Message1064(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmailidentitiesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1064]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmailidentitiesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmailidentitiesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdEmailidentitiesPostRequest(BaseModel):
    dkimTokens: Optional[List[str]] = None
    emailIdentity: Optional[str] = Field(
        None,
        description='The emailIdentity that can be used when sending email.',
        examples=['provider.com'],
    )
    emailIdentityType: Optional[EmailIdentityType] = Field(
        None, description='The type of the set emailIdentity'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDkimVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    isSpfVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    lastDkimVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Dkim settings were last verified.',
        examples=['2022-01-31'],
    )
    lastSpfVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Spf settings were last verified.',
        examples=['2022-01-31'],
    )


class Message1065(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content215(BaseModel):
    dkimTokens: Optional[List[str]] = None
    emailIdentity: Optional[str] = Field(
        None,
        description='The emailIdentity that can be used when sending email.',
        examples=['provider.com'],
    )
    emailIdentityType: Optional[EmailIdentityType] = Field(
        None, description='The type of the set emailIdentity'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDkimVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    isSpfVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    lastDkimVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Dkim settings were last verified.',
        examples=['2022-01-31'],
    )
    lastSpfVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Spf settings were last verified.',
        examples=['2022-01-31'],
    )


class ProvidersEmployersEmployerIdEmailidentitiesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1065]] = None
    content: Optional[Content215] = None


class Message1066(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmailidentitiesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1066]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEmailidentitiesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmailidentitiesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdEmailidentitiesVerifyPostRequest(BaseModel):
    dkimTokens: Optional[List[str]] = None
    emailIdentity: Optional[str] = Field(
        None,
        description='The emailIdentity that can be used when sending email.',
        examples=['provider.com'],
    )
    emailIdentityType: Optional[EmailIdentityType] = Field(
        None, description='The type of the set emailIdentity'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDkimVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    isSpfVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    lastDkimVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Dkim settings were last verified.',
        examples=['2022-01-31'],
    )
    lastSpfVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Spf settings were last verified.',
        examples=['2022-01-31'],
    )


class Message1067(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content216(BaseModel):
    dkimTokens: Optional[List[str]] = None
    emailIdentity: Optional[str] = Field(
        None,
        description='The emailIdentity that can be used when sending email.',
        examples=['provider.com'],
    )
    emailIdentityType: Optional[EmailIdentityType] = Field(
        None, description='The type of the set emailIdentity'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDkimVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    isSpfVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    lastDkimVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Dkim settings were last verified.',
        examples=['2022-01-31'],
    )
    lastSpfVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Spf settings were last verified.',
        examples=['2022-01-31'],
    )


class ProvidersEmployersEmployerIdEmailidentitiesVerifyPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1067]] = None
    content: Optional[Content216] = None


class Message1068(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmailidentitiesVerifyPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1068]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEmailidentitiesVerifyPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmailidentitiesVerifyPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1069(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Category23(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The id of the categorie to which the email template belongs.',
        examples=[3],
    )
    value: Optional[str] = Field(
        None,
        description='The name of the categorie to which the email template belongs.',
        examples=['Verlof'],
    )


class DependsOnModule(BaseModel):
    description: Optional[str] = Field(
        None,
        description='The name of the module to which the email template belongs.',
        examples=['Verlof'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The id of the module to which the email template belongs.',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Email(BaseModel):
    body: Optional[constr(min_length=1, max_length=6000)] = Field(
        None,
        description='The body text of the email.',
        examples=['Je verlofaanvraag is behandeld.'],
    )
    senderEmail: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The email address of the sender.',
        examples=['noreply@loket.nl'],
    )
    subject: Optional[constr(min_length=1, max_length=255)] = Field(
        None,
        description='The subjectline of the email.',
        examples=['Verlofaanvraag behandeld'],
    )


class Type18(BaseModel):
    description: Optional[str] = Field(
        None,
        description='The description of the type of the email template.',
        examples=['Verlofaanvraag behandeld (voor de indiener)'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    sortOrder: Optional[int] = Field(
        None, description='A number used to sort the list.', examples=[210]
    )


class FieldEmbeddedItem146(BaseModel):
    category: Optional[Category23] = Field(
        None, description='The module to which the email template belongs'
    )
    definedAtLevel: Optional[DefinedAtLevel] = Field(
        None,
        description='The level at which the email template is defined.',
        examples=['employer'],
    )
    dependsOnModule: Optional[DependsOnModule] = Field(
        None, description='The module to which the email template belongs'
    )
    email: Optional[Email] = Field(
        None, description='The configurable parts of the email template'
    )
    isEmailTemplateEditable: Optional[bool] = Field(
        None,
        description='Indicates whether the email template can be editted.',
        examples=[True],
    )
    type: Optional[Type18] = Field(None, description='The type of the email template')


class ProvidersEmployersEmployerIdEmailtemplatesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1069]] = None
    field_embedded: Optional[List[FieldEmbeddedItem146]] = Field(
        None, alias='_embedded'
    )


class Message1070(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmailtemplatesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1070]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmailtemplatesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmailtemplatesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdDeleteResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message1070]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdDeleteResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message1070]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdDeleteResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdDeleteResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1073(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem147(BaseModel):
    category: Optional[Category23] = Field(
        None, description='The module to which the email template belongs'
    )
    definedAtLevel: Optional[DefinedAtLevel] = Field(
        None,
        description='The level at which the email template is defined.',
        examples=['employer'],
    )
    dependsOnModule: Optional[DependsOnModule] = Field(
        None, description='The module to which the email template belongs'
    )
    email: Optional[Email] = Field(
        None, description='The configurable parts of the email template'
    )
    isEmailTemplateEditable: Optional[bool] = Field(
        None,
        description='Indicates whether the email template can be editted.',
        examples=[True],
    )
    type: Optional[Type18] = Field(None, description='The type of the email template')


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1073]] = None
    field_embedded: Optional[List[FieldEmbeddedItem147]] = Field(
        None, alias='_embedded'
    )


class Message1074(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1074]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdPutRequest(BaseModel):
    category: Optional[Category23] = Field(
        None, description='The module to which the email template belongs'
    )
    definedAtLevel: Optional[DefinedAtLevel] = Field(
        None,
        description='The level at which the email template is defined.',
        examples=['employer'],
    )
    dependsOnModule: Optional[DependsOnModule] = Field(
        None, description='The module to which the email template belongs'
    )
    email: Optional[Email] = Field(
        None, description='The configurable parts of the email template'
    )
    isEmailTemplateEditable: Optional[bool] = Field(
        None,
        description='Indicates whether the email template can be editted.',
        examples=[True],
    )
    type: Optional[Type18] = Field(None, description='The type of the email template')


class Message1075(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content217(BaseModel):
    category: Optional[Category23] = Field(
        None, description='The module to which the email template belongs'
    )
    definedAtLevel: Optional[DefinedAtLevel] = Field(
        None,
        description='The level at which the email template is defined.',
        examples=['employer'],
    )
    dependsOnModule: Optional[DependsOnModule] = Field(
        None, description='The module to which the email template belongs'
    )
    email: Optional[Email] = Field(
        None, description='The configurable parts of the email template'
    )
    isEmailTemplateEditable: Optional[bool] = Field(
        None,
        description='Indicates whether the email template can be editted.',
        examples=[True],
    )
    type: Optional[Type18] = Field(None, description='The type of the email template')


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1075]] = None
    content: Optional[Content217] = None


class Message1076(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1076]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdEmailtemplatesEmailTemplateIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1076]] = None
    version: Optional[Version] = None


class Message1078(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country62(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication47(BaseModel):
    key: Optional[int] = Field(
        None,
        description="The key of the further indication ('nadere aanduiding'). Posible values can be aquired via the metadata endpoint",
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication (\'nadere aanduiding\'), the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address29(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country62] = None
    furtherIndication: Optional[FurtherIndication47] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ContactInformation31(BaseModel):
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The fax number to contact this individual',
        examples=['+31 13-1234561'],
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class Country63(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication48(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress17(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country63] = None
    furtherIndication: Optional[FurtherIndication48] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class TypeOfDocument12(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the type of document. Posible values can be aquired via the metadata endpoint',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the type of document', examples=['Passport']
    )


class IdentityDocument12(BaseModel):
    documentIdentification: Optional[str] = Field(None, examples=['CRE45553433'])
    typeOfDocument: Optional[TypeOfDocument12] = None


class CivilStatus15(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Maried'])


class Nationality15(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key for the nationality. Posible values can be aquired via the metadata endpoint',
        examples=[2],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='Description of the nationality', examples=['Dutch']
    )


class PersonalDetails21(BaseModel):
    aowDate: Optional[date_aliased] = Field(
        None,
        description='The date when, according to Dutch law, the person has the right to a state pension. The value is generated by the system based on the date of birth.',
        examples=['2062-08-21'],
    )
    civilStatus: Optional[CivilStatus15] = Field(
        None, description='The civil/marital status of the employee\n'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description="The last name of the employee's partner.", examples=['Wiel']
    )
    nationality: Optional[Nationality15] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description="The prefix to the last name of the employee's partner.",
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')


class FieldEmbeddedItem148(BaseModel):
    address: Optional[Address29] = None
    contactInformation: Optional[ContactInformation31] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress17] = None
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    exclusionFromAbsenceStatus: Optional[bool] = Field(
        None,
        description='Indicates whether the employee is excluded for any information of absence\n',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    identityDocument: Optional[IdentityDocument12] = None
    personalDetails: Optional[PersonalDetails21] = None
    revokeEmployeeSelfServiceAccessOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the Employee will be automatically blocked.\n',
        examples=['2018-10-23'],
    )
    statusEmployeeSelfService: Optional[StatusEmployeeSelfService] = Field(
        None,
        description='The status of the accessability of the Employee Self Service application. In case ESS is not relevant the object will be returned as NULL. Possible values can be acquired via the metadata endpoint',
    )
    travel: Optional[Travel] = None


class ProvidersEmployersEmployerIdEmployeesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1078]] = None
    field_embedded: Optional[List[FieldEmbeddedItem148]] = Field(
        None, alias='_embedded'
    )


class Country64(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication49(BaseModel):
    key: Optional[int] = Field(
        None,
        description="The key of the further indication ('nadere aanduiding'). Posible values can be aquired via the metadata endpoint",
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication (\'nadere aanduiding\'), the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address30(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country64] = None
    furtherIndication: Optional[FurtherIndication49] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ContactInformation32(BaseModel):
    businessEmailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The business e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    businessMobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The business mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    businessPhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The business phone number of the employee.',
        examples=['+31 13-1234567'],
    )
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The fax number to contact this individual',
        examples=['+31 13-1234561'],
    )
    mobilePhoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The mobile phone number of the employee.',
        examples=['+31 6-1231456'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the employee.',
        examples=['+31 13-1234567'],
    )


class Country65(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication50(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress18(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country65] = None
    furtherIndication: Optional[FurtherIndication50] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument13(BaseModel):
    documentIdentification: Optional[str] = Field(None, examples=['CRE45553433'])
    typeOfDocument: Optional[TypeOfDocument12] = None


class PersonalDetails22(BaseModel):
    aowDate: Optional[date_aliased] = Field(
        None,
        description='The date when, according to Dutch law, the person has the right to a state pension. The value is generated by the system based on the date of birth.',
        examples=['2062-08-21'],
    )
    civilStatus: Optional[CivilStatus15] = Field(
        None, description='The civil/marital status of the employee\n'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description="The last name of the employee's partner.", examples=['Wiel']
    )
    nationality: Optional[Nationality15] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description="The prefix to the last name of the employee's partner.",
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')


class FieldEmbeddedItem149(BaseModel):
    address: Optional[Address30] = None
    contactInformation: Optional[ContactInformation32] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress18] = None
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    exclusionFromAbsenceStatus: Optional[bool] = Field(
        None,
        description='Indicates whether the employee is excluded for any information of absence\n',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    identityDocument: Optional[IdentityDocument13] = None
    personalDetails: Optional[PersonalDetails22] = None
    revokeEmployeeSelfServiceAccessOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the Employee will be automatically blocked.\n',
        examples=['2018-10-23'],
    )
    statusEmployeeSelfService: Optional[StatusEmployeeSelfService] = Field(
        None,
        description='The status of the accessability of the Employee Self Service application. In case ESS is not relevant the object will be returned as NULL. Possible values can be acquired via the metadata endpoint',
    )
    travel: Optional[Travel] = None


class ProvidersEmployersEmployerIdEmployeesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1078]] = None
    field_embedded: Optional[List[FieldEmbeddedItem149]] = Field(
        None, alias='_embedded'
    )


class Message1080(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesGetResponse2(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1080]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesGetResponse4(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1081(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Partner(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    endDate: Optional[date_aliased] = Field(
        None, description='end date', examples=['1995-05-21']
    )
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    startDate: Optional[date_aliased] = Field(
        None, description='startdate', examples=['1995-05-21']
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')
    waoClassification: Optional[WaoClassification] = Field(
        None,
        description='The occupational disability classification in the form of a percentage range.',
    )


class FieldEmbeddedItem150(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    partner: Optional[Partner] = None


class ProvidersEmployersEmployerIdEmployeesActualpartnersGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1081]] = None
    field_embedded: Optional[List[FieldEmbeddedItem150]] = Field(
        None, alias='_embedded'
    )


class Message1082(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesActualpartnersGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1082]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesActualpartnersGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesActualpartnersGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1083(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Children(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    residenceStatus: Optional[ResidenceStatus] = Field(
        None,
        description='Indicator to tell if the child is living at home or not. Use null if unknown.\n',
    )


class FieldEmbeddedItem151(BaseModel):
    children: Optional[Children] = None
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdEmployeesChildrenGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1083]] = None
    field_embedded: Optional[List[FieldEmbeddedItem151]] = Field(
        None, alias='_embedded'
    )


class Message1084(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesChildrenGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1084]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesChildrenGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesChildrenGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1085(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country66(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class Address31(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country66] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox.  For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234 AA']
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Contacts(BaseModel):
    address: Optional[Address31] = None
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='Describes the relationship of the contact to the employee',
        examples=['Moeder'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the contact', examples=['Johanna Bakker']
    )
    particularities: Optional[constr(max_length=4000)] = Field(
        None,
        description='Extra information about the contact',
        examples=['Genoemd adres is een priveadres'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None, description='The phone number of the contact', examples=['013-12345678']
    )


class FieldEmbeddedItem152(BaseModel):
    contacts: Optional[Contacts] = None
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdEmployeesContactsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1085]] = None
    field_embedded: Optional[List[FieldEmbeddedItem152]] = Field(
        None, alias='_embedded'
    )


class Message1086(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesContactsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1086]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesContactsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesContactsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1087(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee10(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within a employer.',
        examples=[156],
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None,
        description='The last name of the partner of the employee',
        examples=['Wiel'],
    )
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the employee', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix of the partner of the employee',
        examples=['van de'],
    )


class EmploymentContractType11(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Arbeidsovereenkomst (excl BBL)'])


class NonPayrollAdministration11(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None,
        description='Name of the non payroll administration',
        examples=['HR only employees'],
    )


class PayrollAdministration13(BaseModel):
    clientNumber: Optional[int] = Field(
        None,
        description='The client number is a unique number for administrations that are used for payrolling. This field has no value if the administration is not used for payrolling.',
        examples=[1234],
    )
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None,
        description='Name of the payroll administration',
        examples=['ABC accountants'],
    )


class TypeOfParticipation11(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[str] = Field(None, examples=['n.vt.'])


class FieldEmbeddedItem153(BaseModel):
    employee: Optional[Employee10] = None
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period. NL: Completeren/Berekenen uren\n',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer. NL: DatumOpzegging',
        examples=['2018-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerknemer',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerkgever',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties. NL: PeriodeOpzegTermijn',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end. NL: AanstellingTot',
        examples=['2019-01-01'],
    )
    commissionUntilDate1: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #1. NL: AanstellingTot1',
        examples=['2018-05-31'],
    )
    commissionUntilDate2: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #2. NL: AanstellingTot2',
        examples=['2018-05-31'],
    )
    commissionUntilDate3: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #3. NL: AanstellingTot3',
        examples=['2018-05-31'],
    )
    commissionUntilDate4: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #4. NL: AanstellingTot4',
        examples=['2018-05-31'],
    )
    commissionUntilDate5: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #5. NL: AanstellingTot5',
        examples=['2018-05-31'],
    )
    commissionUntilDate6: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #6. NL: AanstellingTot6',
        examples=['2018-05-31'],
    )
    deviatingCLAExternalParty: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for external parties . NL: CaoKlantgroepAfwijkend',
        examples=[2],
    )
    deviatingCLATaxReturn: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns. NL: CAOUWV',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. NL: EmailVerlofaanvraag',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level. NL: WerknemerProfielID\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    employmentCategoryType: Optional[EmploymentCategoryType] = Field(
        None,
        description='A selection of special pre defined employment-types for the employment.  NL: Type dienstverband',
    )
    employmentContractType: Optional[EmploymentContractType11] = Field(
        None,
        description='The type of employment applicable for the employment. NL: BasisDienstverband',
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None,
        description='A selection of pre defined durations for the employment. NL: SoortDienstverband',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends. NL: DatumUitDienst',
        examples=['2018-10-23'],
    )
    endOfEmploymentDueToIllness: Optional[bool] = Field(
        None,
        description='Indicates whether the reason for the termination of an employment is due to long-term illness. NL: ZiekUitDienst',
        examples=[False],
    )
    endOfEmploymentReason: Optional[EndOfEmploymentReason4] = Field(
        None,
        description="The reason for the end of the employment. NL: RedenEindeDienstverband\n\n__Note:__ as of 2020-01-01 `endOfEmploymentReasonTaxAuthorities` replaces this field as the main reason for the end of the employment. We say 'main reason' as in certain cases this field still has a purpose. \nPlease set this field to 8 (Others) unless one of the following integrations is used for this employment\n  * UPA-pensioenaangifte\n  * Cordares\n  * APG-pensioenaangifte\n  * Achmea",
    )
    endOfEmploymentReasonTaxAuthorities: Optional[
        EndOfEmploymentReasonTaxAuthorities4
    ] = Field(
        None,
        description='The reason for the end of the employment as specified by the Dutch Tax authorties. NL: RedenEindeDienstverbandAangifte\n\n__Note:__ This field replaces `endOfEmploymentReason` as of 2020-01-01. `endOfEmploymentReason` will remain as a field in the resource as several integration require this field still.',
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations. Standard-set means the standard set defined for the administration will be applied for this employment. NULL means no set will be defined for this employment (so no access to any components). NL : ExportsetID\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user.',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht). NL: CodeUitzondering',
    )
    exemptionPremiumWaiverMarginalLabour: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. waiver) on the premium marginal labour (vrijstelling marginale arbeid) applies for this employment. NL: PremieVrijstellingMarginaleArbeid',
        examples=[False],
    )
    exemptionWorkRelatedExpenseScheme: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. non-participation) on the work-related expense scheme (werkkostenregeling) applies for this employment. NL: WerkkostenRegelingUitsluiting',
        examples=[False],
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether a first-day notification (EersteDagsMelding) was created for the employment. Attention: this indication cannot be altered after an employment has been created. NL: EersteDagsMelding ',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation. NL: SoortOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company. NL: HistorischeDatumInDienst',
        examples=['2012-05-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment. NL: NummerInkomstenVerhouding',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None,
        description='An employee that wants to remain anonymous related to social security instances. NL: IsAnoniemeWerknemer\n',
        examples=[True],
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a director and major shareholder (Dutch: directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsDirecteurGrootAandeelhouder',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsFamilieVanEigenaar',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Werknemerverzekering. NL: IsGemoedsbezwaardWerknemerverzekering\n',
        examples=[True],
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Volksverzekering. NL: IsGemoedsbezwaardVolksverzekering\n',
        examples=[True],
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment. This field can be `null` in cases where it is unknown whether the employment is an on-call employment. NL: IsOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsVorigeEigenaar',
        examples=[False],
    )
    linkedEmployment: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment. NL: NaamLoonstrook',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration11] = Field(
        None,
        description='Id of the non-payroll administration. This field cannot simultaneously have a value with payrollAdministration (only one can have a value at a time)\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment. NL: Deelname55Plus',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration13] = Field(
        None,
        description='Id of the payroll administration. This field cannot simultaneously have a value with nonPayrollAdministration (only one can have a value at a time)\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    payrollId: Optional[int] = Field(
        None,
        description='The payrolling number for this employment of the employee. Used by the payroll engine. This number is automatically generated and cannot be changed by the user. NL: PersoneelsnummerVerloning',
        examples=[2],
    )
    periodPayGradeAdjustment: Optional[conint(ge=1, le=52)] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’. NL: PeriodeSalarisPeriodiek',
        examples=[2],
    )
    professionCode: Optional[conint(ge=1, le=999)] = Field(
        None,
        description='A code field for a profession. This field only applies in case of a specific CLA (Bouw / Infra). Please leave empty if not applicable. NL: BeroepUWV',
        examples=[4],
    )
    sendToExternalParty: Optional[SendToExternalParty] = Field(
        None,
        description='Indicates whether payroll information of this employment is sent to external pension funds. Attention: this indication ONLY applies regarding the information to pension funds. If NULL then setting according to regulation is leading. NL: AanleveringExternePartij',
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment. NL: SalarisschaalSignaleren',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None,
        description='Indicates the special income ratio. NL: SpecialeInkomstenVerhouding',
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month. NL: AanvangOpzegtermijn',
        examples=['2018-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts. NL: DatumInDienst',
        examples=['2018-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. NL: Startdatum onbepaalde tijd This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    temporaryTaxExemption: Optional[TemporaryTaxExemption] = Field(
        None,
        description='Indicates whether there a temporary tax exemption is to be applied for the employment. NL: TijdelijkeHeffingskorting',
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment. NL: SoortWerknemer',
    )
    typeOfParticipation: Optional[TypeOfParticipation11] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: AardDeelnemerschap',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s. NL: Vakantiebonnen',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: WaardeDeelnemerschap',
    )
    wachtgeldOldRegulation: Optional[bool] = Field(
        None,
        description='Indicates whether the (old) wachtgeld regulation is applicable for the employment. NL: WachtgeldOudeRegeling',
        examples=[False],
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Did the employment and employer make a written contract? NL: Schriftelijke overeenkomst',
        examples=[True],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1087]] = None
    field_embedded: Optional[List[FieldEmbeddedItem153]] = Field(
        None, alias='_embedded'
    )


class Message1088(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1088]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1089(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CurrentPayGrade(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Schaal B1, 15 jaar']
    )


class Department14(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Verkoop'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Function14(BaseModel):
    description: Optional[constr(max_length=50)] = Field(None, examples=['Directeur'])
    group: Optional[constr(max_length=5)] = Field(None, examples=['internal'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class EmploymentInformation(BaseModel):
    department: Optional[Department14] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    function: Optional[Function14] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    payrollAdministration: Optional[PayrollAdministration13] = Field(
        None,
        description='Id of the payroll administration. This field cannot simultaneously have a value with nonPayrollAdministration (only one can have a value at a time)\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )


class ProposalReason(BaseModel):
    key: Optional[int] = Field(None, description='The key of the reason', examples=[1])
    value: Optional[str] = Field(
        None,
        description='The description of the reasson for the proposal',
        examples=['Birthday'],
    )


class ProposedPayGrade(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Schaal B1, 15 jaar']
    )


class Status17(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Open'])


class FieldEmbeddedItem154(BaseModel):
    currentGrossWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='The gross wage for the employee\n', examples=[23]
    )
    currentPayGrade: Optional[CurrentPayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    employmentInformation: Optional[EmploymentInformation] = None
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payScale: Optional[PayScale] = Field(
        None,
        description='A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee"s level, rank or status within the employer"s organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    proposalReason: Optional[ProposalReason] = None
    proposedGrossWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='The gross wage for the employee\n', examples=[23]
    )
    proposedPayGrade: Optional[ProposedPayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    startDateProposal: Optional[date_aliased] = Field(
        None,
        description='The date to which the declaration is applicable. As requested by the employee.',
        examples=['2017-11-01'],
    )
    status: Optional[Status17] = Field(
        None,
        description='The current status of the wage proposal\n\nThe status is changed by using the PATCH endpoint.\n\n1. Voorgesteld --> Accept or reject\n2. Goedgekeurd ---> No changes possible\n3. Afgekeurd ---> No changes possible\n5. Niet verwerkbaar ---> No changes possible',
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsWageProposalsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1089]] = None
    field_embedded: Optional[List[FieldEmbeddedItem154]] = Field(
        None, alias='_embedded'
    )


class Message1090(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsWageProposalsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1090]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsWageProposalsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsWageProposalsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1091(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Category27(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Uren'])


class PayrollComponent65(BaseModel):
    category: Optional[Category27] = Field(
        None,
        description='The category of the payroll component. There are six viable categories for this resource: <br/> 7,  Bruto vergoeding volgens tabel<br/> 9,  Netto vergoeding<br/> 30, Bedrag per eenheid<br/> 12, Bruto inhouding<br/> 13, Netto inhouding<br/> 11, Fiscale bijtelling <br/> 17, Afdrachtvermindering<br/>\n',
    )
    deductionOrPayment: Optional[DeductionOrPayment] = Field(
        None,
        description='Indicates if the value of the payroll component will be deducted from or added to the salary. In case the component is neither a deduction or a payment, NULL is returned.\n',
    )
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Uren gewerkt'],
    )
    key: Optional[int] = Field(
        None, description='The number for the payroll component.\n', examples=[1]
    )


class BenefitsAndDeductions(BaseModel):
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent65] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] per payroll component is maintained within this resource.\n',
        examples=['1995-05-21'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The value for the selected payroll component.    <br/>\n',
        examples=[50.87],
    )


class FieldEmbeddedItem155(BaseModel):
    benefitsAndDeductions: Optional[BenefitsAndDeductions] = None
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsActualbenefitsanddeductionsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1091]] = None
    field_embedded: Optional[List[FieldEmbeddedItem155]] = Field(
        None, alias='_embedded'
    )


class Message1092(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsActualbenefitsanddeductionsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1092]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsActualbenefitsanddeductionsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsActualbenefitsanddeductionsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PayrollComponent66(BaseModel):
    key: Optional[int] = Field(
        None, description='The number for the payroll component.\n', examples=[1]
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsBenefitsanddeductionsPostRequest(
    BaseModel
):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    payrollComponent: Optional[PayrollComponent66] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment.\n\n`payrollComponent` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n__Note__ It is posible to have no wage record.\n',
        examples=['1995-05-21'],
    )
    value: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None, description='The value for the component\n', examples=[80]
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsBenefitsanddeductionsPostResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message1092]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEmployeesEmploymentsBenefitsanddeductionsPostResponse1(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsBenefitsanddeductionsPostResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1094(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CalendarItem(BaseModel):
    details: Optional[Dict[str, Any]] = Field(
        None,
        description='In the future this object describes the calendar item in more detail. For now this object will always be NULL.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which absence information is available.\n',
        examples=['2019-01-05'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which absence information is available.\n',
        examples=['2019-01-01'],
    )


class Employee11(BaseModel):
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Employment4(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class FieldEmbeddedItem156(BaseModel):
    calendar: Optional[List[CalendarItem]] = Field(
        None,
        description='A list of time periods for which absence information is available.\n',
    )
    department: Optional[Department14] = Field(
        None,
        description='The department of the employment.\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    employee: Optional[Employee11] = None
    employment: Optional[Employment4] = None


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarAbsencesGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1094]] = None
    field_embedded: Optional[List[FieldEmbeddedItem156]] = Field(
        None, alias='_embedded'
    )


class Message1095(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarAbsencesGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1095]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarAbsencesGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarAbsencesGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1096(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CalendarItem1(BaseModel):
    details: Optional[Dict[str, Any]] = Field(
        None,
        description='In the future this object describes the calendar item in more detail. For now this object will always be NULL.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which availability information is available.\n',
        examples=['2019-01-05'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which availability information is available.\n',
        examples=['2019-01-01'],
    )


class FieldEmbeddedItem157(BaseModel):
    calendar: Optional[List[CalendarItem1]] = Field(
        None,
        description='A list of time periods for which availability information is available.\n',
    )
    department: Optional[Department14] = Field(
        None,
        description='The department of the employment.\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    employee: Optional[Employee11] = None
    employment: Optional[Employment4] = None


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarAvailablehoursGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1096]] = None
    field_embedded: Optional[List[FieldEmbeddedItem157]] = Field(
        None, alias='_embedded'
    )


class Message1097(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarAvailablehoursGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1097]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarAvailablehoursGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarAvailablehoursGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1098(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CalendarItem2(BaseModel):
    details: Optional[Dict[str, Any]] = Field(
        None,
        description='In the future this object describes the calendar item in more detail. For now this object will always be NULL.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which leave information is available.\n',
        examples=['2019-01-05'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which leave information is available.\n',
        examples=['2019-01-01'],
    )


class FieldEmbeddedItem158(BaseModel):
    calendar: Optional[List[CalendarItem2]] = Field(
        None,
        description='A list of time periods for which leave information is available.\n',
    )
    department: Optional[Department14] = Field(
        None,
        description='The department of the employment.\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    employee: Optional[Employee11] = None
    employment: Optional[Employment4] = None


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarLeaveGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1098]] = None
    field_embedded: Optional[List[FieldEmbeddedItem158]] = Field(
        None, alias='_embedded'
    )


class Message1099(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarLeaveGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1099]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarLeaveGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarLeaveGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1100(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CalendarItem3(BaseModel):
    details: Optional[Dict[str, Any]] = Field(
        None,
        description='In the future this object describes the calendar item in more detail. For now this object will always be NULL.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period for which leave request information is available.\n',
        examples=['2019-01-05'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period for which leave request information is available.\n',
        examples=['2019-01-01'],
    )


class FieldEmbeddedItem159(BaseModel):
    calendar: Optional[List[CalendarItem3]] = Field(
        None,
        description='A list of time periods for which leave request information is available.\n',
    )
    department: Optional[Department14] = Field(
        None,
        description='The department of the employment.\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    employee: Optional[Employee11] = None
    employment: Optional[Employment4] = None


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarLeaverequestsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1100]] = None
    field_embedded: Optional[List[FieldEmbeddedItem159]] = Field(
        None, alias='_embedded'
    )


class Message1101(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarLeaverequestsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1101]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarLeaverequestsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsCalendarLeaverequestsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1102(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FurtherIndication51(BaseModel):
    key: Optional[int] = Field(
        None,
        description="The key of the further indication ('nadere aanduiding'). Posible values can be aquired via the metadata endpoint",
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication (\'nadere aanduiding\'), the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address32(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country66] = None
    furtherIndication: Optional[FurtherIndication51] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Country68(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication52(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress19(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country68] = None
    furtherIndication: Optional[FurtherIndication52] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class IdentityDocument14(BaseModel):
    documentIdentification: Optional[str] = Field(None, examples=['CRE45553433'])
    typeOfDocument: Optional[TypeOfDocument12] = None


class PersonalDetails23(BaseModel):
    aowDate: Optional[date_aliased] = Field(
        None,
        description='The date when, according to Dutch law, the person has the right to a state pension. The value is generated by the system based on the date of birth.',
        examples=['2062-08-21'],
    )
    civilStatus: Optional[CivilStatus15] = Field(
        None, description='The civil/marital status of the employee\n'
    )
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    dateOfDeath: Optional[date_aliased] = Field(None, description='The date of death\n')
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    gender: Optional[Gender] = Field(None, description='The gender\n')
    howToFormatLastName: Optional[HowToFormatLastName] = Field(
        None, description='Indicates how the system will format the last name.\n'
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials\n', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None,
        description='The last name, family name or surname as part of a persons personal name.\n',
        examples=['Bergen'],
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None, description="The last name of the employee's partner.", examples=['Wiel']
    )
    nationality: Optional[Nationality15] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    placeOfBirth: Optional[constr(min_length=1, max_length=24)] = Field(
        None, description='The place of birth\n', examples=['Amsterdam']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix to the last name\n', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description="The prefix to the last name of the employee's partner.",
        examples=['van de'],
    )
    title: Optional[Title] = Field(None, description='The title to be used (if any).\n')


class Employee15(BaseModel):
    address: Optional[Address32] = None
    contactInformation: Optional[ContactInformation32] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress19] = None
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    exclusionFromAbsenceStatus: Optional[bool] = Field(
        None,
        description='Indicates whether the employee is excluded for any information of absence\n',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    identityDocument: Optional[IdentityDocument14] = None
    personalDetails: Optional[PersonalDetails23] = None
    revokeEmployeeSelfServiceAccessOn: Optional[date_aliased] = Field(
        None,
        description='The date on which the Employee will be automatically blocked.\n',
        examples=['2018-10-23'],
    )
    statusEmployeeSelfService: Optional[StatusEmployeeSelfService] = Field(
        None,
        description='The status of the accessability of the Employee Self Service application. In case ESS is not relevant the object will be returned as NULL. Possible values can be acquired via the metadata endpoint',
    )
    travel: Optional[Travel] = None


class CalculateUsingWorkPattern14(BaseModel):
    daysDailyRate: Optional[bool] = Field(
        None,
        description='Indicates whether the number of days of dailyrate should be calculated based on the workpattern. The number of days are normally calculated by the working hours.',
        examples=[False],
    )
    deviatingDaysAndHours: Optional[bool] = Field(
        None,
        description='Indication whether  the deviating hours per week and deviating SV-days per period are to be automatically calculated based on the workpattern. Please note (!) that any values in the deviatingHoursPerWeek and deviatingSvDaysPerPeriod fields (of this workingHours record) will be overwritten based on this calculation if true (and endDate=NULL)!',
        examples=[False],
    )
    hoursBrokenPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern in broken periods. These are periods of in or out of service.',
        examples=[False],
    )
    hoursRegularPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern for regular periods.',
        examples=[False],
    )
    leaveHours: Optional[bool] = Field(
        None,
        description='Indicates whether then leave balances (verlof) are to be calculated based on the workpattern.  If set to false and the user is not linked to a leave policy with `applyLeaveSchedule` set to true the following fields are used for the calculation `deviatingHoursPerWeek` if null `shift.fullTimeHoursPerWeek` is used\n',
        examples=[True],
    )


class FlexibleHoursContract14(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Minimum uren contract']
    )


class Shift24(BaseModel):
    bonusPercentage: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift.\n',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.\n',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None, description='The number for the shift.\n', examples=[1]
    )


class WorkPattern14(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class Workinghours(BaseModel):
    aggregatedHoursPerWeek: Optional[confloat(ge=0.01, le=168.0)] = Field(
        None,
        description="This read-only field provides the user with a single point of knowledge as to what number of hours per week employment is actually registered in regards to the payrolling process. This number may be respectively based on the workpattern, deviating hours per week or shift hours. If the employment is an 'on call employment' (oproepkracht/invalkracht) the number is either NULL or represents the min-hours if that is applicable.\nThis field is especially useful for third-parties that want to know the number of hours per week (without having to apply specific Loket logic). I.e. this field is not visible in Loket GUI.",
        examples=[24],
    )
    averageHoursPerWeek: Optional[confloat(ge=0.0, le=168.0)] = Field(
        None,
        description='This field can be used to register the average hours per week an employment with varying hours works. For example, 0 hour contracts and min max contracts. The value of this field does NOT directly affect the payrolling proces.',
        examples=[32],
    )
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor, purely for administrative purposes. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100. \nPlease note that this field is not used in the actual payroll proces! For the payroll process the number of hours is used.',
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern14] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object). Onderliggende elementen geven aan of specifieke waardes berekend moeten worden op basis van het twee wekelijks werkpatroon `workPattern`\n',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.99)] = Field(
        None,
        description='If this field is empty the fulltime hours are based as defined by the shift, this optional field is used to register an overwriting value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[conint(ge=1, le=23)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value.',
        examples=[20],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.\n',
        examples=['2018-10-23'],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract14] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.',
        examples=[True],
    )
    shift: Optional[Shift24] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    shiftRateSickLeave: Optional[ShiftRateSickLeave] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shiftRateSickLeave` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='Start date of the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n',
        examples=['2018-01-01'],
    )
    workPattern: Optional[WorkPattern14] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class DistributionUnit23(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Sales'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class OrganizationalEntity1(BaseModel):
    department: Optional[Department14] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[constr(max_length=50)] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[constr(max_length=5)] = Field(
        None,
        description='The deviating function group description of the employment. Only applies when a deviating function description is defined.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit23] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center.\n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    function: Optional[Function14] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    internalTelephoneExtensionNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The phone number of the standard working location (standplaats) for the employment.',
        examples=['678'],
    )
    placeOfEmployment: Optional[constr(max_length=24)] = Field(
        None,
        description='The standard working location (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class Wage2(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected.\n',
        examples=[True],
    )
    employerCosts: Optional[confloat(ge=0.01, le=99999.99)] = Field(
        None,
        description='The cost for the employer for this employee.\n',
        examples=[3500],
    )
    employerCostsType: Optional[EmployerCostsType] = Field(
        None,
        description='Indicates whether the employer costs are hourly costs or periodic costs. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the information in the record.\n'
    )
    grossWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross wage for the employee\n', examples=[2300]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a Periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isGrossWageFullTime: Optional[bool] = Field(
        None,
        description='Indicates whether the given grossWage is either a full-time wage or a part-time wage. Full-time wage is the default value (isGrossWageFulltime = true) and Loket.nl recommends to use this option. A full-time wage takes into account the part-time percentage of an employment. While a part-time wage does not. E.g. A full-time wage of 2400 euro’s is registered. The employments works 20 out of 40 hours (40 fours is a full-time shift) thus having a 20/40 = 50% part-time percentage. The part-time hours (deviatingHoursPerWeek) are accessible through the endpoint for working hours of an employement. In the wage calculation Loket.nl will divide the grossWage component by 50% resulting in a grossWage of 1200 euro’s. In the case of a part-time wage the part-time percentage will be ignored.\n',
        examples=[True],
    )
    netWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='Net wage for the employment\n', examples=[2400]
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description="A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee's level, rank or status within the employer's organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration context. Possible values can be managed by the user.\n",
    )
    payrollPeriodType: Optional[PayrollPeriodType11] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4). The value of this field is used to further specify the meaning of grossWageType, netWageType and employerCostsType. When the key fields of these three wage types have a value 1 (meaning periodic wage), the payrollPeriodType field shows the period type (month, 4 weeks or week) applicable to the wages for the employment. E.g. If the value for grossWageType.key = 1 (periodic wage) and the value for payrollPeriodType.key = 1 (meaning Month), then the wage registerd in grossWage is a monthly wage. Note that in cases where the wage type is an hourly wage (grossWageType.key = 2), the payrollPeriodType should be ignored.\n',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n__Note__ It is posible to have no wage record.\n',
        examples=['1995-05-21'],
    )


class FieldEmbeddedItem160(BaseModel):
    employee: Optional[Employee15] = None
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period. NL: Completeren/Berekenen uren\n',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer. NL: DatumOpzegging',
        examples=['2018-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerknemer',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property. NL: OpzegtermijnWerkgever',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties. NL: PeriodeOpzegTermijn',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end. NL: AanstellingTot',
        examples=['2019-01-01'],
    )
    commissionUntilDate1: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #1. NL: AanstellingTot1',
        examples=['2018-05-31'],
    )
    commissionUntilDate2: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #2. NL: AanstellingTot2',
        examples=['2018-05-31'],
    )
    commissionUntilDate3: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #3. NL: AanstellingTot3',
        examples=['2018-05-31'],
    )
    commissionUntilDate4: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #4. NL: AanstellingTot4',
        examples=['2018-05-31'],
    )
    commissionUntilDate5: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #5. NL: AanstellingTot5',
        examples=['2018-05-31'],
    )
    commissionUntilDate6: Optional[date_aliased] = Field(
        None,
        description='Until date for commision #6. NL: AanstellingTot6',
        examples=['2018-05-31'],
    )
    deviatingCLAExternalParty: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for external parties . NL: CaoKlantgroepAfwijkend',
        examples=[2],
    )
    deviatingCLATaxReturn: Optional[conint(ge=1, le=9999)] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns. NL: CAOUWV',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. NL: EmailVerlofaanvraag',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level. NL: WerknemerProfielID\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    employmentCategoryType: Optional[EmploymentCategoryType] = Field(
        None,
        description='A selection of special pre defined employment-types for the employment.  NL: Type dienstverband',
    )
    employmentContractType: Optional[EmploymentContractType11] = Field(
        None,
        description='The type of employment applicable for the employment. NL: BasisDienstverband',
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None,
        description='A selection of pre defined durations for the employment. NL: SoortDienstverband',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends. NL: DatumUitDienst',
        examples=['2018-10-23'],
    )
    endOfEmploymentDueToIllness: Optional[bool] = Field(
        None,
        description='Indicates whether the reason for the termination of an employment is due to long-term illness. NL: ZiekUitDienst',
        examples=[False],
    )
    endOfEmploymentReason: Optional[EndOfEmploymentReason4] = Field(
        None,
        description="The reason for the end of the employment. NL: RedenEindeDienstverband\n\n__Note:__ as of 2020-01-01 `endOfEmploymentReasonTaxAuthorities` replaces this field as the main reason for the end of the employment. We say 'main reason' as in certain cases this field still has a purpose. \nPlease set this field to 8 (Others) unless one of the following integrations is used for this employment\n  * UPA-pensioenaangifte\n  * Cordares\n  * APG-pensioenaangifte\n  * Achmea",
    )
    endOfEmploymentReasonTaxAuthorities: Optional[
        EndOfEmploymentReasonTaxAuthorities4
    ] = Field(
        None,
        description='The reason for the end of the employment as specified by the Dutch Tax authorties. NL: RedenEindeDienstverbandAangifte\n\n__Note:__ This field replaces `endOfEmploymentReason` as of 2020-01-01. `endOfEmploymentReason` will remain as a field in the resource as several integration require this field still.',
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations. Standard-set means the standard set defined for the administration will be applied for this employment. NULL means no set will be defined for this employment (so no access to any components). NL : ExportsetID\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user.',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht). NL: CodeUitzondering',
    )
    exemptionPremiumWaiverMarginalLabour: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. waiver) on the premium marginal labour (vrijstelling marginale arbeid) applies for this employment. NL: PremieVrijstellingMarginaleArbeid',
        examples=[False],
    )
    exemptionWorkRelatedExpenseScheme: Optional[bool] = Field(
        None,
        description='Indicates whether an exemption (i.e. non-participation) on the work-related expense scheme (werkkostenregeling) applies for this employment. NL: WerkkostenRegelingUitsluiting',
        examples=[False],
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether a first-day notification (EersteDagsMelding) was created for the employment. Attention: this indication cannot be altered after an employment has been created. NL: EersteDagsMelding ',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation. NL: SoortOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company. NL: HistorischeDatumInDienst',
        examples=['2012-05-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment. NL: NummerInkomstenVerhouding',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None,
        description='An employee that wants to remain anonymous related to social security instances. NL: IsAnoniemeWerknemer\n',
        examples=[True],
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a director and major shareholder (Dutch: directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsDirecteurGrootAandeelhouder',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsFamilieVanEigenaar',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Werknemerverzekering. NL: IsGemoedsbezwaardWerknemerverzekering\n',
        examples=[True],
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None,
        description='Gemoedsbezwaard Volksverzekering. NL: IsGemoedsbezwaardVolksverzekering\n',
        examples=[True],
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment. This field can be `null` in cases where it is unknown whether the employment is an on-call employment. NL: IsOproepkrachtOfInvalkracht\n',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder. NL: IsVorigeEigenaar',
        examples=[False],
    )
    linkedEmployment: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment. NL: NaamLoonstrook',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration11] = Field(
        None,
        description='Id of the non-payroll administration. This field cannot simultaneously have a value with payrollAdministration (only one can have a value at a time)\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment. NL: Deelname55Plus',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration13] = Field(
        None,
        description='Id of the payroll administration. This field cannot simultaneously have a value with nonPayrollAdministration (only one can have a value at a time)\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    payrollId: Optional[int] = Field(
        None,
        description='The payrolling number for this employment of the employee. Used by the payroll engine. This number is automatically generated and cannot be changed by the user. NL: PersoneelsnummerVerloning',
        examples=[2],
    )
    periodPayGradeAdjustment: Optional[conint(ge=1, le=52)] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’. NL: PeriodeSalarisPeriodiek',
        examples=[2],
    )
    professionCode: Optional[conint(ge=1, le=999)] = Field(
        None,
        description='A code field for a profession. This field only applies in case of a specific CLA (Bouw / Infra). Please leave empty if not applicable. NL: BeroepUWV',
        examples=[4],
    )
    sendToExternalParty: Optional[SendToExternalParty] = Field(
        None,
        description='Indicates whether payroll information of this employment is sent to external pension funds. Attention: this indication ONLY applies regarding the information to pension funds. If NULL then setting according to regulation is leading. NL: AanleveringExternePartij',
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment. NL: SalarisschaalSignaleren',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None,
        description='Indicates the special income ratio. NL: SpecialeInkomstenVerhouding',
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month. NL: AanvangOpzegtermijn',
        examples=['2018-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts. NL: DatumInDienst',
        examples=['2018-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. NL: Startdatum onbepaalde tijd This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    temporaryTaxExemption: Optional[TemporaryTaxExemption] = Field(
        None,
        description='Indicates whether there a temporary tax exemption is to be applied for the employment. NL: TijdelijkeHeffingskorting',
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment. NL: SoortWerknemer',
    )
    typeOfParticipation: Optional[TypeOfParticipation11] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: AardDeelnemerschap',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s. NL: Vakantiebonnen',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension (product required). NL: WaardeDeelnemerschap',
    )
    wachtgeldOldRegulation: Optional[bool] = Field(
        None,
        description='Indicates whether the (old) wachtgeld regulation is applicable for the employment. NL: WachtgeldOudeRegeling',
        examples=[False],
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Did the employment and employer make a written contract? NL: Schriftelijke overeenkomst',
        examples=[True],
    )
    workinghours: Optional[Workinghours] = None
    organizationalEntity: Optional[OrganizationalEntity1] = None
    wage: Optional[Wage2] = None


class ProvidersEmployersEmployerIdEmployeesEmploymentsComprehensiveGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1102]] = None
    field_embedded: Optional[List[FieldEmbeddedItem160]] = Field(
        None, alias='_embedded'
    )


class Message1103(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsComprehensiveGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1103]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsComprehensiveGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsComprehensiveGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1104(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class EmploymentInformation1(BaseModel):
    department: Optional[Department14] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    employeeNumber: Optional[conint(ge=1)] = Field(
        None,
        description='The employee number to uniquely identify an employee within an employer\n',
        examples=[156],
    )
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None,
        description='The first name, given name, forename or Christian name as part of a persons personal name.\n',
        examples=['Susan'],
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    function: Optional[Function14] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    payrollAdministration: Optional[PayrollAdministration13] = Field(
        None,
        description='Id of the payroll administration. This field cannot simultaneously have a value with nonPayrollAdministration (only one can have a value at a time)\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )


class PayrollComponent67(BaseModel):
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Tijd voor tijd, UREN TVT 130%'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know it by heart.\n',
        examples=[11],
    )


class FieldEmbeddedItem161(BaseModel):
    dateOfLastChangeByEmployee: Optional[datetime] = Field(
        None,
        description='The time the declaration was last changed',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    dateOfSubmissionByEmployee: Optional[datetime] = Field(
        None,
        description='The time the declaration was submitted',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    declarationComment: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the employee',
        examples=['Overwerk project X'],
    )
    declarationDate: Optional[date_aliased] = Field(
        None,
        description='The date to which the declaration is applicable. As requested by the employee.',
        examples=['2017-11-01'],
    )
    declarationStatus: Optional[DeclarationStatus] = Field(
        None,
        description='The current status of the declaration\n\nThe status is changed by using the PATCH endpoint.\n\n1. Open --> Accept or reject\n2. Goedgekeurd ---> Process\n3. Geweigerd ---> No changes possible\n5. Verwerkt ---> No changes possible\n6. Onverwerkbaar ---> No changes possible',
    )
    employmentInformation: Optional[EmploymentInformation1] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    numberOfUnits: Optional[float] = Field(
        None, description='The number of units requested', examples=[8]
    )
    payrollComponent: Optional[PayrollComponent67] = Field(
        None,
        description='A payroll component is the link to the salary calculation. By setting the value of a component the salary calculation will take this value into account when calculating the wage of the employment for the given payroll period. \n',
    )
    processedInPayrollPeriod: Optional[ProcessedInPayrollPeriod] = Field(
        None,
        description='If the declaration has been succesfully processed then this object will show the payroll period for which a payrollPeriodData has been created.\n\nIf the declaration has not yet been processed, then the value of this object will be null.\n',
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsDeclarationsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1104]] = None
    field_embedded: Optional[List[FieldEmbeddedItem161]] = Field(
        None, alias='_embedded'
    )


class Message1105(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsDeclarationsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1105]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsDeclarationsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsDeclarationsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1106(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem162(BaseModel):
    declarationId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsDeclarationsWithattachmentGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1106]] = None
    field_embedded: Optional[List[FieldEmbeddedItem162]] = Field(
        None, alias='_embedded'
    )


class Message1107(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsDeclarationsWithattachmentGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1107]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsDeclarationsWithattachmentGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsDeclarationsWithattachmentGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1108(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem163(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedVersionNumber: Optional[int] = Field(
        None,
        description='The version number reflects the latest version of all predefined underlying tables of this employer/employment.',
        examples=[70429274999853],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsLastmodifiedversionnumbersGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1108]] = None
    field_embedded: Optional[List[FieldEmbeddedItem163]] = Field(
        None, alias='_embedded'
    )


class Message1109(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsLastmodifiedversionnumbersGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1109]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsLastmodifiedversionnumbersGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsLastmodifiedversionnumbersGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1110(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class LeaveType18(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Verlof (bovenwettelijk)'])


class FieldEmbeddedItem164(BaseModel):
    commentEmployee: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the employee',
        examples=['Vakantie naar Spanje'],
    )
    commentHandler: Optional[constr(max_length=4000)] = Field(
        None,
        description='The comment left by the person handling the leave request',
        examples=['Fijne vakantie!'],
    )
    currentlyAvailableUnits: Optional[float] = Field(
        None,
        description='The number of leave units (of the leaveType for this leave request) available to the employment.\nThis value can be negative.',
        examples=[140],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the leave requested (last day of the leave)',
        examples=['2017-11-01'],
    )
    handledBy: Optional[HandledBy] = None
    handledTime: Optional[datetime] = Field(
        None,
        description='The date and time the leave request was handled',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isAccrual: Optional[bool] = Field(
        False,
        description="Indicates whether the request is for accrual of leave.\n- false will result in a reduction of the employee's leave entitlement\n- true will result in an increase of the employee's leave entitlement\n",
        examples=[False],
    )
    leaveRequestStatus: Optional[LeaveRequestStatus] = Field(
        None,
        description='The current status of the leave request\n\nThe leave request status is changed by using the PATCH endpoint (not the PUT).\n\nThe following transitions are possible\n* leaveRequestStatus = submitted -> accepted or rejected\n* leaveRequestStatus = accepted -> no changes possible\n* leaveRequestStatus = rejected -> submitted\n* leaveRequestStatus = revoked by user -> no changes possible\n* leaveRequestStatus = related leave deleted -> no changes possible',
    )
    leaveType: Optional[LeaveType18] = Field(
        None,
        description='The type of leave requested by the employee\n\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    numberOfUnits: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None, description='The number of leave units requested', examples=[8]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the leave requested',
        examples=['2017-11-01'],
    )
    submittedBy: Optional[SubmittedBy] = None
    submittedOn: Optional[datetime] = Field(
        None,
        description='The time the leave request was submitted',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    unitType: Optional[UnitType] = Field(
        None,
        description='If known indicates what the unit type (hours or days) is for `numberOfUnits`. Otherwise the field will be null.',
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsLeaverequestsGetResponse(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1110]] = None
    field_embedded: Optional[List[FieldEmbeddedItem164]] = Field(
        None, alias='_embedded'
    )


class Message1111(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsLeaverequestsGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1111]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsLeaverequestsGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsLeaverequestsGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1112(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee16(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within a employer.',
        examples=[156],
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )


class FieldEmbeddedItem165(BaseModel):
    employee: Optional[Employee16] = None
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end. NL: AanstellingTot',
        examples=['2019-01-01'],
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None,
        description='A selection of pre defined durations for the employment. NL: SoortDienstverband',
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends. NL: DatumUitDienst',
        examples=['2018-10-23'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment. NL: NummerInkomstenVerhouding',
        examples=[12],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration11] = Field(
        None,
        description='Id of the non-payroll administration. This field cannot simultaneously have a value with payrollAdministration (only one can have a value at a time)\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    payrollAdministration: Optional[PayrollAdministration13] = Field(
        None,
        description='Id of the payroll administration. This field cannot simultaneously have a value with nonPayrollAdministration (only one can have a value at a time)\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    payrollId: Optional[int] = Field(
        None,
        description='The payrolling number for this employment of the employee. Used by the payroll engine. This number is automatically generated and cannot be changed by the user. NL: PersoneelsnummerVerloning',
        examples=[2],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts. NL: DatumInDienst',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsMinimizedGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1112]] = None
    field_embedded: Optional[List[FieldEmbeddedItem165]] = Field(
        None, alias='_embedded'
    )


class Message1113(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsMinimizedGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1113]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesEmploymentsMinimizedGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsMinimizedGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsWagesPostRequest(BaseModel):
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    grossWage: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None, description='The gross wage for the employee\n', examples=[2300]
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date for the information in the record.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.\n__Note__ It is posible to have no wage record.\n',
        examples=['1995-05-21'],
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsWagesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1113]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEmployeesEmploymentsWagesPostResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesEmploymentsWagesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1115(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee17(BaseModel):
    emailAddress: Optional[constr(max_length=255)] = Field(
        None,
        description='The e-mail address of the employee.',
        examples=['info@loket.nl'],
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within an employer.',
        examples=[156],
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee', examples=['Bergen']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the employee', examples=['van']
    )


class Status18(Enum):
    HasAccessToClient = 'HasAccessToClient'
    NoAccessToClient = 'NoAccessToClient'
    UserIsBlocked = 'UserIsBlocked'
    AccessToClientIsBlocked = 'AccessToClientIsBlocked'
    InvitePending = 'InvitePending'
    InviteFailed = 'InviteFailed'
    InviteCancelled = 'InviteCancelled'
    InviteExpired = 'InviteExpired'


class FieldEmbeddedItem166(BaseModel):
    employee: Optional[Employee17] = None
    hasTwoFactorAuthentication: Optional[bool] = Field(
        None,
        description='Does the employee have two factor authentication enabled',
        examples=[False],
    )
    status: Optional[Status18] = Field(None, description='Description of the status')


class ProvidersEmployersEmployerIdEmployeesSelfserviceGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1115]] = None
    field_embedded: Optional[List[FieldEmbeddedItem166]] = Field(
        None, alias='_embedded'
    )


class Message1116(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmployeesSelfserviceGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1116]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdEmployeesSelfserviceGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesSelfserviceGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Action16(Enum):
    SendInvite = 'SendInvite'
    RevokeInvite = 'RevokeInvite'
    RevokeAccess = 'RevokeAccess'
    ReinstateAccess = 'ReinstateAccess'
    ResendUsername = 'ResendUsername'
    DisableTwoFactorAuthentication = 'DisableTwoFactorAuthentication'


class ProvidersEmployersEmployerIdEmployeesSelfservicePatchRequestItem(BaseModel):
    action: Optional[Action16] = Field(
        None, description='The action to be taken for the given employee'
    )
    employeeId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdEmployeesSelfservicePatchRequest(
    RootModel[List[ProvidersEmployersEmployerIdEmployeesSelfservicePatchRequestItem]]
):
    root: List[ProvidersEmployersEmployerIdEmployeesSelfservicePatchRequestItem]


class ProvidersEmployersEmployerIdEmployeesSelfservicePatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1116]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEmployeesSelfservicePatchResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmployeesSelfservicePatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdEmployeesSelfservicePatchResponse3(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1116]] = None
    version: Optional[Version] = None


class Message1119(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class EmploymentContractType13(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Labor agreement'])


class NonPayrollAdministration14(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the administration', examples=['ABC accountants']
    )


class PayrollAdministration18(BaseModel):
    clientNumber: Optional[int] = Field(
        None,
        description='The client number is a unique number for administrations that are used for payrolling. This field has no value if the administration is not used for payrolling.',
        examples=[1234],
    )
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the administration', examples=['ABC accountants']
    )


class TypeOfParticipation13(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[str] = Field(None, examples=['n.v.t.'])


class EmploymentData7(BaseModel):
    calculateWorkingHours: Optional[bool] = Field(
        None,
        description='Automatically calculate working hours for the employment if the option automatically calculate hours is selected for a given period.',
        examples=[True],
    )
    cancellationNoticeDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the notice was given by either the employee or the employer.',
        examples=['2019-05-31'],
    )
    cancellationPeriodEmployee: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employee is required to give the employer when resigning. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodEmployer: Optional[conint(ge=1, le=1000)] = Field(
        None,
        description='The notice period an employer is required to give the employee when terminating the contract. The unit of time that applies to this field is described in the noticePeriodTimeUnit property.',
        examples=[1],
    )
    cancellationPeriodTimeUnit: Optional[CancellationPeriodTimeUnit] = Field(
        None,
        description='The unit of time used for the noticePeriodeEmployee and noticePeriodEmployer properties.',
    )
    commissionUntilDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment will end.',
        examples=['2019-01-01'],
    )
    deviatingCLATaxReturn: Optional[int] = Field(
        None,
        description='CLA (CAO) code in case of a deviating CLA for tax returns .',
        examples=[2],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests.',
        examples=['api@loket.nl'],
    )
    employeeProfileId: Optional[EmployeeProfileId] = Field(
        None,
        description='References to an employeeprofile that is specified in the payroll administration level\n\n`employeeProfileId` is a metadata field within the payroll administration context. Possible values can be managed by the user. ',
    )
    employmentContractType: Optional[EmploymentContractType13] = Field(
        None, description='The type of employment applicable for the employment.'
    )
    employmentDurationType: Optional[EmploymentDurationType] = Field(
        None, description='A selection of pre defined durations for the employment.'
    )
    essMutationSet: Optional[EssMutationSet] = Field(
        None,
        description='References to a specified set of payrollcomponents that are to accessible via ESS for employee mutations\n\n`essMutationSet` is a metadata field within the werkgever/provider context. Possible values can be managed by the user. ',
    )
    exemptionInsuranceObligation: Optional[ExemptionInsuranceObligation] = Field(
        None,
        description='Indicates whether an exemption applies for the insurance obligation. If NULL than there is no exemption, thus insurance obligation applies in that case (verzekingsplicht)',
    )
    firstDayNotification: Optional[bool] = Field(
        None,
        description='Indicates whether first-day notification (EersteDagsMelding) is applicable for the employment',
        examples=[False],
    )
    hasOnCallAppearanceObligation: Optional[bool] = Field(
        None,
        description='In the case of an on-call employment this field indicates whether the employment has an appearance obligation. This field can be `null` in cases where it is unknown whether the employment has an appearance obligation.',
        examples=[True],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company.',
        examples=['2012-05-01'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment.',
        examples=[12],
    )
    isAnonymousEmployee: Optional[bool] = Field(
        None, description='Indicates whether employee is anonymous ', examples=[True]
    )
    isDirectorAndMajorShareholder: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classiefied as a director and major shareholder (Dutch --> directeur-grootaandeelhouder or DGA). This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isFamilyOfOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    isGemoedsbezwaardEmployeeInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Werknemerverzekering', examples=[True]
    )
    isGemoedsbezwaardNationalInsurance: Optional[bool] = Field(
        None, description='Gemoedsbezwaard Volksverzekering', examples=[True]
    )
    isOnCallEmployment: Optional[bool] = Field(
        None,
        description='Indicates whether the employment is an on-call employment.',
        examples=[True],
    )
    isPreviousOwner: Optional[bool] = Field(
        None,
        description='Indicates whether the employment can be classified as a previous owner. This field can be `null` in cases where it is unknown whether the employment can be classified as a director and major shareholder.',
        examples=[False],
    )
    namePayslip: Optional[constr(max_length=34)] = Field(
        None,
        description='Name that is visible on payslips for the employment',
        examples=['Steve Jobs'],
    )
    nonPayrollAdministration: Optional[NonPayrollAdministration14] = Field(
        None,
        description='An administration that can not be used for payrolling. This field can not have a value at the same time as `payrollAdministration`\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    participation55plusRegulationUWV: Optional[bool] = Field(
        None,
        description='Indicates whether the 55 plus regulation (55 plus regeling) is applicable for the employment',
        examples=[False],
    )
    payrollAdministration: Optional[PayrollAdministration18] = Field(
        None,
        description='An administration used for payrolling. This field can not have a value at the same time as `nonPayrollAdministration`\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    periodPayGradeAdjustment: Optional[int] = Field(
        None,
        description='The values is used for two processes. First off, a message can be configured to notify the user(s) of a upcoming wage raise/negotiation based on the value of this field. Second, the value, in combination with `signalSalaryScaleAdjustment`, is used to signal a wage raises based on the `payScale` and ‘payGrade’.',
        examples=[2],
    )
    professionCode: Optional[int] = Field(
        None, description='A code field for a profession.', examples=[4]
    )
    sendMdvNotification: Optional[bool] = Field(
        None,
        description='Indicate if a Mdv (melding dienstverband) should be send.',
        examples=[True],
    )
    signalPayGradeAdjustment: Optional[bool] = Field(
        None,
        description='Indicates whether signaling regarding salary scale adjustments are enabled for the employment',
        examples=[False],
    )
    specialIncomeRatio: Optional[SpecialIncomeRatio] = Field(
        None, description='Indicates the special income ratio'
    )
    startCancellationNoticePeriod: Optional[date_aliased] = Field(
        None,
        description='The date on which the  term of notice period starts. If the agrement states that a notice periode always starts on the first day of the month and the notice was given on the 15th the start notice periode will be the first day of the next month.',
        examples=['2019-06-01'],
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts.',
        examples=['2019-01-01'],
    )
    startDateContractOfIndefiniteDuration: Optional[date_aliased] = Field(
        None,
        description='When did the value of `employmentDurationType` change for definite to indefinite. This value should be te samen as the `startDate` if the contract was indefinite from the start.',
        examples=['2018-05-08'],
    )
    typeOfEmployee: Optional[TypeOfEmployee] = Field(
        None,
        description='A selection of pre defined employee-types for the employment.',
    )
    typeOfParticipation: Optional[TypeOfParticipation13] = Field(
        None,
        description='The type of participation (aard van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    vacationCoupons: Optional[VacationCoupons] = Field(
        None,
        description='Indication for vacation coupons (vakantiebonnen). This is only applies to a limited set of CLA`s.',
    )
    valueOfParticipation: Optional[ValueOfParticipation] = Field(
        None,
        description='The value of participation (waarde van deelnemerschap) is only applicable in case the person related to this employment is eligible for pension',
    )
    writtenEmploymentContract: Optional[bool] = Field(
        None,
        description='Dit the employment and employer make a written contract?',
        examples=[True],
    )


class FiscalData7(BaseModel):
    annualSalary: Optional[confloat(ge=0.0, le=1000000000.0)] = Field(
        None, description='The fiscal annual salary', examples=[60000]
    )
    applyDayTables: Optional[bool] = Field(
        None,
        description='Indicates whether the value of the day table is used for the calculation of payroll tax',
        examples=[False],
    )
    applyDeviatingPayrollTaxPercentageOn: Optional[
        ApplyDeviatingPayrollTaxPercentageOn
    ] = Field(
        None,
        description='Indicates on what type of payroll calculation the deviating payroll tax percentage is applicable',
    )
    applyPayrollTaxDeduction: Optional[bool] = Field(
        None,
        description='Indicates whether payroll tax deduction is appliclable (loonheffingskorting)',
        examples=[False],
    )
    applyStudentDeduction: Optional[bool] = Field(
        None, description='Apply the "Scholierenregeling"', examples=[False]
    )
    deviatingCalculationRulePayrollTax: Optional[DeviatingCalculationRulePayrollTax] = (
        Field(
            None,
            description='Indicates if, while calculating payroll taxes and social security contributions, certain deviations are applicable. NL; Herleidingsregel',
        )
    )
    deviatingPayrollTaxPercentage: Optional[float] = Field(
        None,
        description='Indicates a deviating payroll tax percentage is to be applied',
        examples=[27.45],
    )
    deviatingPayrollTaxTableColour: Optional[DeviatingPayrollTaxTableColour] = Field(
        None,
        description='Indicates if there is a deviating payroll tax table is applicable (green vs white table)',
    )
    residentOf: Optional[ResidentOf] = Field(
        None,
        description='Related to the fiscal country of residence of the employee. This might affect the calculation of any applicable loonheffingskortingen.\n',
    )


class Department21(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Verkoop'])
    key: Optional[UUID] = Field(None, examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'])


class DistributionUnit24(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Sales'])
    key: Optional[UUID] = Field(None, examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'])


class Function17(BaseModel):
    description: Optional[str] = Field(None, examples=['Directeur'])
    group: Optional[str] = Field(None, examples=['internal'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class OrganizationalEntityData7(BaseModel):
    department: Optional[Department21] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[str] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[str] = Field(
        None,
        description='The deviating functiongroup description of the employment.',
        examples=['9A'],
    )
    distributionUnit: Optional[DistributionUnit24] = Field(
        None,
        description='Distribution unit, used in several reports and the "basic wage journal" functionality. Commonly used as a cost center. \n\n`distributionUnit` is a metadata field within the employer context. Possible values can be managed by the user. \n',
    )
    function: Optional[Function17] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    internalTelephoneExtensionNumber: Optional[str] = Field(
        None,
        description='The phone extention number for the employment.',
        examples=['0133031600'],
    )
    placeOfEmployment: Optional[str] = Field(
        None,
        description='The place of employment (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )


class OtherPayrollVariablesData7(BaseModel):
    deviatingPremiumGroup: Optional[DeviatingPremiumGroup9] = Field(
        None,
        description='Indicates what deviating premie sector fonds should apply for the employment. Do not specify if there is no deviation from the premium group for the payroll administration the employment is linked to.',
    )


class SocialSecurityData7(BaseModel):
    healthCareInsuranceActType: Optional[HealthCareInsuranceActType] = Field(
        None,
        description='Indicates what type of Health Care Insurance Act (Zvw) is applicable for this employment',
    )
    isInsuredForOccupationalDisabilityInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the Occupational Disability Insurance Act (WAO) be payed for this employment',
        examples=[False],
    )
    isInsuredForSicknessBenefitsAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Sickness Benefits Act (ZW) be payed for this employment',
        examples=[False],
    )
    isInsuredForUnemploymentInsuranceAct: Optional[bool] = Field(
        None,
        description='Will contributions for the  Unemployment Insurance Act (WW) be payed for this employment',
        examples=[False],
    )


class WageData7(BaseModel):
    applyPayGrade: Optional[bool] = Field(
        None,
        description='Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected. \n',
        examples=[True],
    )
    grossWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='The gross wage for the employee\n', examples=[23]
    )
    grossWageType: Optional[GrossWageType] = Field(
        None,
        description='Indicates whether the `grossWage` is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.\n',
    )
    netWage: Optional[confloat(ge=1.0, le=1000000.0)] = Field(
        None, description='Net wage for the employment\n'
    )
    netWageType: Optional[NetWageType] = Field(
        None,
        description='Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.\n',
    )
    payGrade: Optional[PayGrade] = Field(
        None,
        description='The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. \n\n`payGrade` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )
    payScale: Optional[PayScale] = Field(
        None,
        description='A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee"s level, rank or status within the employer"s organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.\n\n`payScale` is a metadata field within the payroll administration/payScale context. Possible values can be managed by the user.\n',
    )


class CalculateUsingWorkPattern15(BaseModel):
    daysDailyRate: Optional[bool] = Field(
        None,
        description='Indicates whether the number of days of dailyrate should be calculated based on the workpattern. The number of days are normally calculated by the working hours.       ',
        examples=[False],
    )
    deviatingDaysAndHours: Optional[bool] = Field(
        None,
        description='Indication whether  the deviating hours per week and deviating SV-days per period are to be automatically calculated based on the workpattern. Please note (!) that any values in the deviatingHoursPerWeek and deviatingSvDaysPerPeriod fields (of this workingHours record) will be overwritten based on this calculation if true (and endDate=NULL)!',
        examples=[False],
    )
    hoursBrokenPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern in broken periods. These are periods of in or out of service.',
        examples=[False],
    )
    hoursPeriod: Optional[bool] = Field(
        None,
        description='Indicates whether the hours for the payrolling should be calculated based on the workpattern for regular periods.         ',
        examples=[False],
    )
    leaveHours: Optional[bool] = Field(
        None,
        description='Indicates whether then leave balances (verlof) are to be calculated based on the workpattern.',
        examples=[True],
    )


class FlexibleHoursContract15(BaseModel):
    key: Optional[int] = Field(None, examples=[0])
    value: Optional[constr(max_length=50)] = Field(None, examples=['n.v.t.'])


class Shift25(BaseModel):
    bonusPercentage: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The bonus percentage used in wage calculations for the hours made in this shift. ',
        examples=[12],
    )
    fullTimeHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='The full time hours for an employment that is linked to this shift.',
        examples=[40],
    )
    shiftNumber: Optional[int] = Field(
        None, description='The number for the shift. ', examples=[1]
    )


class WorkPattern15(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class WorkingHoursData7(BaseModel):
    averageParttimeFactor: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='This field is used to register the deviating value of the parttimefactor. The parttimefactor is normally calculated by workinghours dividing by shifthours multplied by 100',
        examples=[37.5],
    )
    calculateUsingWorkPattern: Optional[CalculateUsingWorkPattern15] = Field(
        None,
        description='Indications in this objects determine whether specific values should be calculated based on the bi-weekly workPattern (specified in the `workPattern` object).',
    )
    contractCode: Optional[ContractCode] = Field(
        None,
        description='This field is specialy made for convenience stores. The field is the type of contract.\n\n`contractCode` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingHoursPerWeek: Optional[confloat(ge=0.01, le=99.0)] = Field(
        None,
        description='Fulltime hours are normally based as defined by the shift, this optional field is used to register a deviating value. The value can be less or more then the fulltime hours a week.',
        examples=[32],
    )
    deviatingSvDaysPerPeriod: Optional[confloat(ge=1.0, le=23.0)] = Field(
        None,
        description='Sv (social insurance) days are normally calculated by hours per shift, this optional field is used to register a deviating value. ',
        examples=[32],
    )
    flexibleHoursContract: Optional[FlexibleHoursContract15] = Field(
        None,
        description='The field indicates the type of flexible contract. If not applicable, please set to NULL.',
    )
    regularWorkPattern: Optional[bool] = Field(
        None,
        description='When the employee works the same amount of hours per day every week, then the workpattern is regular.  ',
        examples=[True],
    )
    shift: Optional[Shift25] = Field(
        None,
        description='The shift determines the full-time hours and bonus percentage.\n\n`shift` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    workPattern: Optional[WorkPattern15] = Field(
        None,
        description='The applicable work pattern for a period of 2 weeks can be stored in this object. Each field contains the number of work hours for that day in the 2-week period. <br /> Please note that the workPattern should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )


class FieldEmbeddedItem167(BaseModel):
    employmentData: Optional[EmploymentData7] = None
    fiscalData: Optional[FiscalData7] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    organizationalEntityData: Optional[OrganizationalEntityData7] = None
    otherPayrollVariablesData: Optional[OtherPayrollVariablesData7] = None
    socialSecurityData: Optional[SocialSecurityData7] = None
    templateName: Optional[constr(min_length=1, max_length=255)] = Field(
        None, description='Name of the templat', examples=['Sjabloon voor Oproepkracht']
    )
    wageData: Optional[WageData7] = None
    workingHoursData: Optional[WorkingHoursData7] = None


class ProvidersEmployersEmployerIdEmploymenttemplatesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1119]] = None
    field_embedded: Optional[List[FieldEmbeddedItem167]] = Field(
        None, alias='_embedded'
    )


class Message1120(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdEmploymenttemplatesGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1120]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdEmploymenttemplatesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdEmploymenttemplatesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1121(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem168(BaseModel):
    externalId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=28)] = Field(
        None,
        description='The user-friendly name of the external tenant',
        examples=['Loket tenant'],
    )


class ProvidersEmployersEmployerIdExternaltenantsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1121]] = None
    field_embedded: Optional[List[FieldEmbeddedItem168]] = Field(
        None, alias='_embedded'
    )


class Message1122(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdExternaltenantsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1122]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdExternaltenantsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdExternaltenantsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1123(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem169(BaseModel):
    description: Optional[constr(max_length=50)] = Field(None, examples=['Directeur'])
    group: Optional[constr(max_length=5)] = Field(None, examples=['Var'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID).\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdFunctionsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1123]] = None
    field_embedded: Optional[List[FieldEmbeddedItem169]] = Field(
        None, alias='_embedded'
    )


class Message1124(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdFunctionsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1124]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdFunctionsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdFunctionsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdFunctionsPostRequest(BaseModel):
    description: Optional[constr(max_length=50)] = Field(None, examples=['Directeur'])
    group: Optional[constr(max_length=5)] = Field(None, examples=['Var'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID).\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message1125(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content218(BaseModel):
    description: Optional[constr(max_length=50)] = Field(None, examples=['Directeur'])
    group: Optional[constr(max_length=5)] = Field(None, examples=['Var'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID).\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdFunctionsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1125]] = None
    content: Optional[Content218] = None


class Message1126(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdFunctionsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1126]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdFunctionsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdFunctionsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdLeavePostRequestItem(BaseModel):
    comments: Optional[str] = Field(
        None,
        description='Any comments on the leave.\n',
        examples=['This leave is added.'],
    )
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    endDate: Optional[date_aliased] = Field(
        None, description='The end date for the leave.\n', examples=['2022-10-22']
    )
    isAccrual: Optional[bool] = Field(
        None,
        description='Indicates whether the leave should be added(true) or subtracted(false).\n',
        examples=[True],
    )
    leaveType: Optional[int] = Field(
        None, description='The id of the leavetype.\n', examples=[1]
    )
    numberOfUnits: Optional[confloat(le=999.99)] = Field(
        None, description='The amount of leave.\n', examples=[4.5]
    )
    startDate: Optional[date_aliased] = Field(
        None, description='The start date for the leave.\n', examples=['2022-10-21']
    )


class ProvidersEmployersEmployerIdLeavePostRequest(
    RootModel[List[ProvidersEmployersEmployerIdLeavePostRequestItem]]
):
    root: List[ProvidersEmployersEmployerIdLeavePostRequestItem]


class ProvidersEmployersEmployerIdLeavePostResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1126]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdLeavePostResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLeavePostResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1128(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem170(BaseModel):
    additionalInformation: Optional[str] = Field(
        None,
        description='Provides additional information on the calculation.',
        examples=['Additional information on the calculation.'],
    )
    employmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier (a GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    methodOfCalculation: Optional[str] = Field(
        None,
        description='Indicates which method was used to calculate the proposed leave hours.',
        examples=['Ploeguren'],
    )
    proposedLeaveHours: Optional[float] = Field(
        None, description='The proposed number of leave hours', examples=[8]
    )


class ProvidersEmployersEmployerIdLeaveProposedleavehoursGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1128]] = None
    field_embedded: Optional[List[FieldEmbeddedItem170]] = Field(
        None, alias='_embedded'
    )


class Message1129(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdLeaveProposedleavehoursGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1129]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdLeaveProposedleavehoursGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLeaveProposedleavehoursGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1130(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ReferenceDate13(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the first reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the first reference date '
    )


class ReferenceDate23(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the second reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the second reference date '
    )


class AdditionalLeave3(BaseModel):
    allocationType: Optional[AllocationType] = Field(
        None,
        description='Indicates how additional leave is to be assigned to the employments (linked to this leave policy).',
    )
    referenceDate1: Optional[ReferenceDate13] = Field(
        None,
        description='If `referenceDate2` has a value only the last 6 months of the year are allowed as values',
    )
    referenceDate2: Optional[ReferenceDate23] = Field(
        None, description='Only use if applicable'
    )


class LeaveEntitlement21(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.',
        examples=[40],
    )
    statutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The statutory leave (wetelijk verlof) linked employments are entitled to for a full time contract.',
        examples=[160],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.',
        examples=[40],
    )


class LeavePattern3(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class LeaveRequest3(BaseModel):
    applyLeaveSchedule: Optional[bool] = Field(
        None,
        description='Indicates whether the leave schedule can be enterd and is so it is used when calculating the sugested leave hours for a leave request',
        examples=[False],
    )
    leavePattern: Optional[LeavePattern3] = Field(
        None,
        description='The applicable leave pattern for a period of 2 weeks can be stored in this object. Each field contains the number of leave(work) hours for that day in the 2-week period. <br /> Please note that the `leavePattern` should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )
    useHolidaysInCalculation: Optional[bool] = Field(
        None,
        description='Indicates whether the calculating for sugested leave hours for a leave request takes into account holidays. Is set to true no leave hours are calculated for "The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company."\n\neg. When requesting leave for the 24th and 25th of december (25th being a national holiday) the calculation (8 hours a day) will return 8 when `useHolidaysInCalculation` is true and 16 when `useHolidaysInCalculation` is false',
        examples=[False],
    )


class FieldEmbeddedItem171(BaseModel):
    accrualType: Optional[AccrualType] = Field(
        None, description='Indicates how leave is accrued (yearly, monthly or hourly)  '
    )
    additionalLeave: Optional[AdditionalLeave3] = None
    dayOfTheMonthToPerformAutomaticLeaveCalculationOn: Optional[conint(ge=1, le=31)] = (
        Field(
            None,
            description='They day of the month on which the automatic accrual of (yearly or monthly) leave is performed. The yearly calculation is repeated every month to encompase any changes made that have affect on the past.\nIf for example 31 is chosen and a specific month does not have that day the logic will pick the first available date of said month.          ',
            examples=[12],
        )
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement21] = None
    leaveRequest: Optional[LeaveRequest3] = None
    leaveUnitType: Optional[LeaveUnitType8] = Field(
        None,
        description='Indicates what the unit type (hours or days) is. Employments linked to this leave policy use this leaveUnitType for their leave.',
    )
    name: Optional[constr(min_length=1, max_length=50)] = Field(
        None, description='The name of the leave policy', examples=['Normal leave']
    )
    payoutLeaveImmediately: Optional[bool] = Field(
        None,
        description='If leave `accrualType` is set to based on hours worked (uren) then this field allows for the leave hours to be paid out directly instead of being accrued.',
        examples=[False],
    )
    roundTo: Optional[RoundTo] = Field(
        None,
        description='Indicates to how many digits after the decimal point to round the numbers',
    )
    roundingMethod: Optional[RoundingMethod] = Field(
        None, description='Indicates how to round the numbers '
    )


class ProvidersEmployersEmployerIdLeavePoliciesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1130]] = None
    field_embedded: Optional[List[FieldEmbeddedItem171]] = Field(
        None, alias='_embedded'
    )


class Message1131(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdLeavePoliciesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1131]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdLeavePoliciesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLeavePoliciesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdLeavePoliciesPatchRequest(BaseModel):
    name: Optional[constr(min_length=1, max_length=50)] = Field(
        None,
        description='The name of the leave policy',
        examples=['Verlofregeling Metaal CAO'],
    )
    sourceLeavePolicyId: Optional[UUID] = Field(
        None,
        description='The unique identifier of the Leave policy at providerlevel which should be copied.',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Message1132(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content219(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdLeavePoliciesPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1132]] = None
    content: Optional[Content219] = None


class Message1133(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdLeavePoliciesPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1133]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdLeavePoliciesPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLeavePoliciesPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ReferenceDate14(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the first reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the first reference date '
    )


class ReferenceDate24(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the second reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the second reference date '
    )


class AdditionalLeave4(BaseModel):
    allocationType: Optional[AllocationType] = Field(
        None,
        description='Indicates how additional leave is to be assigned to the employments (linked to this leave policy).',
    )
    referenceDate1: Optional[ReferenceDate14] = Field(
        None,
        description='If `referenceDate2` has a value only the last 6 months of the year are allowed as values',
    )
    referenceDate2: Optional[ReferenceDate24] = Field(
        None, description='Only use if applicable'
    )


class LeavePattern4(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class LeaveRequest4(BaseModel):
    applyLeaveSchedule: Optional[bool] = Field(
        None,
        description='Indicates whether the leave schedule can be enterd and is so it is used when calculating the sugested leave hours for a leave request',
        examples=[False],
    )
    leavePattern: Optional[LeavePattern4] = Field(
        None,
        description='The applicable leave pattern for a period of 2 weeks can be stored in this object. Each field contains the number of leave(work) hours for that day in the 2-week period. <br /> Please note that the `leavePattern` should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )
    useHolidaysInCalculation: Optional[bool] = Field(
        None,
        description='Indicates whether the calculating for sugested leave hours for a leave request takes into account holidays. Is set to true no leave hours are calculated for "The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company."\n\neg. When requesting leave for the 24th and 25th of december (25th being a national holiday) the calculation (8 hours a day) will return 8 when `useHolidaysInCalculation` is true and 16 when `useHolidaysInCalculation` is false',
        examples=[False],
    )


class ProvidersEmployersEmployerIdLeavePoliciesPostRequest(BaseModel):
    accrualType: Optional[AccrualType] = Field(
        None, description='Indicates how leave is accrued (yearly, monthly or hourly)  '
    )
    additionalLeave: Optional[AdditionalLeave4] = None
    dayOfTheMonthToPerformAutomaticLeaveCalculationOn: Optional[conint(ge=1, le=31)] = (
        Field(
            None,
            description='They day of the month on which the automatic accrual of (yearly or monthly) leave is performed. The yearly calculation is repeated every month to encompase any changes made that have affect on the past.\nIf for example 31 is chosen and a specific month does not have that day the logic will pick the first available date of said month.          ',
            examples=[12],
        )
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement21] = None
    leaveRequest: Optional[LeaveRequest4] = None
    leaveUnitType: Optional[LeaveUnitType8] = Field(
        None,
        description='Indicates what the unit type (hours or days) is. Employments linked to this leave policy use this leaveUnitType for their leave.',
    )
    name: Optional[constr(min_length=1, max_length=50)] = Field(
        None, description='The name of the leave policy', examples=['Normal leave']
    )
    payoutLeaveImmediately: Optional[bool] = Field(
        None,
        description='If leave `accrualType` is set to based on hours worked (uren) then this field allows for the leave hours to be paid out directly instead of being accrued.',
        examples=[False],
    )
    roundTo: Optional[RoundTo] = Field(
        None,
        description='Indicates to how many digits after the decimal point to round the numbers',
    )
    roundingMethod: Optional[RoundingMethod] = Field(
        None, description='Indicates how to round the numbers '
    )


class Message1134(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ReferenceDate15(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the first reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the first reference date '
    )


class ReferenceDate25(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the second reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the second reference date '
    )


class AdditionalLeave5(BaseModel):
    allocationType: Optional[AllocationType] = Field(
        None,
        description='Indicates how additional leave is to be assigned to the employments (linked to this leave policy).',
    )
    referenceDate1: Optional[ReferenceDate15] = Field(
        None,
        description='If `referenceDate2` has a value only the last 6 months of the year are allowed as values',
    )
    referenceDate2: Optional[ReferenceDate25] = Field(
        None, description='Only use if applicable'
    )


class LeavePattern5(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class LeaveRequest5(BaseModel):
    applyLeaveSchedule: Optional[bool] = Field(
        None,
        description='Indicates whether the leave schedule can be enterd and is so it is used when calculating the sugested leave hours for a leave request',
        examples=[False],
    )
    leavePattern: Optional[LeavePattern5] = Field(
        None,
        description='The applicable leave pattern for a period of 2 weeks can be stored in this object. Each field contains the number of leave(work) hours for that day in the 2-week period. <br /> Please note that the `leavePattern` should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )
    useHolidaysInCalculation: Optional[bool] = Field(
        None,
        description='Indicates whether the calculating for sugested leave hours for a leave request takes into account holidays. Is set to true no leave hours are calculated for "The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company."\n\neg. When requesting leave for the 24th and 25th of december (25th being a national holiday) the calculation (8 hours a day) will return 8 when `useHolidaysInCalculation` is true and 16 when `useHolidaysInCalculation` is false',
        examples=[False],
    )


class Content220(BaseModel):
    accrualType: Optional[AccrualType] = Field(
        None, description='Indicates how leave is accrued (yearly, monthly or hourly)  '
    )
    additionalLeave: Optional[AdditionalLeave5] = None
    dayOfTheMonthToPerformAutomaticLeaveCalculationOn: Optional[conint(ge=1, le=31)] = (
        Field(
            None,
            description='They day of the month on which the automatic accrual of (yearly or monthly) leave is performed. The yearly calculation is repeated every month to encompase any changes made that have affect on the past.\nIf for example 31 is chosen and a specific month does not have that day the logic will pick the first available date of said month.          ',
            examples=[12],
        )
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement21] = None
    leaveRequest: Optional[LeaveRequest5] = None
    leaveUnitType: Optional[LeaveUnitType8] = Field(
        None,
        description='Indicates what the unit type (hours or days) is. Employments linked to this leave policy use this leaveUnitType for their leave.',
    )
    name: Optional[constr(min_length=1, max_length=50)] = Field(
        None, description='The name of the leave policy', examples=['Normal leave']
    )
    payoutLeaveImmediately: Optional[bool] = Field(
        None,
        description='If leave `accrualType` is set to based on hours worked (uren) then this field allows for the leave hours to be paid out directly instead of being accrued.',
        examples=[False],
    )
    roundTo: Optional[RoundTo] = Field(
        None,
        description='Indicates to how many digits after the decimal point to round the numbers',
    )
    roundingMethod: Optional[RoundingMethod] = Field(
        None, description='Indicates how to round the numbers '
    )


class ProvidersEmployersEmployerIdLeavePoliciesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1134]] = None
    content: Optional[Content220] = None


class Message1135(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdLeavePoliciesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1135]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdLeavePoliciesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLeavePoliciesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1136(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Employee18(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within a employer.',
        examples=[156],
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None,
        description='The last name of the partner of the employee',
        examples=['Wiel'],
    )
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the employee', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix of the partner of the employee',
        examples=['van de'],
    )


class LeaveType19(BaseModel):
    balanceExceedsYear: Optional[bool] = Field(
        None,
        description='Indicates whether the balance at the end of the year for this leave type carries over to the next year.\n',
        examples=[True],
    )
    key: Optional[int] = Field(
        None, description='The key for the leave type.\n', examples=[1]
    )
    value: Optional[str] = Field(
        None,
        description='The description for the leave type. Note that leave types can be overridden at the employer level. In these cases the description at the employer level takes precedence over the default description of the leave type.\n',
        examples=['Verlof (bovenwettelijk)'],
    )


class LeaveBalanceItem(BaseModel):
    accrual: Optional[float] = Field(
        None,
        description='The amount of leave units accrued for the leave type in the year\n',
        examples=[30],
    )
    balance: Optional[float] = Field(
        None,
        description='The remaining leave balance for the year and leave type. The balance takes into account the leave usage in the future.\n',
        examples=[40],
    )
    balancePreviousYear: Optional[float] = Field(
        None,
        description='The remaining leave balance from the previous year for the leave type\n',
        examples=[20],
    )
    expires: Optional[float] = Field(
        None,
        description='<ul>\n  <li>This field is only relevant for the following leave types:</li>\n  <li><strong>Wettelijk verlof:</strong> Accrued statutory leave from previous years that expires on July 1 of the selected year.</li>\n  <li><strong>Bovenwettelijk verlof:</strong> Accrued extra-legal leave from 5 years ago and earlier, which expires on Jan 1 of the selected year + 1.</li>\n  <li><strong>Verlof:</strong> The sum of the two leave types above.</li>\n</ul>\n',
        examples=[15],
    )
    leaveType: Optional[LeaveType19] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    usageAfterReferenceDate: Optional[confloat(ge=0.0)] = Field(
        None,
        description='The amount of leave units used for the leave type in the year after `referenceDate`\n',
        examples=[2],
    )
    usageThroughReferenceDate: Optional[float] = Field(
        None,
        description='The amount of leave units used for the leave type starting from the beginning of the year up to and `referenceDate` \n',
        examples=[8],
    )
    usageTotal: Optional[float] = Field(
        None,
        description='The total amount of leave units used for the leave type in the year.\n',
        examples=[10],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year to which the balance of the leave type applies.\n',
        examples=[2019],
    )


class NonPayrollAdministration15(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None,
        description='Name of the non payroll administration',
        examples=['HR only employees'],
    )


class Department22(BaseModel):
    code: Optional[int] = Field(None, examples=[2])
    description: Optional[str] = Field(None, examples=['Verkoop'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class Function18(BaseModel):
    description: Optional[constr(max_length=50)] = Field(None, examples=['Directeur'])
    group: Optional[constr(max_length=5)] = Field(None, examples=['internal'])
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class OrganizationalEntity2(BaseModel):
    department: Optional[Department22] = Field(
        None,
        description='The department of the employment.\n\n`department` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    deviatingFunctionDescription: Optional[constr(max_length=50)] = Field(
        None,
        description='The deviating function description of the employment. This description deviates from the value of the `function` field.',
        examples=['Directeur'],
    )
    deviatingFunctionGroup: Optional[constr(max_length=5)] = Field(
        None,
        description='The deviating function group description of the employment. Only applies when a deviating function description is defined.',
        examples=['9A'],
    )
    endDate: Optional[date_aliased] = Field(
        None,
        description='The end date of the entity. The date is up to and including.',
        examples=['2018-10-23'],
    )
    function: Optional[Function18] = Field(
        None,
        description='The function of the employment.\n\n`function` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    placeOfEmployment: Optional[constr(max_length=24)] = Field(
        None,
        description='The standard working location (standplaats) for the employment.',
        examples=['Amsterdam office'],
    )
    standardFunction: Optional[StandardFunction] = Field(
        None,
        description='The standard (cao)function of the employment.\n\n`standardFunction` is a metadata field within the payroll administration context. Possible values can be managed by the user.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The start date of the entity.\n\nA (linked chain)[./#section/Data/Date-chains] is maintained within this resource.',
        examples=['2018-01-01'],
    )


class PayrollAdministration19(BaseModel):
    clientNumber: Optional[int] = Field(
        None,
        description='The client number is a unique number for administrations that are used for payrolling. This field has no value if the administration is not used for payrolling.',
        examples=[1234],
    )
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None,
        description='Name of the payroll administration',
        examples=['ABC accountants'],
    )


class FieldEmbeddedItem172(BaseModel):
    employee: Optional[Employee18] = None
    endDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the employment ends. NL: DatumUitDienst',
        examples=['2018-10-23'],
    )
    historicalStartDate: Optional[date_aliased] = Field(
        None,
        description='The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company. NL: HistorischeDatumInDienst',
        examples=['2012-05-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    incomeRelationshipNumber: Optional[conint(le=9999)] = Field(
        None,
        description='The income relationship number that is required in the tax return. Together with the citizen service number (burgerservicenummer, BSN) and wage tax number, the income relationship number uniquely identifies an employment. NL: NummerInkomstenVerhouding',
        examples=[12],
    )
    leaveBalance: Optional[List[LeaveBalanceItem]] = None
    nonPayrollAdministration: Optional[NonPayrollAdministration15] = Field(
        None,
        description='Id of the non-payroll administration. This field cannot simultaneously have a value with payrollAdministration (only one can have a value at a time)\n\n`nonPayrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    organizationalEntity: Optional[OrganizationalEntity2] = None
    payrollAdministration: Optional[PayrollAdministration19] = Field(
        None,
        description='Id of the payroll administration. This field cannot simultaneously have a value with nonPayrollAdministration (only one can have a value at a time)\n\n`payrollAdministration` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The date on which this employment starts. NL: DatumInDienst',
        examples=['2018-01-01'],
    )


class ProvidersEmployersEmployerIdLeavebalancesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1136]] = None
    field_embedded: Optional[List[FieldEmbeddedItem172]] = Field(
        None, alias='_embedded'
    )


class Message1137(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdLeavebalancesGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1137]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdLeavebalancesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLeavebalancesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class LeaveType20(RootModel[List[int]]):
    root: List[int]


class GroupBy(Enum):
    Department = 'Department'
    Function = 'Function'


class Message1138(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Group1(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The description of the groupBy, either the department or function\n',
        examples=['Verkoop Binnendienst'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class LeaveType21(BaseModel):
    balanceExceedsYear: Optional[bool] = Field(
        None,
        description='Indicates whether the balance at the end of the year for this leave type carries over to the next year.\n',
        examples=[True],
    )
    key: Optional[int] = Field(
        None, description='The key for the leave type.\n', examples=[1]
    )
    value: Optional[str] = Field(
        None,
        description='The description for the leave type. Note that leave types can be overridden at the employer level. In these cases the description at the employer level takes precedence over the default description of the leave type.\n',
        examples=['Verlof (bovenwettelijk)'],
    )


class Group(BaseModel):
    accrual: Optional[float] = Field(
        None,
        description='The amount of leave units accrued for the leave type in the year\n',
        examples=[30],
    )
    balance: Optional[float] = Field(
        None,
        description='The remaining leave balance for the year and leave type. The balance takes into account the leave usage in the future.\n',
        examples=[40],
    )
    balancePreviousYear: Optional[float] = Field(
        None,
        description='The remaining leave balance from the previous year for the leave type\n',
        examples=[20],
    )
    group: Optional[Group1] = None
    leaveType: Optional[LeaveType21] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    usageAfterReferenceDate: Optional[confloat(ge=0.0)] = Field(
        None,
        description='The amount of leave units used for the leave type in the year after `referenceDate`\n',
        examples=[2],
    )
    usageThroughReferenceDate: Optional[float] = Field(
        None,
        description='The amount of leave units used for the leave type starting from the beginning of the year up to and `referenceDate` \n',
        examples=[8],
    )
    usageTotal: Optional[float] = Field(
        None,
        description='The total amount of leave units used for the leave type in the year.\n',
        examples=[10],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year to which the balance of the leave type applies.\n',
        examples=[2019],
    )


class Total(BaseModel):
    accrual: Optional[float] = Field(
        None,
        description='The amount of leave units accrued for the leave type in the year\n',
        examples=[30],
    )
    balance: Optional[float] = Field(
        None,
        description='The remaining leave balance for the year and leave type. The balance takes into account the leave usage in the future.\n',
        examples=[40],
    )
    balancePreviousYear: Optional[float] = Field(
        None,
        description='The remaining leave balance from the previous year for the leave type\n',
        examples=[20],
    )
    leaveType: Optional[LeaveType21] = Field(
        None,
        description='The type of leave requested by the employee\n`leaveType` is a metadata field within the employer context. Possible values can be managed by the user.',
    )
    usageAfterReferenceDate: Optional[confloat(ge=0.0)] = Field(
        None,
        description='The amount of leave units used for the leave type in the year after `referenceDate`\n',
        examples=[2],
    )
    usageThroughReferenceDate: Optional[float] = Field(
        None,
        description='The amount of leave units used for the leave type starting from the beginning of the year up to and `referenceDate` \n',
        examples=[8],
    )
    usageTotal: Optional[float] = Field(
        None,
        description='The total amount of leave units used for the leave type in the year.\n',
        examples=[10],
    )
    year: Optional[conint(ge=2000, le=9999)] = Field(
        None,
        description='The year to which the balance of the leave type applies.\n',
        examples=[2019],
    )


class Content221(BaseModel):
    groups: Optional[List[Group]] = Field(
        None,
        description='Returns the total sum of a leave type for all employments in the given group by',
    )
    totals: Optional[List[Total]] = Field(
        None,
        description='Returns the total sum of a leave type for all employments          ',
    )


class ProvidersEmployersEmployerIdLeavebalancesGroupedGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1138]] = None
    content: Optional[Content221] = None


class Message1139(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdLeavebalancesGroupedGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1139]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdLeavebalancesGroupedGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLeavebalancesGroupedGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class LeaveType23(RootModel[List[int]]):
    root: List[int]


class Message1140(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Deviations20(BaseModel):
    balanceExceedsYear: Optional[bool] = Field(
        None,
        description='Indicates whether the balance at the end of the year for this leave type carries over to the next year.\n',
        examples=[True],
    )
    employeeCanRequestIncrease: Optional[bool] = Field(
        None,
        description='Indicates whether an employee can request an increase of leave via a leave request.\n',
        examples=[False],
    )
    enabled: Optional[bool] = Field(
        None,
        description='Indicates whether the leave type can be used to book leave requests or leave.  This influences only new records. Old records using this leave type will remain and show the corresponding information.\n',
        examples=[True],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The description for the leave type.\n', examples=['Verlof']
    )


class LeaveType24(BaseModel):
    balanceExceedsYear: Optional[bool] = Field(
        None,
        description='Indicates whether the balance at the end of the year for this leave type carries over to the next year.\n',
        examples=[True],
    )
    employeeCanRequestIncrease: Optional[bool] = Field(
        None,
        description='Indicates whether an employee can request an increase of leave via a leave request.\n',
        examples=[True],
    )
    enabled: Optional[bool] = Field(
        None,
        description='Indicates whether the leave type can be used in leave requests or leave records. \nThis influences only new records. Old records using this leave type will remain and show the corresponding information.\n',
        examples=[True],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the leave type. This value is used in the `leaveType` metadata object to refer to this configuration (and the posible deviations)\n',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the leave type.\n',
        examples=['Verlof (bovenwettelijk)'],
    )


class FieldEmbeddedItem173(BaseModel):
    deviations: Optional[Deviations20] = Field(
        None,
        description='Optional deviations to the leave type.\n\nIf set these deviations will overwrite the default values.\n\nNote: Two leaveTypes are excluded from deviations "verlof" and "Verlof bovenwettelijk"',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveType: Optional[LeaveType24] = Field(
        None,
        description='The default configuration of the leave type\n\nIf the deviations object is set those values overwrite all the default values.',
    )


class ProvidersEmployersEmployerIdLeavetypesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1140]] = None
    field_embedded: Optional[List[FieldEmbeddedItem173]] = Field(
        None, alias='_embedded'
    )


class Message1141(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdLeavetypesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1141]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdLeavetypesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLeavetypesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1142(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content222(BaseModel):
    deviations: Optional[Deviations20] = Field(
        None,
        description='Optional deviations to the leave type.\n\nIf set these deviations will overwrite the default values.\n\nNote: Two leaveTypes are excluded from deviations "verlof" and "Verlof bovenwettelijk"',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveType: Optional[LeaveType24] = Field(
        None,
        description='The default configuration of the leave type\n\nIf the deviations object is set those values overwrite all the default values.',
    )


class ProvidersEmployersEmployerIdLeavetypesLeaveTypeIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1142]] = None
    content: Optional[Content222] = None


class Message1143(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdLeavetypesLeaveTypeIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1143]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdLeavetypesLeaveTypeIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLeavetypesLeaveTypeIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdLeavetypesLeaveTypeIdPutRequest(BaseModel):
    deviations: Optional[Deviations20] = Field(
        None,
        description='Optional deviations to the leave type.\n\nIf set these deviations will overwrite the default values.\n\nNote: Two leaveTypes are excluded from deviations "verlof" and "Verlof bovenwettelijk"',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveType: Optional[LeaveType24] = Field(
        None,
        description='The default configuration of the leave type\n\nIf the deviations object is set those values overwrite all the default values.',
    )


class Message1144(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content223(BaseModel):
    deviations: Optional[Deviations20] = Field(
        None,
        description='Optional deviations to the leave type.\n\nIf set these deviations will overwrite the default values.\n\nNote: Two leaveTypes are excluded from deviations "verlof" and "Verlof bovenwettelijk"',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveType: Optional[LeaveType24] = Field(
        None,
        description='The default configuration of the leave type\n\nIf the deviations object is set those values overwrite all the default values.',
    )


class ProvidersEmployersEmployerIdLeavetypesLeaveTypeIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1144]] = None
    content: Optional[Content223] = None


class Message1145(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdLeavetypesLeaveTypeIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1145]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdLeavetypesLeaveTypeIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLeavetypesLeaveTypeIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdLeavetypesLeaveTypeIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1145]] = None
    version: Optional[Version] = None


class ProvidersEmployersEmployerIdLogoDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1145]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdLogoDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1145]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdLogoDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLogoDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdLogoGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLogoGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdLogoPostRequest(BaseModel):
    data: Optional[str] = Field(
        None, description='base64 encoded document file.', examples=['YQ==']
    )
    mimeType: Optional[str] = Field(
        None, description='The mimetype of the data.', examples=['image/jpeg']
    )


class Message1149(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployerIdLogoPostResponse(BaseModel):
    messages: Optional[List[Message1149]] = None


class Message1150(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdLogoPostResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1150]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdLogoPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLogoPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdLogoVersionGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdLogoVersionGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1151(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem174(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['Personeelsregistratie']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdModulesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1151]] = None
    field_embedded: Optional[List[FieldEmbeddedItem174]] = Field(
        None, alias='_embedded'
    )


class Message1152(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdModulesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1152]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdModulesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdModulesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1153(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Deviations24(BaseModel):
    enabled: Optional[bool] = Field(
        None,
        description='Indicates whether the national holiday is used to calculate leave hours for a leave request.  This influences only new records. Old records using this national holiday will remain and show the corresponding information.\n',
        examples=[True],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the national holiday.\n',
        examples=['Boxing day'],
    )


class NationalHoliday(BaseModel):
    dateInCurrentYear: Optional[date_aliased] = Field(
        None,
        description='The date for the national holiday in the current year.\n',
        examples=['2021-12-26'],
    )
    enabled: Optional[bool] = Field(
        None,
        description='Indicates whether the national holiday is used to calculate leave hours for a leave request\n',
        examples=[True],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the national holiday. This value is used in the `nationalHoliday` metadata object to refer to this configuration (and the posible deviations)\n',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None,
        description='The description for the national holiday.\n',
        examples=['2e kerstdag'],
    )


class FieldEmbeddedItem175(BaseModel):
    deviations: Optional[Deviations24] = Field(
        None,
        description='Optional deviations to the national holiday.\nIf set these deviations will overwrite the default values.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nationalHoliday: Optional[NationalHoliday] = Field(
        None,
        description='The default configuration of the national holiday.\n\nIf the deviations object is set those values overwrite all the default values.',
    )


class ProvidersEmployersEmployerIdNationalholidaysGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1153]] = None
    field_embedded: Optional[List[FieldEmbeddedItem175]] = Field(
        None, alias='_embedded'
    )


class Message1154(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdNationalholidaysGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1154]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdNationalholidaysGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdNationalholidaysGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1155(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content224(BaseModel):
    deviations: Optional[Deviations24] = Field(
        None,
        description='Optional deviations to the national holiday.\nIf set these deviations will overwrite the default values.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nationalHoliday: Optional[NationalHoliday] = Field(
        None,
        description='The default configuration of the national holiday.\n\nIf the deviations object is set those values overwrite all the default values.',
    )


class ProvidersEmployersEmployerIdNationalholidaysNationalHolidayIdGetResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message1155]] = None
    content: Optional[Content224] = None


class Message1156(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdNationalholidaysNationalHolidayIdGetResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message1156]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdNationalholidaysNationalHolidayIdGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdNationalholidaysNationalHolidayIdGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdNationalholidaysNationalHolidayIdPutRequest(
    BaseModel
):
    deviations: Optional[Deviations24] = Field(
        None,
        description='Optional deviations to the national holiday.\nIf set these deviations will overwrite the default values.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nationalHoliday: Optional[NationalHoliday] = Field(
        None,
        description='The default configuration of the national holiday.\n\nIf the deviations object is set those values overwrite all the default values.',
    )


class Message1157(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content225(BaseModel):
    deviations: Optional[Deviations24] = Field(
        None,
        description='Optional deviations to the national holiday.\nIf set these deviations will overwrite the default values.',
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    nationalHoliday: Optional[NationalHoliday] = Field(
        None,
        description='The default configuration of the national holiday.\n\nIf the deviations object is set those values overwrite all the default values.',
    )


class ProvidersEmployersEmployerIdNationalholidaysNationalHolidayIdPutResponse(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message1157]] = None
    content: Optional[Content225] = None


class Message1158(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdNationalholidaysNationalHolidayIdPutResponse1(
    BaseModel
):
    version: Optional[Version] = None
    messages: Optional[List[Message1158]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdNationalholidaysNationalHolidayIdPutResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdNationalholidaysNationalHolidayIdPutResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdNationalholidaysNationalHolidayIdPutResponse4(
    BaseModel
):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1158]] = None
    version: Optional[Version] = None


class Message1160(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CreatedBy24(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class LastModifiedBy28(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class FieldEmbeddedItem176(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy24] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy28] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersEmployerIdNotesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1160]] = None
    field_embedded: Optional[List[FieldEmbeddedItem176]] = Field(
        None, alias='_embedded'
    )


class Message1161(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdNotesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1161]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdNotesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdNotesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdNotesPostRequest(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy24] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy28] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class Message1162(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content226(BaseModel):
    accessibleBy: Optional[AccessibleBy] = Field(
        None, description='Indicates who can view this node.\n'
    )
    createdBy: Optional[CreatedBy24] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was created\n',
        examples=['2018-01-01'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy28] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='The date on which the note was last modified (this field has the same value as `createdOn` if no change was made afther creation).',
        examples=['2018-01-01'],
    )
    note: Optional[constr(max_length=4000)] = Field(
        None,
        description='The note it self.\n\n__Note:__ This is a free text field so users can add htlm/script etc.',
        examples=['Remember to do xyz'],
    )
    subject: Optional[constr(max_length=250)] = Field(
        None, description='subject of the note', examples=['Remember to do xyz']
    )


class ProvidersEmployersEmployerIdNotesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1162]] = None
    content: Optional[Content226] = None


class Message1163(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdNotesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1163]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdNotesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdNotesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1164(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AppliesToEmployee(BaseModel):
    dateOfBirth: Optional[date_aliased] = Field(
        None, description='The date of birth\n', examples=['1995-05-21']
    )
    employeeNumber: Optional[int] = Field(
        None,
        description='The employee number to uniquely identify a employee within a employer.',
        examples=[156],
    )
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the employee', examples=['Susan']
    )
    formattedName: Optional[constr(max_length=82)] = Field(
        None,
        description='Formatted name of the employee based on the value of `howToFormatLastName`',
        examples=['Wiel - van Bergen S.L. van de'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the employee', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the employee', examples=['Bergen']
    )
    lastNamePartner: Optional[constr(max_length=25)] = Field(
        None,
        description='The last name of the partner of the employee',
        examples=['Wiel'],
    )
    photo: Optional[str] = Field(
        None,
        description='A photo of the employee to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=[
            'https://api.loket.nl/v2/providers/employers/employees/{employeeId}/photo/{version}'
        ],
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the employee', examples=['van']
    )
    prefixPartner: Optional[constr(max_length=10)] = Field(
        None,
        description='The prefix of the partner of the employee',
        examples=['van de'],
    )


class MarkedAsReadBy(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class NotificationType2(BaseModel):
    key: Optional[int] = Field(None, examples=[1])
    value: Optional[str] = Field(None, examples=['Verjaardag'])


class FieldEmbeddedItem177(BaseModel):
    appliesToEmployee: Optional[AppliesToEmployee] = None
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isRead: Optional[bool] = Field(
        None,
        description='Indicates whether the notification has been read',
        examples=[False],
    )
    markedAsReadBy: Optional[MarkedAsReadBy] = None
    markedAsReadOn: Optional[datetime] = Field(
        None,
        description='The time at which the notificiation was marked as read.',
        examples=['2018-02-05T12:29:44+02:00'],
    )
    notificationDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the event of the notificationType (e.g. birthday or anniversary) will occure',
        examples=['2018-02-05'],
    )
    notificationType: Optional[NotificationType2] = Field(
        None, description='The type of notification'
    )
    notificationTypeClarification: Optional[constr(max_length=150)] = Field(
        None, description='Optional text', examples=['30 Jaar']
    )


class ProvidersEmployersEmployerIdNotificationsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1164]] = None
    field_embedded: Optional[List[FieldEmbeddedItem177]] = Field(
        None, alias='_embedded'
    )


class Message1165(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdNotificationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1165]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdNotificationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdNotificationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1166(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country69(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication53(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address33(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country69] = None
    furtherIndication: Optional[FurtherIndication53] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234AA']
    )
    province: Optional[Province] = Field(None, description='A Dutch province')
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Cao(BaseModel):
    key: Optional[int] = Field(None, examples=[184])
    value: Optional[constr(max_length=50)] = Field(None, examples=['Agriculture'])


class Contact6(BaseModel):
    name: Optional[constr(max_length=50)] = Field(
        None,
        description='Name of the contact of the administration',
        examples=['Henk de Vries'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The general phone number of the administration',
        examples=['013-12345678'],
    )


class Country70(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication54(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress20(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country70] = None
    furtherIndication: Optional[FurtherIndication54] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    poBox: Optional[int] = Field(None, description='Post office box', examples=[5000])
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class GroupClassification(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[str] = Field(None, examples=['South'])


class Loonmodel(BaseModel):
    key: Optional[int] = Field(None, examples=[184])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Foresting monthly payrolling']
    )


class PayrollPeriodType13(BaseModel):
    key: Optional[int] = Field(None, examples=[2])
    value: Optional[constr(max_length=50)] = Field(None, examples=['month'])


class FieldEmbeddedItem178(BaseModel):
    address: Optional[Address33] = None
    administrationNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The administration number is a free field commonly used to register the debtors number.',
        examples=['ABC'],
    )
    cao: Optional[Cao] = Field(
        None,
        description='The CAO (CLA -> collective labor agrement) of the "loonmodel" the payroll administration is linked to.',
    )
    claTaxReturnCBSCode: Optional[int] = Field(
        None,
        description="The CBS code of the CLA (NL: CAO nummer), which is used for payroll tax return purposes.  If no CLA is applicable than is field may be filled with value 9999. Please also note that this value might be empty (this is not recommended but it's possible).\n",
        examples=[1896],
    )
    clientNumber: Optional[int] = Field(
        None,
        description='The client number is a unique number for administrations that are used for payrolling. This field has no value if the administration is not used for payrolling.',
        examples=[1234],
    )
    contact: Optional[Contact6] = None
    description: Optional[constr(max_length=50)] = Field(
        None, description='Description of the administration', examples=['Bakker']
    )
    deviatingPostalAddress: Optional[DeviatingPostalAddress20] = None
    endDate: Optional[date_aliased] = Field(
        None,
        description='The last day the payroll administration is active.\n',
        examples=['2020-12-31'],
    )
    groupClassification: Optional[GroupClassification] = Field(
        None,
        description='The group classification for the payroll administration. This field is used for filtering and grouping within the interface.\n\n`groupClassification` is a metadata field within the provider context. Possible values can be managed by the user.',
    )
    groupCode: Optional[int] = Field(
        None,
        description='Number (integer) used for grouping administrations.',
        examples=[40],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    loonmodel: Optional[Loonmodel] = Field(
        None,
        description='The "loonmodel" (this is a loket.nl term) the payroll administration inherits the payrolling configuration from. Deviating from the loonmodel configuration on payrol administration level is posible.\n\n`loonmodel` is a metadata field within the provider context. Possible values can be managed by the user.',
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the administration', examples=['ABC accountants']
    )
    payrollPeriodType: Optional[PayrollPeriodType13] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4).',
    )
    payrollTaxesNumber: Optional[constr(min_length=12, max_length=12)] = Field(
        None,
        description='The payroll tax number, loonheffingennummer, is the number that is used for the Loonaangifte for the Belastingdienst.',
        examples=['111111110L46'],
    )
    shortName: Optional[constr(max_length=12)] = Field(
        None, description='Shortened name of the administration', examples=['ABC acc']
    )
    startDate: Optional[date_aliased] = Field(
        None,
        description='The first day the payroll administration is active.\n',
        examples=['2016-01-01'],
    )


class ProvidersEmployersEmployerIdPayrolladministrationsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1166]] = None
    field_embedded: Optional[List[FieldEmbeddedItem178]] = Field(
        None, alias='_embedded'
    )


class Message1167(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdPayrolladministrationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1167]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdPayrolladministrationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdPayrolladministrationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1168(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ActiveFor(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class Status19(Enum):
    Inactive = 'Inactive'
    Data_transfer_in_progress = 'Data transfer in progress'
    Active = 'Active'


class Content227(BaseModel):
    activeFor: Optional[ActiveFor] = None
    status: Optional[Status19] = None


class ProvidersEmployersEmployerIdProformaGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1168]] = None
    content: Optional[Content227] = None


class Message1169(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdProformaGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1169]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdProformaGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdProformaGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProformaType(Enum):
    WithSalaryResultsWithSalaryVariables = 'WithSalaryResultsWithSalaryVariables'
    WithSalaryResultsWithoutSalaryVariables = 'WithSalaryResultsWithoutSalaryVariables'
    WithoutSalaryResultsWithSalaryVariables = 'WithoutSalaryResultsWithSalaryVariables'
    WithoutSalaryResultsWithoutSalaryVariables = (
        'WithoutSalaryResultsWithoutSalaryVariables'
    )
    WithoutEmployments = 'WithoutEmployments'


class ProvidersEmployersEmployerIdProformaInitializePostRequest(BaseModel):
    employeeId: Optional[UUID] = Field(
        None,
        description='If this Id is set all the employment of the specific employee will be copied to the proforma environment otherwise all employments are copied.\n\nDoes not work in combination with `proformaType` = "Zonder dienstverbanden"',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    proformaType: Optional[ProformaType] = None


class ProvidersEmployersEmployerIdProformaInitializePostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1169]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdProformaInitializePostResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdProformaInitializePostResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdProviderlogoGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdProviderlogoGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdProviderlogoVersionGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdProviderlogoVersionGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1171(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem179(BaseModel):
    code: Optional[int] = Field(
        None, description='The visible identifier of the department.\n', examples=[2]
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The visible description (i.e. name) of the department.\n',
        examples=['Verkoop Binnendienst'],
    )
    emailLeaveRequest: Optional[constr(max_length=255)] = Field(
        None,
        description='Recipient e-mail adress for notification in case of leave requests. Typically this is the mailadress of a manager that would get a notification mail when a new leave requet is to be processed.',
        examples=['api@loket.nl'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    subDepartmentOf: Optional[SubDepartmentOf] = Field(
        None,
        description='If the department is a sub department (i.e. underlying) of another department, then the key-field of that other department may be entered here.\n',
    )


class ProvidersEmployersEmployerIdUseraccessibledepartmentsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1171]] = None
    field_embedded: Optional[List[FieldEmbeddedItem179]] = Field(
        None, alias='_embedded'
    )


class Message1172(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdUseraccessibledepartmentsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1172]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdUseraccessibledepartmentsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdUseraccessibledepartmentsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1173(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Tenant3(BaseModel):
    description: Optional[constr(max_length=100)] = Field(
        None, examples=['Customer X Azure AD']
    )
    id: Optional[UUID] = Field(
        None,
        description='Id for the tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    tenantRegistrationLevel: Optional[TenantRegistrationLevel] = None


class AzureActiveDirectory3(BaseModel):
    tenant: Optional[Tenant3] = Field(None, description='The Azure AD tennant')
    userId: Optional[str] = Field(
        None,
        description='The userId as known in the Azure AD of the selected tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ContactInformation34(BaseModel):
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None, description='The e-mail address of the user.', examples=['info@loket.nl']
    )
    phoneNumber: Optional[constr(min_length=1, max_length=15)] = Field(
        None, description='The phone number of the user.', examples=['+31 13-1234567']
    )
    placeOfEmployment: Optional[constr(min_length=1, max_length=24)] = Field(
        None,
        description='The place of employment (standplaats) for the user.',
        examples=['Amsterdam office'],
    )


class PersonalDetails24(BaseModel):
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None, description='The first name of the user', examples=['Susan']
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials of the user', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None, description='The last name of the user', examples=['Bergen']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix of the user', examples=['van']
    )


class FieldEmbeddedItem180(BaseModel):
    accessStatus: Optional[AccessStatus] = Field(
        None, description='indicates the access status of the user.'
    )
    azureActiveDirectory: Optional[AzureActiveDirectory3] = None
    contactInformation: Optional[ContactInformation34] = None
    dateTimeCreation: Optional[datetime] = Field(
        None,
        description='The date on which the user was created',
        examples=['2020-01-19'],
    )
    dateTimeLastLogin: Optional[datetime] = Field(
        None,
        description='The date on which the user loged in for the last time',
        examples=['2021-01-19'],
    )
    hasAccessToPayrollingTestData: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to data for payrolling test years',
        examples=[False],
    )
    hasIntegrations: Optional[bool] = Field(
        None,
        description='Indicates if the user has integrations with clients other that Loket',
        examples=[False],
    )
    hasMultiFactorAuthentication: Optional[bool] = Field(
        None,
        description='Indicates if the user has multi factor authentication enabled\n\nCan only be changed from true to false.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDepartmentManager: Optional[bool] = Field(
        None,
        description='Indicates if the user is a department manager',
        examples=[False],
    )
    isLinkedToMultipleEmployers: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to multiple employer.',
        examples=[False],
    )
    loginMethod: Optional[LoginMethod] = Field(
        None, description='The allowedlogin method for the user'
    )
    personalDetails: Optional[PersonalDetails24] = None
    twoFactorAuthenticationRequired: Optional[bool] = Field(
        None,
        description='Indicates whether two factor authentication is required for the user. This setting is only available for login method: Via website en SSO ',
        examples=[False],
    )
    userCustomSpecifiedRole: Optional[constr(max_length=50)] = Field(
        None,
        description='Further specification of the user role.\n',
        examples=['Secretariaat medewerker'],
    )
    userName: Optional[constr(min_length=3, max_length=50)] = Field(
        None, description='The username', examples=['User42']
    )
    userSpecifiedRole: Optional[UserSpecifiedRole] = Field(
        None, description='The Role which the user has specified.'
    )


class ProvidersEmployersEmployerIdUsersGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1173]] = None
    field_embedded: Optional[List[FieldEmbeddedItem180]] = Field(
        None, alias='_embedded'
    )


class Message1174(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdUsersGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1174]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdUsersGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdUsersGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class AzureActiveDirectory4(BaseModel):
    externalUserId: Optional[UUID] = Field(
        None,
        description='The userId as known in the Azure AD of the selected tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    tenantId: Optional[UUID] = Field(
        None,
        description='Id for the tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    userName: Optional[constr(min_length=3, max_length=50)] = Field(
        None, examples=['User123']
    )


class PersonalDetails25(BaseModel):
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials of the user', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None, description='The last name of the user', examples=['Bergen']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix of the user', examples=['van']
    )


class SsoAccount(BaseModel):
    model_config = ConfigDict(
        regex_engine="python-re",
    )
    password: Optional[
        constr(
            pattern=r'(?=^.{8,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*',
            min_length=8,
            max_length=255,
        )
    ] = Field(None, description='The password', examples=['Password%6'])
    userName: Optional[constr(min_length=3, max_length=50)] = Field(
        None, examples=['Customer X Azure AD']
    )


class ProvidersEmployersEmployerIdUsersPostRequest(BaseModel):
    azureActiveDirectory: Optional[AzureActiveDirectory4] = None
    contactInformation: Optional[ContactInformation34] = None
    hasAccessToPayrollingTestData: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to data for payrolling test years',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    loginMethod: Optional[LoginMethod] = Field(
        None, description='The allowedlogin method for the user'
    )
    personalDetails: Optional[PersonalDetails25] = None
    ssoAccount: Optional[SsoAccount] = None


class Message1175(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Tenant4(BaseModel):
    description: Optional[constr(max_length=100)] = Field(
        None, examples=['Customer X Azure AD']
    )
    id: Optional[UUID] = Field(
        None,
        description='Id for the tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    tenantRegistrationLevel: Optional[TenantRegistrationLevel] = None


class AzureActiveDirectory5(BaseModel):
    tenant: Optional[Tenant4] = Field(None, description='The Azure AD tennant')
    userId: Optional[str] = Field(
        None,
        description='The userId as known in the Azure AD of the selected tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class PersonalDetails26(BaseModel):
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None, description='The first name of the user', examples=['Susan']
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials of the user', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None, description='The last name of the user', examples=['Bergen']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix of the user', examples=['van']
    )


class Content228(BaseModel):
    accessStatus: Optional[AccessStatus] = Field(
        None, description='indicates the access status of the user.'
    )
    azureActiveDirectory: Optional[AzureActiveDirectory5] = None
    contactInformation: Optional[ContactInformation34] = None
    dateTimeCreation: Optional[datetime] = Field(
        None,
        description='The date on which the user was created',
        examples=['2020-01-19'],
    )
    dateTimeLastLogin: Optional[datetime] = Field(
        None,
        description='The date on which the user loged in for the last time',
        examples=['2021-01-19'],
    )
    hasAccessToPayrollingTestData: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to data for payrolling test years',
        examples=[False],
    )
    hasIntegrations: Optional[bool] = Field(
        None,
        description='Indicates if the user has integrations with clients other that Loket',
        examples=[False],
    )
    hasMultiFactorAuthentication: Optional[bool] = Field(
        None,
        description='Indicates if the user has multi factor authentication enabled\n\nCan only be changed from true to false.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDepartmentManager: Optional[bool] = Field(
        None,
        description='Indicates if the user is a department manager',
        examples=[False],
    )
    isLinkedToMultipleEmployers: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to multiple employer.',
        examples=[False],
    )
    loginMethod: Optional[LoginMethod] = Field(
        None, description='The allowedlogin method for the user'
    )
    personalDetails: Optional[PersonalDetails26] = None
    twoFactorAuthenticationRequired: Optional[bool] = Field(
        None,
        description='Indicates whether two factor authentication is required for the user. This setting is only available for login method: Via website en SSO ',
        examples=[False],
    )
    userCustomSpecifiedRole: Optional[constr(max_length=50)] = Field(
        None,
        description='Further specification of the user role.\n',
        examples=['Secretariaat medewerker'],
    )
    userName: Optional[constr(min_length=3, max_length=50)] = Field(
        None, description='The username', examples=['User42']
    )
    userSpecifiedRole: Optional[UserSpecifiedRole] = Field(
        None, description='The Role which the user has specified.'
    )


class ProvidersEmployersEmployerIdUsersPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1175]] = None
    content: Optional[Content228] = None


class Message1176(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdUsersPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1176]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdUsersPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdUsersPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1177(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Department23(BaseModel):
    code: Optional[int] = Field(
        None, description='The visible identifier of the department.\n', examples=[2]
    )
    description: Optional[constr(max_length=50)] = Field(
        None,
        description='The visible description (i.e. name) of the department.            \n',
        examples=['Verkoop Binnendienst'],
    )
    hasAccessToSubDepartments: Optional[bool] = Field(
        None,
        description='Indicates whether the user will have access to departments that are configured as sub-departments of the selected department.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class FieldEmbeddedItem181(BaseModel):
    departments: Optional[List[Department23]] = None
    personalDetails: Optional[PersonalDetails26] = None
    userId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdUsersDepartmentsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1177]] = None
    field_embedded: Optional[List[FieldEmbeddedItem181]] = Field(
        None, alias='_embedded'
    )


class Message1178(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdUsersDepartmentsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1178]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdUsersDepartmentsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdUsersDepartmentsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class PersonalDetails28(BaseModel):
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials of the user', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None, description='The last name of the user', examples=['Bergen']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix of the user', examples=['van']
    )


class ProvidersEmployersEmployerIdUsersInvitePostRequest(BaseModel):
    contactInformation: Optional[ContactInformation34] = None
    destinationForSecret: Optional[constr(min_length=3, max_length=15)] = Field(
        None,
        description='The destination phonenumber to sent the secret to during registration.',
        examples=['0612345678'],
    )
    hasAccessToPayrollingTestData: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to data for payrolling test years',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    personalDetails: Optional[PersonalDetails28] = None
    twoFactorAuthenticationRequired: Optional[bool] = Field(
        None,
        description='Indicates whether two factor authentication is required for the user. This setting is only available for login method: Via website en SSO ',
        examples=[False],
    )


class Message1179(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Tenant5(BaseModel):
    description: Optional[constr(max_length=100)] = Field(
        None, examples=['Customer X Azure AD']
    )
    id: Optional[UUID] = Field(
        None,
        description='Id for the tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    tenantRegistrationLevel: Optional[TenantRegistrationLevel] = None


class AzureActiveDirectory6(BaseModel):
    tenant: Optional[Tenant5] = Field(None, description='The Azure AD tennant')
    userId: Optional[str] = Field(
        None,
        description='The userId as known in the Azure AD of the selected tennant',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class PersonalDetails29(BaseModel):
    firstName: Optional[constr(min_length=1, max_length=28)] = Field(
        None, description='The first name of the user', examples=['Susan']
    )
    initials: Optional[constr(min_length=1, max_length=6)] = Field(
        None, description='The initials of the user', examples=['S.L.']
    )
    lastName: Optional[constr(min_length=1, max_length=25)] = Field(
        None, description='The last name of the user', examples=['Bergen']
    )
    prefix: Optional[constr(min_length=1, max_length=10)] = Field(
        None, description='The prefix of the user', examples=['van']
    )


class Content229(BaseModel):
    accessStatus: Optional[AccessStatus] = Field(
        None, description='indicates the access status of the user.'
    )
    azureActiveDirectory: Optional[AzureActiveDirectory6] = None
    contactInformation: Optional[ContactInformation34] = None
    dateTimeCreation: Optional[datetime] = Field(
        None,
        description='The date on which the user was created',
        examples=['2020-01-19'],
    )
    dateTimeLastLogin: Optional[datetime] = Field(
        None,
        description='The date on which the user loged in for the last time',
        examples=['2021-01-19'],
    )
    hasAccessToPayrollingTestData: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to data for payrolling test years',
        examples=[False],
    )
    hasIntegrations: Optional[bool] = Field(
        None,
        description='Indicates if the user has integrations with clients other that Loket',
        examples=[False],
    )
    hasMultiFactorAuthentication: Optional[bool] = Field(
        None,
        description='Indicates if the user has multi factor authentication enabled\n\nCan only be changed from true to false.',
        examples=[False],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDepartmentManager: Optional[bool] = Field(
        None,
        description='Indicates if the user is a department manager',
        examples=[False],
    )
    isLinkedToMultipleEmployers: Optional[bool] = Field(
        None,
        description='Indicates if the user has access to multiple employer.',
        examples=[False],
    )
    loginMethod: Optional[LoginMethod] = Field(
        None, description='The allowedlogin method for the user'
    )
    personalDetails: Optional[PersonalDetails29] = None
    twoFactorAuthenticationRequired: Optional[bool] = Field(
        None,
        description='Indicates whether two factor authentication is required for the user. This setting is only available for login method: Via website en SSO ',
        examples=[False],
    )
    userCustomSpecifiedRole: Optional[constr(max_length=50)] = Field(
        None,
        description='Further specification of the user role.\n',
        examples=['Secretariaat medewerker'],
    )
    userName: Optional[constr(min_length=3, max_length=50)] = Field(
        None, description='The username', examples=['User42']
    )
    userSpecifiedRole: Optional[UserSpecifiedRole] = Field(
        None, description='The Role which the user has specified.'
    )


class ProvidersEmployersEmployerIdUsersInvitePostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1179]] = None
    content: Optional[Content229] = None


class Message1180(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdUsersInvitePostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1180]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdUsersInvitePostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdUsersInvitePostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdUsersLinkPostRequest(BaseModel):
    departments: Optional[List[UUID]] = None
    userId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdUsersLinkPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1180]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdUsersLinkPostResponse1(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdUsersLinkPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1182(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem182(BaseModel):
    availableForEmployerUser: Optional[bool] = Field(None, examples=[True])
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['Beheren dienstverbanden']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isEnabled: Optional[bool] = Field(
        None, description='Enable or disable an authorization'
    )


class ProvidersEmployersEmployerIdUsersUserIdAuthorizationsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1182]] = None
    field_embedded: Optional[List[List[FieldEmbeddedItem182]]] = Field(
        None, alias='_embedded'
    )


class Message1183(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdUsersUserIdAuthorizationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1183]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdUsersUserIdAuthorizationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdUsersUserIdAuthorizationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class AuthorizationSet(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['HR Gebruiker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersEmployersEmployerIdUsersUserIdAuthorizationsPatchRequest(BaseModel):
    authorizationSet: Optional[AuthorizationSet] = None
    authorizations: Optional[List[Authorization]] = None


class Message1184(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployerIdUsersUserIdAuthorizationsPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1184]] = None
    content: Optional[Dict[str, Any]] = None


class Message1185(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdUsersUserIdAuthorizationsPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1185]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdUsersUserIdAuthorizationsPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdUsersUserIdAuthorizationsPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Action17(Enum):
    link = 'link'
    unlink = 'unlink'


class ProvidersEmployersEmployerIdUsersUserIdDepartmentsPatchRequestItem(BaseModel):
    action: Optional[Action17] = Field(None, description='The action to perform.')
    departmentId: Optional[UUID] = Field(
        None,
        description='The unique identifier (GUID/UUID) of the department',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    hasAccessToSubDepartments: Optional[bool] = Field(
        None,
        description='Indicates whether the user will have access to departments that are configured as sub-departments of the selected department.',
        examples=[False],
    )


class ProvidersEmployersEmployerIdUsersUserIdDepartmentsPatchRequest(
    RootModel[List[ProvidersEmployersEmployerIdUsersUserIdDepartmentsPatchRequestItem]]
):
    root: List[ProvidersEmployersEmployerIdUsersUserIdDepartmentsPatchRequestItem]


class Message1186(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ProvidersEmployersEmployerIdUsersUserIdDepartmentsPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1186]] = None
    content: Optional[Dict[str, Any]] = None


class Message1187(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdUsersUserIdDepartmentsPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1187]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdUsersUserIdDepartmentsPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdUsersUserIdDepartmentsPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdUsersUserIdDepartmentsPatchResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1187]] = None
    version: Optional[Version] = None


class Message1189(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AllowedTransition4(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None,
        description='The description of the transition (task)',
        examples=['Controleer de vergoedingen'],
    )
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.loket.nl/v2/providers/employers/workflows/{workflowId}/transition'
        ],
    )
    httpVerb: Optional[HttpVerb] = None
    transitions: Optional[List[Transition]] = Field(
        None,
        examples=[
            [
                {
                    'action': 'fabf3b25-abf9-4e8c-a8f7-81400d1b0e96',
                    'description': 'Approve',
                },
                {
                    'action': 'abc31d45-f593-4d73-8078-6caba9cebdcc',
                    'description': 'Reject',
                },
            ]
        ],
    )


class User9(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class Assignee4(BaseModel):
    role: Optional[Role] = None
    user: Optional[User9] = None


class LastModifiedBy31(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class Status20(BaseModel):
    key: Optional[int] = Field(None, description='The unique identifier', examples=[1])
    value: Optional[str] = Field(None, examples=['In progress'])


class FieldEmbeddedItem183(BaseModel):
    allowedTransitions: Optional[List[AllowedTransition4]] = Field(
        None,
        description='In this object the posible transitions are returned.\nBy sending a request to the `href` with the given `httpVerb` and one of the options given in `transitions` in the body. The workflow is transitioned to the given state.',
    )
    assignee: Optional[Assignee4] = Field(
        None,
        description='A workflow is either assigned to a user or a role. A role can be filled by multiple users.',
    )
    data: Optional[str] = Field(
        None,
        description='A JSON representation of the mutation/data regarding this workflow',
        examples=[
            {
                'address': {
                    'city': 'Leiden',
                    'country': {'key': 1},
                    'houseNumber': 12,
                    'houseNumberAddition': 'D',
                    'postalCode': '1234 AA',
                    'street': 'Voordijk',
                }
            }
        ],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initiatedBy: Optional[InitiatedBy] = None
    initiatedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    lastModifiedBy: Optional[LastModifiedBy31] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='date and time on which the last modification on the workflow was performed. This can be either by the system or a user.',
        examples=['2019-11-23T11:14:06Z'],
    )
    status: Optional[Status20] = Field(
        None, description='Indicates the status of the workflow as a whole.'
    )
    trigger: Optional[Trigger6] = Field(
        None,
        description='Indicates the trigger that started the workflow.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate6] = Field(
        None,
        description='Indicates what workflow template was used to initiate the workflow.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class ProvidersEmployersEmployerIdWorkflowsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1189]] = None
    field_embedded: Optional[List[FieldEmbeddedItem183]] = Field(
        None, alias='_embedded'
    )


class Message1190(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdWorkflowsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1190]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdWorkflowsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdWorkflowsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1191(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class CreatedBy27(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformated user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class Trigger8(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None, examples=['Address change for employee']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class WorkflowTemplate8(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None, examples=['Approval by employer']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class FieldEmbeddedItem184(BaseModel):
    createdBy: Optional[CreatedBy27] = None
    createdOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy31] = None
    lastModifiedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    trigger: Optional[Trigger8] = Field(
        None,
        description='Indicates the workflow trigger to be configured.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate8] = Field(
        None,
        description='Indicates what workflow template will be used to initiate a workflow when the trigger takes place.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class ProvidersEmployersEmployerIdWorkflowtriggermappingsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1191]] = None
    field_embedded: Optional[List[FieldEmbeddedItem184]] = Field(
        None, alias='_embedded'
    )


class Message1192(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdWorkflowtriggermappingsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1192]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersEmployersEmployerIdWorkflowtriggermappingsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdWorkflowtriggermappingsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersEmployersEmployerIdWorkflowtriggermappingsPostRequest(BaseModel):
    createdBy: Optional[CreatedBy27] = None
    createdOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy31] = None
    lastModifiedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    trigger: Optional[Trigger8] = Field(
        None,
        description='Indicates the workflow trigger to be configured.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate8] = Field(
        None,
        description='Indicates what workflow template will be used to initiate a workflow when the trigger takes place.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class Message1193(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content230(BaseModel):
    createdBy: Optional[CreatedBy27] = None
    createdOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedBy: Optional[LastModifiedBy31] = None
    lastModifiedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    trigger: Optional[Trigger8] = Field(
        None,
        description='Indicates the workflow trigger to be configured.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate8] = Field(
        None,
        description='Indicates what workflow template will be used to initiate a workflow when the trigger takes place.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class ProvidersEmployersEmployerIdWorkflowtriggermappingsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1193]] = None
    content: Optional[Content230] = None


class Message1194(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersEmployersEmployerIdWorkflowtriggermappingsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1194]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersEmployersEmployerIdWorkflowtriggermappingsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersEmployersEmployerIdWorkflowtriggermappingsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1195(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ReferenceDate16(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the first reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the first reference date '
    )


class ReferenceDate26(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the second reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the second reference date '
    )


class AdditionalLeave6(BaseModel):
    allocationType: Optional[AllocationType] = Field(
        None,
        description='Indicates how additional leave is to be assigned to the employments (linked to this leave policy).',
    )
    referenceDate1: Optional[ReferenceDate16] = Field(
        None,
        description='If `referenceDate2` has a value only the last 6 months of the year are allowed as values',
    )
    referenceDate2: Optional[ReferenceDate26] = Field(
        None, description='Only use if applicable'
    )


class LeavePattern6(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class LeaveRequest6(BaseModel):
    applyLeaveSchedule: Optional[bool] = Field(
        None,
        description='Indicates whether the leave schedule can be enterd and is so it is used when calculating the sugested leave hours for a leave request',
        examples=[False],
    )
    leavePattern: Optional[LeavePattern6] = Field(
        None,
        description='The applicable leave pattern for a period of 2 weeks can be stored in this object. Each field contains the number of leave(work) hours for that day in the 2-week period. <br /> Please note that the `leavePattern` should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )
    useHolidaysInCalculation: Optional[bool] = Field(
        None,
        description='Indicates whether the calculating for sugested leave hours for a leave request takes into account holidays. Is set to true no leave hours are calculated for "The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company."\n\neg. When requesting leave for the 24th and 25th of december (25th being a national holiday) the calculation (8 hours a day) will return 8 when `useHolidaysInCalculation` is true and 16 when `useHolidaysInCalculation` is false',
        examples=[False],
    )


class Content231(BaseModel):
    accrualType: Optional[AccrualType] = Field(
        None, description='Indicates how leave is accrued (yearly, monthly or hourly)  '
    )
    additionalLeave: Optional[AdditionalLeave6] = None
    dayOfTheMonthToPerformAutomaticLeaveCalculationOn: Optional[conint(ge=1, le=31)] = (
        Field(
            None,
            description='They day of the month on which the automatic accrual of (yearly or monthly) leave is performed. The yearly calculation is repeated every month to encompase any changes made that have affect on the past.\nIf for example 31 is chosen and a specific month does not have that day the logic will pick the first available date of said month.          ',
            examples=[12],
        )
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement21] = None
    leaveRequest: Optional[LeaveRequest6] = None
    leaveUnitType: Optional[LeaveUnitType8] = Field(
        None,
        description='Indicates what the unit type (hours or days) is. Employments linked to this leave policy use this leaveUnitType for their leave.',
    )
    name: Optional[constr(min_length=1, max_length=50)] = Field(
        None, description='The name of the leave policy', examples=['Normal leave']
    )
    payoutLeaveImmediately: Optional[bool] = Field(
        None,
        description='If leave `accrualType` is set to based on hours worked (uren) then this field allows for the leave hours to be paid out directly instead of being accrued.',
        examples=[False],
    )
    roundTo: Optional[RoundTo] = Field(
        None,
        description='Indicates to how many digits after the decimal point to round the numbers',
    )
    roundingMethod: Optional[RoundingMethod] = Field(
        None, description='Indicates how to round the numbers '
    )


class ProvidersLeavePoliciesLeavePolicyIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1195]] = None
    content: Optional[Content231] = None


class Message1196(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersLeavePoliciesLeavePolicyIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1196]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersLeavePoliciesLeavePolicyIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersLeavePoliciesLeavePolicyIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1197(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class From12(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of age to be applicable for the additional leave',
        examples=[0],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description="the employee's minimal age to be applicable for the additional leave",
        examples=[40],
    )


class LeaveEntitlement25(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.\n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.\n              \n\nEither excessLeaveToStatutory or wtr must have a value                ',
        examples=[40],
    )


class UpToAndIncluding12(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of age to be applicable for the additional leave',
        examples=[11],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description="the employee's minimal age to be applicable for the additional leave",
        examples=[50],
    )


class FieldEmbeddedItem185(BaseModel):
    from_: Optional[From12] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement25] = None
    upToAndIncluding: Optional[UpToAndIncluding12] = None


class ProvidersLeavePoliciesLeavePolicyIdAgebasedleaveGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1197]] = None
    field_embedded: Optional[List[FieldEmbeddedItem185]] = Field(
        None, alias='_embedded'
    )


class Message1198(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersLeavePoliciesLeavePolicyIdAgebasedleaveGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1198]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersLeavePoliciesLeavePolicyIdAgebasedleaveGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersLeavePoliciesLeavePolicyIdAgebasedleaveGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1199(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class LeaveEntitlement26(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.\n              \n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.\n              \n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )


class FieldEmbeddedItem186(BaseModel):
    fromWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the from wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement26] = None
    upToAndIncludingWage: Optional[confloat(ge=0.0, le=99999999999999.98)] = Field(
        None,
        description='the up to and including wage the employment has to earn to be applicable for the additional leave',
        examples=[40],
    )


class ProvidersLeavePoliciesLeavePolicyIdWagebasedleaveGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1199]] = None
    field_embedded: Optional[List[FieldEmbeddedItem186]] = Field(
        None, alias='_embedded'
    )


class Message1200(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersLeavePoliciesLeavePolicyIdWagebasedleaveGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1200]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersLeavePoliciesLeavePolicyIdWagebasedleaveGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersLeavePoliciesLeavePolicyIdWagebasedleaveGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1201(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class From13(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of service to be applicable for the additional leave',
        examples=[0],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description='the number of years of service to be applicable for the additional leave',
        examples=[40],
    )


class LeaveEntitlement27(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.\n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.\n\nEither excessLeaveToStatutory or wtr must have a value',
        examples=[40],
    )


class UpToAndIncluding13(BaseModel):
    numberOfMonths: Optional[conint(ge=0, le=11)] = Field(
        None,
        description='the number of months of service to be applicable for the additional leave',
        examples=[0],
    )
    numberOfYears: Optional[conint(ge=0, le=999)] = Field(
        None,
        description='the number of years of service to be applicable for the additional leave',
        examples=[40],
    )


class FieldEmbeddedItem187(BaseModel):
    from_: Optional[From13] = Field(None, alias='from')
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement27] = None
    upToAndIncluding: Optional[UpToAndIncluding13] = None


class ProvidersLeavePoliciesLeavePolicyIdYearsofservicebasedleaveGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1201]] = None
    field_embedded: Optional[List[FieldEmbeddedItem187]] = Field(
        None, alias='_embedded'
    )


class Message1202(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersLeavePoliciesLeavePolicyIdYearsofservicebasedleaveGetResponse1(
    BaseModel
):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1202]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersLeavePoliciesLeavePolicyIdYearsofservicebasedleaveGetResponse2(
    BaseModel
):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersLeavePoliciesLeavePolicyIdYearsofservicebasedleaveGetResponse3(
    BaseModel
):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1203(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class NotificationType3(BaseModel):
    key: Optional[int] = Field(None, examples=[3])
    value: Optional[constr(max_length=70)] = Field(
        None, examples=['Start of employment']
    )


class Notification1(BaseModel):
    createNumberOfDaysBeforeEvent: Optional[conint(ge=0, le=99)] = Field(
        None,
        description='The number of days that the notification is created befor the event takes place.',
        examples=[30],
    )
    isEnabled: Optional[bool] = Field(
        None, description='Enable or disable a notification for a user'
    )
    notificationType: Optional[NotificationType3] = Field(
        None, description='The notification set'
    )
    receiveDepartmentSignalsOnly: Optional[bool] = Field(
        None,
        description='Only receive notification for your departments.\nNot relevant if the user is not a department manager.',
        examples=[False],
    )
    sendMailWhenNotificationIsCreated: Optional[bool] = Field(
        None,
        description='send an email when on creation of the notification',
        examples=[False],
    )


class Content232(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['Salarisadministrateur']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    notifications: Optional[List[Notification1]] = None
    numberOfLinkedEmployerUsers: Optional[int] = Field(
        None,
        description='The number of employer users that are linked to this notification set',
        examples=[435],
    )


class ProvidersNotificationsetsNotificationSetIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1203]] = None
    content: Optional[Content232] = None


class Message1204(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersNotificationsetsNotificationSetIdGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1204]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersNotificationsetsNotificationSetIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersNotificationsetsNotificationSetIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1205(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content233(BaseModel):
    externalTenant: Optional[ExternalTenant] = None
    externalUser: Optional[ExternalUser] = None


class ProvidersUsersProviderUserIdConfiguredexternaltenantGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1205]] = None
    content: Optional[Content233] = None


class Message1206(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersUsersProviderUserIdConfiguredexternaltenantGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1206]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersUsersProviderUserIdConfiguredexternaltenantGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersUsersProviderUserIdConfiguredexternaltenantGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersUsersProviderUserIdConfiguredexternaltenantPatchRequest(BaseModel):
    externalTenant: Optional[ExternalTenant] = None
    externalUser: Optional[ExternalUser] = None


class Message1207(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content234(BaseModel):
    externalTenant: Optional[ExternalTenant] = None
    externalUser: Optional[ExternalUser] = None


class ProvidersUsersProviderUserIdConfiguredexternaltenantPatchResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1207]] = None
    content: Optional[Content234] = None


class Message1208(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersUsersProviderUserIdConfiguredexternaltenantPatchResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1208]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersUsersProviderUserIdConfiguredexternaltenantPatchResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersUsersProviderUserIdConfiguredexternaltenantPatchResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1209(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem188(BaseModel):
    applicationSetType: Optional[ApplicationSetType] = Field(
        None, description='The type of the set \n'
    )
    data: Optional[str] = Field(
        None,
        description='Contains an array of objects in json structure.\n',
        examples=['json object'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the exportset\n',
        examples=['Exportset Dienstverband'],
    )


class ProvidersProviderIdApplicationsetsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1209]] = None
    field_embedded: Optional[List[FieldEmbeddedItem188]] = Field(
        None, alias='_embedded'
    )


class Message1210(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdApplicationsetsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1210]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersProviderIdApplicationsetsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdApplicationsetsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersProviderIdApplicationsetsPostRequest(BaseModel):
    applicationSetType: Optional[ApplicationSetType] = Field(
        None, description='The type of the set \n'
    )
    data: Optional[str] = Field(
        None,
        description='Contains an array of objects in json structure.\n',
        examples=['json object'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the exportset\n',
        examples=['Exportset Dienstverband'],
    )


class Message1211(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content235(BaseModel):
    applicationSetType: Optional[ApplicationSetType] = Field(
        None, description='The type of the set \n'
    )
    data: Optional[str] = Field(
        None,
        description='Contains an array of objects in json structure.\n',
        examples=['json object'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the exportset\n',
        examples=['Exportset Dienstverband'],
    )


class ProvidersProviderIdApplicationsetsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1211]] = None
    content: Optional[Content235] = None


class Message1212(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdApplicationsetsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1212]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersProviderIdApplicationsetsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdApplicationsetsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1213(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem189(BaseModel):
    description: Optional[str] = Field(
        None, examples=['GetJournalRunsByPayrollAdministrationId']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersProviderIdAuthorizationsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1213]] = None
    field_embedded: Optional[List[FieldEmbeddedItem189]] = Field(
        None, alias='_embedded'
    )


class Message1214(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdAuthorizationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1214]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersProviderIdAuthorizationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdAuthorizationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1215(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem190(BaseModel):
    authorizations: Optional[List[Authorization]] = None
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['HR Gebruiker']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class ProvidersProviderIdAuthorizationsetsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1215]] = None
    field_embedded: Optional[List[FieldEmbeddedItem190]] = Field(
        None, alias='_embedded'
    )


class Message1216(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdAuthorizationsetsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1216]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersProviderIdAuthorizationsetsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdAuthorizationsetsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1217(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ItemType2(Enum):
    preboardingTrajectory = 'preboardingTrajectory'


class ItemType1(BaseModel):
    description: Optional[str] = Field(
        None,
        description='The description of the item type.',
        examples=['Preboarding traject'],
    )
    itemType: Optional[ItemType2] = Field(
        None, description='The item type of the billed item.'
    )


class Status21(Enum):
    open = 'open'
    completed = 'completed'
    endedPrematurely = 'endedPrematurely'


class PreboardingTrajectory1(BaseModel):
    dateLastModification: Optional[date_aliased] = Field(
        None,
        description='The date on which the status was last modified',
        examples=['2022-04-12'],
    )
    status: Optional[Status21] = Field(
        None, description='The status of the preboardingTraject.\n', examples=['open']
    )


class RequestedItem1(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    itemType: Optional[ItemType1] = Field(
        None, description='Details on the requested item.\n'
    )
    preboardingTrajectory: Optional[PreboardingTrajectory1] = Field(
        None, description='This object contains item type specific data\n'
    )


class FieldEmbeddedItem191(BaseModel):
    employer: Optional[Employer2] = Field(
        None, description='Data about the employer.\n'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    providerId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)\n',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    requestedDate: Optional[date_aliased] = Field(
        None,
        description='The date on which the billable item is requested.\n',
        examples=['2022-04-12'],
    )
    requestedItem: Optional[RequestedItem1] = Field(
        None, description='Details on the requested item.\n'
    )


class ProvidersProviderIdBillableitemsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1217]] = None
    field_embedded: Optional[List[FieldEmbeddedItem191]] = Field(
        None, alias='_embedded'
    )


class Message1218(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdBillableitemsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1218]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersProviderIdBillableitemsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdBillableitemsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1219(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem192(BaseModel):
    dkimTokens: Optional[List[str]] = None
    emailIdentity: Optional[str] = Field(
        None,
        description='The emailIdentity that can be used when sending email.',
        examples=['provider.com'],
    )
    emailIdentityType: Optional[EmailIdentityType] = Field(
        None, description='The type of the set emailIdentity'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDkimVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    isSpfVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    lastDkimVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Dkim settings were last verified.',
        examples=['2022-01-31'],
    )
    lastSpfVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Spf settings were last verified.',
        examples=['2022-01-31'],
    )


class ProvidersProviderIdEmailidentitiesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1219]] = None
    field_embedded: Optional[List[FieldEmbeddedItem192]] = Field(
        None, alias='_embedded'
    )


class Message1220(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdEmailidentitiesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1220]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersProviderIdEmailidentitiesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdEmailidentitiesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersProviderIdEmailidentitiesPostRequest(BaseModel):
    dkimTokens: Optional[List[str]] = None
    emailIdentity: Optional[str] = Field(
        None,
        description='The emailIdentity that can be used when sending email.',
        examples=['provider.com'],
    )
    emailIdentityType: Optional[EmailIdentityType] = Field(
        None, description='The type of the set emailIdentity'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDkimVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    isSpfVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    lastDkimVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Dkim settings were last verified.',
        examples=['2022-01-31'],
    )
    lastSpfVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Spf settings were last verified.',
        examples=['2022-01-31'],
    )


class Message1221(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content236(BaseModel):
    dkimTokens: Optional[List[str]] = None
    emailIdentity: Optional[str] = Field(
        None,
        description='The emailIdentity that can be used when sending email.',
        examples=['provider.com'],
    )
    emailIdentityType: Optional[EmailIdentityType] = Field(
        None, description='The type of the set emailIdentity'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDkimVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    isSpfVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    lastDkimVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Dkim settings were last verified.',
        examples=['2022-01-31'],
    )
    lastSpfVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Spf settings were last verified.',
        examples=['2022-01-31'],
    )


class ProvidersProviderIdEmailidentitiesPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1221]] = None
    content: Optional[Content236] = None


class Message1222(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdEmailidentitiesPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1222]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersProviderIdEmailidentitiesPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdEmailidentitiesPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersProviderIdEmailidentitiesVerifyPostRequest(BaseModel):
    dkimTokens: Optional[List[str]] = None
    emailIdentity: Optional[str] = Field(
        None,
        description='The emailIdentity that can be used when sending email.',
        examples=['provider.com'],
    )
    emailIdentityType: Optional[EmailIdentityType] = Field(
        None, description='The type of the set emailIdentity'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDkimVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    isSpfVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    lastDkimVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Dkim settings were last verified.',
        examples=['2022-01-31'],
    )
    lastSpfVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Spf settings were last verified.',
        examples=['2022-01-31'],
    )


class Message1223(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content237(BaseModel):
    dkimTokens: Optional[List[str]] = None
    emailIdentity: Optional[str] = Field(
        None,
        description='The emailIdentity that can be used when sending email.',
        examples=['provider.com'],
    )
    emailIdentityType: Optional[EmailIdentityType] = Field(
        None, description='The type of the set emailIdentity'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    isDkimVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    isSpfVerified: Optional[bool] = Field(
        None,
        description='Indicates whether the EmailIdentity has passed Spf verfication.',
        examples=[True],
    )
    lastDkimVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Dkim settings were last verified.',
        examples=['2022-01-31'],
    )
    lastSpfVerifiedOn: Optional[date_aliased] = Field(
        None,
        description='The date the Spf settings were last verified.',
        examples=['2022-01-31'],
    )


class ProvidersProviderIdEmailidentitiesVerifyPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1223]] = None
    content: Optional[Content237] = None


class Message1224(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdEmailidentitiesVerifyPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1224]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersProviderIdEmailidentitiesVerifyPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdEmailidentitiesVerifyPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1225(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Category28(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The id of the categorie to which the email template belongs.',
        examples=[3],
    )
    value: Optional[str] = Field(
        None,
        description='The name of the categorie to which the email template belongs.',
        examples=['Verlof'],
    )


class DefinedAtLevel5(Enum):
    provider = 'provider'
    loket = 'loket'


class FieldEmbeddedItem193(BaseModel):
    category: Optional[Category28] = Field(
        None, description='The module to which the email template belongs'
    )
    definedAtLevel: Optional[DefinedAtLevel5] = Field(
        None,
        description='The level at which the email template is defined.',
        examples=['provider'],
    )
    dependsOnModule: Optional[DependsOnModule] = Field(
        None, description='The module to which the email template belongs'
    )
    email: Optional[Email] = Field(
        None, description='The configurable parts of the email template'
    )
    isEmailTemplateEditable: Optional[bool] = Field(
        None,
        description='Indicates whether the email template can be editted.',
        examples=[True],
    )
    type: Optional[Type18] = Field(None, description='The type of the email template')


class ProvidersProviderIdEmailtemplatesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1225]] = None
    field_embedded: Optional[List[FieldEmbeddedItem193]] = Field(
        None, alias='_embedded'
    )


class Message1226(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdEmailtemplatesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1226]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersProviderIdEmailtemplatesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdEmailtemplatesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1227(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem194(BaseModel):
    category: Optional[Category28] = Field(
        None, description='The module to which the email template belongs'
    )
    definedAtLevel: Optional[DefinedAtLevel5] = Field(
        None,
        description='The level at which the email template is defined.',
        examples=['provider'],
    )
    dependsOnModule: Optional[DependsOnModule] = Field(
        None, description='The module to which the email template belongs'
    )
    email: Optional[Email] = Field(
        None, description='The configurable parts of the email template'
    )
    isEmailTemplateEditable: Optional[bool] = Field(
        None,
        description='Indicates whether the email template can be editted.',
        examples=[True],
    )
    type: Optional[Type18] = Field(None, description='The type of the email template')


class ProvidersProviderIdEmailtemplatesEmailTemplateIdGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1227]] = None
    field_embedded: Optional[List[FieldEmbeddedItem194]] = Field(
        None, alias='_embedded'
    )


class Message1228(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdEmailtemplatesEmailTemplateIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1228]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersProviderIdEmailtemplatesEmailTemplateIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdEmailtemplatesEmailTemplateIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Country71(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication55(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address34(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country71] = None
    furtherIndication: Optional[FurtherIndication55] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234AA']
    )
    province: Optional[Province] = Field(None, description='A Dutch province')
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Contact7(BaseModel):
    function: Optional[constr(max_length=50)] = Field(
        None,
        description='The job title/function of the contact of the employer',
        examples=['Manager'],
    )
    name: Optional[constr(max_length=50)] = Field(
        None,
        description='Name of the contact of the employer',
        examples=['Henk de Vries'],
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The general phone number of the employer',
        examples=['013-12345678'],
    )


class ContactInformation39(BaseModel):
    emailAddress: Optional[EmailStr] = Field(
        None,
        description='The email address of the employer',
        examples=['info@voorbeeldbv.nl'],
    )
    faxNumber: Optional[constr(max_length=15)] = Field(
        None, description='The fax number of the employer', examples=['(088) 31 11149']
    )
    phoneNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The telephone number of the employer',
        examples=['(088) 31 11150'],
    )
    website: Optional[constr(max_length=255)] = Field(
        None, description='The website of the employer', examples=['www.voorbeeldbv.nl']
    )


class Country72(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication56(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress21(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country72] = None
    furtherIndication: Optional[FurtherIndication56] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    poBox: Optional[int] = Field(None, description='Post office box', examples=[5000])
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class ProvidersProviderIdEmployersPostRequest(BaseModel):
    address: Optional[Address34] = None
    branch: Optional[Branch] = None
    chamberOfCommerceNumber: Optional[constr(max_length=35)] = Field(
        None,
        description='Chamber of commerce number. In Dutch "Kamer van koophandel" number',
        examples=['18124676'],
    )
    companyName: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )
    contact: Optional[Contact7] = None
    contactInformation: Optional[ContactInformation39] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress21] = None
    employerLogo: Optional[str] = Field(
        None,
        description='The location of the logo of the employer. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/providers/employers/{guid}/logo/{version}'],
    )
    employerNumber: Optional[int] = Field(
        None,
        description='The employer number is used in various overviews and exports to identify a specific employer in Loket (please note: this is not the identifier used in the REST API).',
        examples=[20720],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    legalForm: Optional[LegalForm] = None
    providerLogo: Optional[str] = Field(
        None,
        description='This logo is displayed in the interface of loket.nl. if null no deviating logo is present and the normal provider logo should be used (aquire the URL to the logo via ../v2/providers)',
        examples=[
            'https://api.loket.nl/v2/providers/employers/{guid}/deviatingproviderlogo'
        ],
    )
    providerSettings: Optional[ProviderSettings3] = None
    sbi: Optional[Sbi] = Field(
        None,
        description="The 'Standard Industrial Classifications (Dutch SBI 2008, NACE and ISIC)' as defined bij the Dutch chamber of commerce",
    )


class Message1229(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Country73(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication57(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Posible values can be aquired via the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class Address35(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country73] = None
    furtherIndication: Optional[FurtherIndication57] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    postalCode: Optional[constr(max_length=9)] = Field(
        None, description='The postal code of the address', examples=['1234AA']
    )
    province: Optional[Province] = Field(None, description='A Dutch province')
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Country74(BaseModel):
    isoCode: Optional[constr(max_length=2)] = Field(
        None,
        description='The ISO 3166-1 alpha-2 value for the country',
        examples=['NL'],
    )
    key: Optional[int] = Field(
        None,
        description='The key for the country. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The name of the country', examples=['Netherlands']
    )


class FurtherIndication58(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key of the further indication. Possible values can be aquired by the metadata endpoint',
        examples=[1],
    )
    value: Optional[str] = Field(
        None,
        description='The description of the further indication, the posible values are "WW" and "AB"',
        examples=['WW'],
    )


class DeviatingPostalAddress22(BaseModel):
    city: Optional[constr(max_length=24)] = Field(
        None, description='City of the address', examples=['Leiden']
    )
    country: Optional[Country74] = None
    furtherIndication: Optional[FurtherIndication58] = None
    houseNumber: Optional[int] = Field(
        None, description='House number of the address', examples=[12]
    )
    houseNumberAddition: Optional[constr(max_length=4)] = Field(
        None,
        description='An addition to further specify the house/door/postbox. For example used to specifty a room of floor number in addition to the house number.',
        examples=['D'],
    )
    location: Optional[constr(max_length=35)] = Field(
        None,
        description='The location like to further specify the address ',
        examples=['Fourth floor or building C'],
    )
    poBox: Optional[int] = Field(None, description='Post office box', examples=[5000])
    postalCode: Optional[constr(min_length=1, max_length=9)] = Field(
        None,
        description='The postal code of the address, only nullable if country is not The Netherlands (NL).',
        examples=['1234 AA'],
    )
    street: Optional[constr(max_length=24)] = Field(
        None, description='Streetname of the address', examples=['Voordijk']
    )


class Content238(BaseModel):
    address: Optional[Address35] = None
    branch: Optional[Branch] = None
    chamberOfCommerceNumber: Optional[constr(max_length=35)] = Field(
        None,
        description='Chamber of commerce number. In Dutch "Kamer van koophandel" number',
        examples=['18124676'],
    )
    companyName: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )
    contact: Optional[Contact7] = None
    contactInformation: Optional[ContactInformation39] = None
    deviatingPostalAddress: Optional[DeviatingPostalAddress22] = None
    employerLogo: Optional[str] = Field(
        None,
        description='The location of the logo of the employer. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/providers/employers/{guid}/logo/{version}'],
    )
    employerNumber: Optional[int] = Field(
        None,
        description='The employer number is used in various overviews and exports to identify a specific employer in Loket (please note: this is not the identifier used in the REST API).',
        examples=[20720],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    legalForm: Optional[LegalForm] = None
    providerLogo: Optional[str] = Field(
        None,
        description='This logo is displayed in the interface of loket.nl. if null no deviating logo is present and the normal provider logo should be used (aquire the URL to the logo via ../v2/providers)',
        examples=[
            'https://api.loket.nl/v2/providers/employers/{guid}/deviatingproviderlogo'
        ],
    )
    providerSettings: Optional[ProviderSettings3] = None
    sbi: Optional[Sbi] = Field(
        None,
        description="The 'Standard Industrial Classifications (Dutch SBI 2008, NACE and ISIC)' as defined bij the Dutch chamber of commerce",
    )


class ProvidersProviderIdEmployersPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1229]] = None
    content: Optional[Content238] = None


class Message1230(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdEmployersPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1230]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersProviderIdEmployersPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdEmployersPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1231(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem195(BaseModel):
    externalId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=28)] = Field(
        None,
        description='The user-friendly name of the external tenant',
        examples=['Loket tenant'],
    )


class ProvidersProviderIdExternaltenantsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1231]] = None
    field_embedded: Optional[List[FieldEmbeddedItem195]] = Field(
        None, alias='_embedded'
    )


class Message1232(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdExternaltenantsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1232]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersProviderIdExternaltenantsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdExternaltenantsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1233(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ReferenceDate17(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the first reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the first reference date '
    )


class ReferenceDate27(BaseModel):
    day: Optional[conint(ge=1, le=31)] = Field(
        None, description='The day of the second reference date.', examples=[40]
    )
    month: Optional[Month] = Field(
        None, description='The month of the second reference date '
    )


class AdditionalLeave7(BaseModel):
    allocationType: Optional[AllocationType] = Field(
        None,
        description='Indicates how additional leave is to be assigned to the employments (linked to this leave policy).',
    )
    referenceDate1: Optional[ReferenceDate17] = Field(
        None,
        description='If `referenceDate2` has a value only the last 6 months of the year are allowed as values',
    )
    referenceDate2: Optional[ReferenceDate27] = Field(
        None, description='Only use if applicable'
    )


class LeaveEntitlement28(BaseModel):
    excessLeaveToStatutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The excess leave (bovenwetelijk verlof) linked employments are entitled to for a full time contract.',
        examples=[40],
    )
    statutory: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The statutory leave (wetelijk verlof) linked employments are entitled to for a full time contract.',
        examples=[160],
    )
    wtr: Optional[confloat(ge=0.01, le=999.99)] = Field(
        None,
        description='The wrt leave (ADV/ATV verlof) linked employments are entitled to for a full time contract.',
        examples=[40],
    )


class LeavePattern7(BaseModel):
    evenWeeks: Optional[EvenWeeks] = None
    oddWeeks: Optional[OddWeeks] = None


class LeaveRequest7(BaseModel):
    applyLeaveSchedule: Optional[bool] = Field(
        None,
        description='Indicates whether the leave schedule can be enterd and is so it is used when calculating the sugested leave hours for a leave request',
        examples=[False],
    )
    leavePattern: Optional[LeavePattern7] = Field(
        None,
        description='The applicable leave pattern for a period of 2 weeks can be stored in this object. Each field contains the number of leave(work) hours for that day in the 2-week period. <br /> Please note that the `leavePattern` should be left NULL if no data is present (as opposed to filling all fields with 0) <br /> Each field represent the number of hours the employee normally works on that day.\n',
    )
    useHolidaysInCalculation: Optional[bool] = Field(
        None,
        description='Indicates whether the calculating for sugested leave hours for a leave request takes into account holidays. Is set to true no leave hours are calculated for "The historical date on which the employee was first employed. This field is used when an employee has multiple employments in time. In most cases this field should be used as the date on which the employee started working for the company."\n\neg. When requesting leave for the 24th and 25th of december (25th being a national holiday) the calculation (8 hours a day) will return 8 when `useHolidaysInCalculation` is true and 16 when `useHolidaysInCalculation` is false',
        examples=[False],
    )


class FieldEmbeddedItem196(BaseModel):
    accrualType: Optional[AccrualType] = Field(
        None, description='Indicates how leave is accrued (yearly, monthly or hourly)  '
    )
    additionalLeave: Optional[AdditionalLeave7] = None
    dayOfTheMonthToPerformAutomaticLeaveCalculationOn: Optional[conint(ge=1, le=31)] = (
        Field(
            None,
            description='They day of the month on which the automatic accrual of (yearly or monthly) leave is performed. The yearly calculation is repeated every month to encompase any changes made that have affect on the past.\nIf for example 31 is chosen and a specific month does not have that day the logic will pick the first available date of said month.          ',
            examples=[12],
        )
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    leaveEntitlement: Optional[LeaveEntitlement28] = None
    leaveRequest: Optional[LeaveRequest7] = None
    leaveUnitType: Optional[LeaveUnitType8] = Field(
        None,
        description='Indicates what the unit type (hours or days) is. Employments linked to this leave policy use this leaveUnitType for their leave.',
    )
    name: Optional[constr(min_length=1, max_length=50)] = Field(
        None, description='The name of the leave policy', examples=['Normal leave']
    )
    payoutLeaveImmediately: Optional[bool] = Field(
        None,
        description='If leave `accrualType` is set to based on hours worked (uren) then this field allows for the leave hours to be paid out directly instead of being accrued.',
        examples=[False],
    )
    roundTo: Optional[RoundTo] = Field(
        None,
        description='Indicates to how many digits after the decimal point to round the numbers',
    )
    roundingMethod: Optional[RoundingMethod] = Field(
        None, description='Indicates how to round the numbers '
    )


class ProvidersProviderIdLeavePoliciesGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1233]] = None
    field_embedded: Optional[List[FieldEmbeddedItem196]] = Field(
        None, alias='_embedded'
    )


class Message1234(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdLeavePoliciesGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1234]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersProviderIdLeavePoliciesGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdLeavePoliciesGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersProviderIdLogoGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdLogoGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class ProvidersProviderIdLogoVersionGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdLogoVersionGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1235(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Notification2(BaseModel):
    createNumberOfDaysBeforeEvent: Optional[conint(ge=0, le=99)] = Field(
        None,
        description='The number of days that the notification is created befor the event takes place.',
        examples=[30],
    )
    isEnabled: Optional[bool] = Field(
        None, description='Enable or disable a notification for a user'
    )
    notificationType: Optional[NotificationType3] = Field(
        None, description='The notification set'
    )
    receiveDepartmentSignalsOnly: Optional[bool] = Field(
        None,
        description='Only receive notification for your departments.\nNot relevant if the user is not a department manager.',
        examples=[False],
    )
    sendMailWhenNotificationIsCreated: Optional[bool] = Field(
        None,
        description='send an email when on creation of the notification',
        examples=[False],
    )


class FieldEmbeddedItem197(BaseModel):
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['Salarisadministrateur']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    notifications: Optional[List[Notification2]] = None
    numberOfLinkedEmployerUsers: Optional[int] = Field(
        None,
        description='The number of employer users that are linked to this notification set',
        examples=[435],
    )


class ProvidersProviderIdNotificationsetsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1235]] = None
    field_embedded: Optional[List[FieldEmbeddedItem197]] = Field(
        None, alias='_embedded'
    )


class Message1236(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdNotificationsetsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1236]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class ProvidersProviderIdNotificationsetsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdNotificationsetsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1237(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Cao1(BaseModel):
    key: Optional[int] = Field(None, examples=[115])
    value: Optional[constr(max_length=50)] = Field(None, examples=['18 Vishandel'])


class Loonmodel1(BaseModel):
    key: Optional[int] = Field(None, examples=[929])
    value: Optional[constr(max_length=50)] = Field(
        None, examples=['Vishandel monthly payrolling']
    )


class Announcements(BaseModel):
    hasUnreadAnnouncements: Optional[bool] = Field(
        None,
        description='Indicates whether the administration has unread announcements',
        examples=[False],
    )


class Notifications(BaseModel):
    hasUnreadNotifications: Optional[bool] = Field(
        None,
        description='Indicates whether the administration has unread notifications',
        examples=[False],
    )


class MethodOfCreation12(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The key indicating how the payroll run was created.',
        examples=[2],
    )
    value: Optional[str] = Field(
        None,
        description='The value describing how the payroll run was created.',
        examples=['Individueel'],
    )


class Status22(BaseModel):
    key: Optional[int] = Field(None, examples=[6])
    value: Optional[str] = Field(None, examples=['geannuleerde loonrun'])


class PayrollProcess(BaseModel):
    methodOfCreation: Optional[MethodOfCreation12] = None
    status: Optional[Status22] = Field(
        None,
        description='Status of the payroll process in the period.\nPossible statuses are:\n- 0\tInvalid\n- 1\tNot started\n- 2\tQueued\n- 3\tWaiting for approval\n- 4\tIncorrect and there is an approved preceding payrollrun\n- 5\tIncorrect\n- 6\tApproved \n- 7\tNo results\n- 8\tNo results and there is an approved preceding payrollrun\n',
    )


class PayrollPeriod32(BaseModel):
    announcements: Optional[Announcements] = None
    notifications: Optional[Notifications] = None
    payrollPeriodId: Optional[int] = Field(
        None,
        description='The year and period of the payroll period\n',
        examples=[202004],
    )
    payrollProcess: Optional[PayrollProcess] = None
    periodEndDate: Optional[date_aliased] = Field(
        None,
        description='The last day of the period to which the payroll period data applies\n',
        examples=['2020-06-30'],
    )
    periodNumber: Optional[int] = Field(
        None,
        description='The period (month [1 to 12] , 4 weeks [1 to 13] or week [1 to 53])\n',
        examples=[4],
    )
    periodStartDate: Optional[date_aliased] = Field(
        None,
        description='The first day of the period to which the payroll period data applies\n',
        examples=['2020-04-01'],
    )
    year: Optional[int] = Field(
        None, description='The year of the payroll period\n', examples=[2020]
    )


class FieldEmbeddedItem198(BaseModel):
    administrationNumber: Optional[constr(max_length=15)] = Field(
        None,
        description='The administration number is a free field commonly used to register the debtors number.',
        examples=['134.26.94'],
    )
    cao: Optional[Cao1] = Field(
        None,
        description='The CAO (CLA -> collective labor agrement) of the "loonmodel" the payroll administration is linked to.',
    )
    clientNumber: Optional[int] = Field(
        None,
        description='The client number is a unique number for administrations that are used for payrolling. This field has no value if the administration is not used for payrolling.',
        examples=[465],
    )
    employerId: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    employerLogo: Optional[str] = Field(
        None,
        description='The location of the logo of the employer. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/providers/employers/{guid}/logo/{version}'],
    )
    groupClassification: Optional[GroupClassification] = Field(
        None,
        description='The group classification for the payroll administration. This field is used for filtering and grouping within the interface.\n\n`groupClassification` is a metadata field within the provider context. Possible values can be managed by the user.',
    )
    groupCode: Optional[int] = Field(
        None,
        description='Number (integer) used for grouping administrations.',
        examples=[40],
    )
    hasAutomaticPayroll: Optional[bool] = Field(
        None, description='Indicates whether automatic payrolling is set'
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    loonmodel: Optional[Loonmodel1] = Field(
        None,
        description='The "loonmodel" (this is a loket.nl term) the payroll administration inherits the payrolling configuration from. Deviating from the loonmodel configuration on payrol administration level is posible.\n\n`loonmodel` is a metadata field within the provider context. Possible values can be managed by the user.',
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the administration', examples=['VST Consultancy']
    )
    payrollPeriod: Optional[PayrollPeriod32] = None
    payrollPeriodType: Optional[PayrollPeriodType13] = Field(
        None,
        description='Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4).',
    )
    shortName: Optional[constr(max_length=12)] = Field(
        None, description='Shortened name of the administration', examples=['VST']
    )


class ProvidersProviderIdPayrollprocessstatusGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1237]] = None
    field_embedded: Optional[List[FieldEmbeddedItem198]] = Field(
        None, alias='_embedded'
    )


class Message1238(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class ProvidersProviderIdPayrollprocessstatusGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1238]] = None
    content: Optional[Dict[str, Any]] = None


class ProvidersProviderIdPayrollprocessstatusGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class ProvidersProviderIdPayrollprocessstatusGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1239(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem199(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    lastModifiedVersionNumber: Optional[int] = Field(
        None,
        description='The version number reflects the latest version of all predefined underlying tables of this employer.',
        examples=[70429274999853],
    )
    providerId: Optional[UUID] = Field(
        None,
        description='The unique identifier of a provider (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class QwoaterEmployersGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1239]] = None
    field_embedded: Optional[List[FieldEmbeddedItem199]] = Field(
        None, alias='_embedded'
    )


class Message1240(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class QwoaterEmployersGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1240]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class QwoaterEmployersGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class QwoaterEmployersGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1241(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content239(BaseModel):
    additionalTaxLiabilityGroup: Optional[AdditionalTaxLiabilityGroup] = Field(
        None,
        description='Indicates what additional tax liability percentage (bijtelling) should be used for calculating the tax liabiltiy in the payroll process.\n',
    )
    dateOfFirstAdmission: Optional[date_aliased] = Field(
        None,
        description='First day of admission for the vehicle (datum eerste toelating). ',
        examples=['2018-01-01'],
    )
    licensePlateNumber: Optional[constr(min_length=0, max_length=15)] = Field(
        None,
        description='Vehicle registration (license plate of the vehicle). The number should be provided with or without any hyphens (-).\n',
        examples=['GP586D'],
    )
    valueForTaxPurposes: Optional[confloat(ge=0.01, le=999999.99)] = Field(
        None,
        description='The value of the vehicle for tax purposes. This field may only be NULL if a reason for no additional tax liability (reden voor geen bijtelling) is provided.\n',
        examples=[20000],
    )


class RdwservicesAdditionaltaxliabilityGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1241]] = None
    content: Optional[Content239] = None


class Message1242(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class RdwservicesAdditionaltaxliabilityGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1242]] = None
    content: Optional[Dict[str, Any]] = None


class RdwservicesAdditionaltaxliabilityGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class RdwservicesAdditionaltaxliabilityGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1243(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class ContactInformation41(BaseModel):
    emailAddress: Optional[
        constr(
            pattern=r'^((([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&\'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$',
            max_length=255,
        )
    ] = Field(
        None, description='The e-mail address of the user.', examples=['info@loket.nl']
    )
    phoneNumber: Optional[constr(min_length=1, max_length=15)] = Field(
        None, description='The phone number of the user.', examples=['+31 13-1234567']
    )
    placeOfEmployment: Optional[constr(min_length=1, max_length=24)] = Field(
        None,
        description='The place of employment (standplaats) for the user.',
        examples=['Amsterdam office'],
    )


class PersonalDetails30(BaseModel):
    firstName: Optional[constr(max_length=28)] = Field(
        None, description='The first name of the user', examples=['Susan']
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['S.L.']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Bergen']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['van']
    )


class User10(BaseModel):
    userCustomSpecifiedRole: Optional[constr(max_length=50)] = Field(
        None,
        description='Further specification of the user role.\n',
        examples=['Secretariaat medewerker'],
    )
    userSpecifiedRole: Optional[UserSpecifiedRole] = Field(
        None, description='The Role which the user has specified.'
    )


class Content240(BaseModel):
    contactInformation: Optional[ContactInformation41] = None
    personalDetails: Optional[PersonalDetails30] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the user to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/user/photo/{version}'],
    )
    user: Optional[User10] = None


class UserGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1243]] = None
    content: Optional[Content240] = None


class Message1244(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class UserGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1244]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class UserGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UserGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class User11(BaseModel):
    userCustomSpecifiedRole: Optional[constr(max_length=50)] = Field(
        None,
        description='Further specification of the user role.\n',
        examples=['Secretariaat medewerker'],
    )
    userSpecifiedRole: Optional[UserSpecifiedRole] = Field(
        None, description='The Role which the user has specified.'
    )


class UserPutRequest(BaseModel):
    contactInformation: Optional[ContactInformation41] = None
    personalDetails: Optional[PersonalDetails30] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the user to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/user/photo/{version}'],
    )
    user: Optional[User11] = None


class Message1245(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class User12(BaseModel):
    userCustomSpecifiedRole: Optional[constr(max_length=50)] = Field(
        None,
        description='Further specification of the user role.\n',
        examples=['Secretariaat medewerker'],
    )
    userSpecifiedRole: Optional[UserSpecifiedRole] = Field(
        None, description='The Role which the user has specified.'
    )


class Content241(BaseModel):
    contactInformation: Optional[ContactInformation41] = None
    personalDetails: Optional[PersonalDetails30] = None
    photo: Optional[str] = Field(
        None,
        description='A photo of the user to use as a avatar/profile picture. The last part of the returned endpoint is the version of the logo this allows users to cache the image. Changing the value of the version will not influence the output.',
        examples=['https://api.loket.nl/v2/user/photo/{version}'],
    )
    user: Optional[User12] = None


class UserPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1245]] = None
    content: Optional[Content241] = None


class Message1246(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class UserPutResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1246]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class UserPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UserPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1247(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FilterOnAdministration(BaseModel):
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class FilterOnDepartment(BaseModel):
    key: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class FilterOnEmployedStatus(Enum):
    AllEmployments = 'AllEmployments'
    ActiveEmployments = 'ActiveEmployments'
    ActiveAndFutureEmployments = 'ActiveAndFutureEmployments'
    ActiveAndHistoricEmployments = 'ActiveAndHistoricEmployments'


class EmploymentFilter(BaseModel):
    filterOnAdministrations: Optional[List[FilterOnAdministration]] = None
    filterOnDepartments: Optional[List[FilterOnDepartment]] = None
    filterOnEmployedStatus: Optional[FilterOnEmployedStatus] = Field(
        None,
        description='Filter on the employedStatus, based on the start and end date of the employment.',
    )
    filterOnOnCallEmployment: Optional[bool] = Field(
        None,
        description='Filter on the on-call status of an employment. A null value will result in the on-call employment filter not being active and therefore returning employments regardless of their on-call employment status.',
    )


class Content242(BaseModel):
    employmentFilter: Optional[EmploymentFilter] = None


class UserFiltersettingsEmployerIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1247]] = None
    content: Optional[Content242] = None


class Message1248(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class UserFiltersettingsEmployerIdGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1248]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class UserFiltersettingsEmployerIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UserFiltersettingsEmployerIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class EmploymentFilter1(BaseModel):
    filterOnAdministrations: Optional[List[FilterOnAdministration]] = None
    filterOnDepartments: Optional[List[FilterOnDepartment]] = None
    filterOnEmployedStatus: Optional[FilterOnEmployedStatus] = Field(
        None,
        description='Filter on the employedStatus, based on the start and end date of the employment.',
    )
    filterOnOnCallEmployment: Optional[bool] = Field(
        None,
        description='Filter on the on-call status of an employment. A null value will result in the on-call employment filter not being active and therefore returning employments regardless of their on-call employment status.',
    )


class UserFiltersettingsEmployerIdPutRequest(BaseModel):
    employmentFilter: Optional[EmploymentFilter1] = None


class Message1249(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class EmploymentFilter2(BaseModel):
    filterOnAdministrations: Optional[List[FilterOnAdministration]] = None
    filterOnDepartments: Optional[List[FilterOnDepartment]] = None
    filterOnEmployedStatus: Optional[FilterOnEmployedStatus] = Field(
        None,
        description='Filter on the employedStatus, based on the start and end date of the employment.',
    )
    filterOnOnCallEmployment: Optional[bool] = Field(
        None,
        description='Filter on the on-call status of an employment. A null value will result in the on-call employment filter not being active and therefore returning employments regardless of their on-call employment status.',
    )


class Content243(BaseModel):
    employmentFilter: Optional[EmploymentFilter2] = None


class UserFiltersettingsEmployerIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1249]] = None
    content: Optional[Content243] = None


class Message1250(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class UserFiltersettingsEmployerIdPutResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1250]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class UserFiltersettingsEmployerIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UserFiltersettingsEmployerIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class UserPhotoDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1250]] = None
    content: Optional[Dict[str, Any]] = None


class UserPhotoDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1250]] = None
    content: Optional[Dict[str, Any]] = None


class UserPhotoDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UserPhotoDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class UserPhotoGetResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UserPhotoGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class UserPhotoPostRequest(BaseModel):
    data: Optional[str] = Field(
        None, description='base64 encoded document file.', examples=['YQ==']
    )
    mimeType: Optional[str] = Field(
        None, description='The mimetype of the data.', examples=['image/jpeg']
    )


class UserPhotoPostResponse(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UserPhotoPostResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class UsersApplicationsetsApplicationSetIdDeleteResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1250]] = None
    content: Optional[Dict[str, Any]] = None


class UsersApplicationsetsApplicationSetIdDeleteResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1250]] = None
    content: Optional[Dict[str, Any]] = None


class UsersApplicationsetsApplicationSetIdDeleteResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UsersApplicationsetsApplicationSetIdDeleteResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class UsersApplicationsetsApplicationSetIdPutRequest(BaseModel):
    applicationSetType: Optional[ApplicationSetType] = Field(
        None, description='The type of the set \n'
    )
    data: Optional[str] = Field(
        None,
        description='Contains an array of objects in json structure.\n',
        examples=['json object'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the exportset\n',
        examples=['Exportset Dienstverband'],
    )


class Message1255(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content244(BaseModel):
    applicationSetType: Optional[ApplicationSetType] = Field(
        None, description='The type of the set \n'
    )
    data: Optional[str] = Field(
        None,
        description='Contains an array of objects in json structure.\n',
        examples=['json object'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the exportset\n',
        examples=['Exportset Dienstverband'],
    )


class UsersApplicationsetsApplicationSetIdPutResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1255]] = None
    content: Optional[Content244] = None


class Message1256(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class UsersApplicationsetsApplicationSetIdPutResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1256]] = None
    content: Optional[Dict[str, Any]] = None


class UsersApplicationsetsApplicationSetIdPutResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UsersApplicationsetsApplicationSetIdPutResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class UsersApplicationsetsApplicationSetIdPutResponse4(BaseModel):
    content: Optional[Dict[str, Any]] = None
    messages: Optional[List[Message1256]] = None
    version: Optional[Version] = None


class Message1258(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class AllowedTransition5(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None,
        description='The description of the transition (task)',
        examples=['Controleer de vergoedingen'],
    )
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.loket.nl/v2/providers/employers/workflows/{workflowId}/transition'
        ],
    )
    httpVerb: Optional[HttpVerb] = None
    transitions: Optional[List[Transition]] = Field(
        None,
        examples=[
            [
                {
                    'action': 'fabf3b25-abf9-4e8c-a8f7-81400d1b0e96',
                    'description': 'Approve',
                },
                {
                    'action': 'abc31d45-f593-4d73-8078-6caba9cebdcc',
                    'description': 'Reject',
                },
            ]
        ],
    )


class User13(BaseModel):
    formattedName: Optional[str] = Field(
        None,
        description='preformatted user name for displaying. \\<lastname\\>\\", \\"\\<initials\\>\\" \\"\\<prefix\\>',
        examples=['Jong, I'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initials: Optional[constr(max_length=6)] = Field(
        None, description='The initials of the user', examples=['I']
    )
    lastName: Optional[constr(max_length=25)] = Field(
        None, description='The last name of the user', examples=['Jong']
    )
    prefix: Optional[constr(max_length=10)] = Field(
        None, description='The prefix of the user', examples=['de']
    )


class Assignee5(BaseModel):
    role: Optional[Role] = None
    user: Optional[User13] = None


class Status23(BaseModel):
    key: Optional[int] = Field(None, description='The unique identifier', examples=[1])
    value: Optional[str] = Field(None, examples=['In progress'])


class Trigger11(BaseModel):
    description: Optional[str] = Field(None, examples=['Address change for employee'])
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )


class WorkflowTemplate11(BaseModel):
    description: Optional[constr(max_length=256)] = Field(
        None, examples=['Approval by employer']
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    version: Optional[int] = Field(
        None,
        description='The version of the workflow template this workflow was based on. Changes to a workflow template do not affect existing workflows.',
        examples=[2],
    )


class FieldEmbeddedItem200(BaseModel):
    allowedTransitions: Optional[List[AllowedTransition5]] = Field(
        None,
        description='In this object the posible transitions are returned.\nBy sending a request to the `href` with the given `httpVerb` and one of the options given in `transitions` in the body. The workflow is transitioned to the given state.',
    )
    assignee: Optional[Assignee5] = Field(
        None,
        description='A workflow is either assigned to a user or a role. A role can be filled by multiple users.',
    )
    data: Optional[str] = Field(
        None,
        description='A JSON representation of the mutation/data regarding this workflow',
        examples=[
            {
                'address': {
                    'city': 'Leiden',
                    'country': {'key': 1},
                    'houseNumber': 12,
                    'houseNumberAddition': 'D',
                    'postalCode': '1234 AA',
                    'street': 'Voordijk',
                }
            }
        ],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    initiatedBy: Optional[InitiatedBy] = None
    initiatedOn: Optional[datetime] = Field(None, examples=['2019-11-23T11:14:06Z'])
    lastModifiedBy: Optional[LastModifiedBy31] = None
    lastModifiedOn: Optional[datetime] = Field(
        None,
        description='date and time on which the last modification on the workflow was performed. This can be either by the system or a user.',
        examples=['2019-11-23T11:14:06Z'],
    )
    status: Optional[Status23] = Field(
        None, description='Indicates the status of the workflow as a whole.'
    )
    trigger: Optional[Trigger11] = Field(
        None,
        description='Indicates the trigger that started the workflow.\n\n`trigger` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )
    workflowTemplate: Optional[WorkflowTemplate11] = Field(
        None,
        description='Indicates what workflow template was used to initiate the workflow.\n\n`workflowTemplate` is a metadata field within the employer context. Possible values can be managed by the user. ',
    )


class UsersInitiatedworkflowsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1258]] = None
    field_embedded: Optional[List[FieldEmbeddedItem200]] = Field(
        None, alias='_embedded'
    )


class Message1259(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class UsersInitiatedworkflowsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1259]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class UsersInitiatedworkflowsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UsersInitiatedworkflowsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1260(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbedded3(BaseModel):
    application: Optional[Application1] = None
    createdOn: Optional[datetime] = Field(
        None,
        description='The time the integration was succesfully initiated',
        examples=['2018-05-08T15:16:49+02:00'],
    )
    isBlocked: Optional[bool] = Field(
        None,
        description='Indicates whether the application user combination is blocked (for this single user)',
        examples=[True],
    )
    lastLogin: Optional[datetime] = Field(
        None,
        description='The time the integration was last active',
        examples=['2018-05-08T15:16:49+02:00'],
    )


class UsersIntegrationsGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1260]] = None
    field_embedded: Optional[FieldEmbedded3] = Field(None, alias='_embedded')


class Message1261(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class UsersIntegrationsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1261]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class UsersIntegrationsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UsersIntegrationsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1262(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem201(BaseModel):
    applicationSetType: Optional[ApplicationSetType] = Field(
        None, description='The type of the set \n'
    )
    data: Optional[str] = Field(
        None,
        description='Contains an array of objects in json structure.\n',
        examples=['json object'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the exportset\n',
        examples=['Exportset Dienstverband'],
    )


class UsersUserIdApplicationsetsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1262]] = None
    field_embedded: Optional[List[FieldEmbeddedItem201]] = Field(
        None, alias='_embedded'
    )


class Message1263(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class UsersUserIdApplicationsetsGetResponse1(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1263]] = None
    field_embedded: Optional[List[Dict[str, Any]]] = Field(None, alias='_embedded')


class UsersUserIdApplicationsetsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UsersUserIdApplicationsetsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class UsersUserIdApplicationsetsPostRequest(BaseModel):
    applicationSetType: Optional[ApplicationSetType] = Field(
        None, description='The type of the set \n'
    )
    data: Optional[str] = Field(
        None,
        description='Contains an array of objects in json structure.\n',
        examples=['json object'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the exportset\n',
        examples=['Exportset Dienstverband'],
    )


class Message1264(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content245(BaseModel):
    applicationSetType: Optional[ApplicationSetType] = Field(
        None, description='The type of the set \n'
    )
    data: Optional[str] = Field(
        None,
        description='Contains an array of objects in json structure.\n',
        examples=['json object'],
    )
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the exportset\n',
        examples=['Exportset Dienstverband'],
    )


class UsersUserIdApplicationsetsPostResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1264]] = None
    content: Optional[Content245] = None


class Message1265(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class UsersUserIdApplicationsetsPostResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1265]] = None
    content: Optional[Dict[str, Any]] = None


class UsersUserIdApplicationsetsPostResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UsersUserIdApplicationsetsPostResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1266(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class Content246(BaseModel):
    url: Optional[str] = Field(
        None,
        description='The URL to access the Benify portal',
        examples=['https://www.yourcampus.nl'],
    )
    validUntilDate: Optional[datetime] = Field(
        None,
        description='The time at which the validity of the url ends',
        examples=['2022-05-08T15:16:49+02:00'],
    )


class UsersUserIdYourcampusurlGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1266]] = None
    content: Optional[Content246] = None


class Message1267(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class UsersUserIdYourcampusurlGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1267]] = None
    content: Optional[Dict[str, Any]] = None


class UsersUserIdYourcampusurlGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class UsersUserIdYourcampusurlGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1268(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class BaseType(BaseModel):
    key: Optional[int] = Field(
        None,
        description='The number for the base type\n\n  0 = nvt\n\n  1\t=\tVakantiebijslag\n  \n  2\t=\tExtra periode salaris\n',
        examples=[1],
    )
    value: Optional[constr(max_length=14)] = Field(
        None, description='The description baseType\n', examples=['Vakantiebijslag']
    )


class ResultPayrollComponent2(BaseModel):
    description: Optional[constr(max_length=14)] = Field(
        None,
        description='The description of the payroll component\n',
        examples=['Output, VAKANTIE TOESL'],
    )
    key: Optional[int] = Field(
        None,
        description='The number for the payroll component. This number has meaning to payroll professionals using Loket.nl who often know many of them by heart.\n',
        examples=[82],
    )


class BaseForCalculationItem(BaseModel):
    baseType: Optional[BaseType] = None
    description: Optional[constr(max_length=50)] = Field(
        None, examples=['vakantie toeslag']
    )
    key: Optional[int] = Field(
        None, description='The key for the baseForCalculation', examples=[1]
    )
    percentage: Optional[confloat(ge=1e-06, le=999.999999)] = Field(
        None, description='The percentage', examples=[8]
    )
    resultPayrollComponent: Optional[ResultPayrollComponent2] = Field(
        None,
        description='A payroll component. These components are the core of the wage calculation software.\n`payrollComponents` is a metadata field within the payroll administration, loonmodel and cao context. Possible values can be managed by the user.\n',
    )


class Status24(BaseModel):
    key: Optional[int] = Field(
        None, description='The key for the status of the values', examples=[1]
    )
    value: Optional[constr(max_length=50)] = Field(
        None, description='The status of the values', examples=['Definitive']
    )


class NextYear(BaseModel):
    available: Optional[bool] = Field(
        None, description='Are next payroll years values available yes or no ?'
    )
    status: Optional[Status24] = None
    year: Optional[int] = Field(
        None,
        description='The year for which the numbers are available',
        examples=[2017],
    )


class CollectiveLaborAgreement(BaseModel):
    baseForCalculation: Optional[List[BaseForCalculationItem]] = None
    employments: Optional[List[Employment4]] = None
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )
    nextYear: Optional[NextYear] = None


class Content247(BaseModel):
    collectiveLaborAgreement: Optional[CollectiveLaborAgreement] = None


class WageprojectionCladataCollectiveLaborAgreementIdGetResponse(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1268]] = None
    content: Optional[Content247] = None


class Message1269(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class WageprojectionCladataCollectiveLaborAgreementIdGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1269]] = None
    content: Optional[Dict[str, Any]] = None


class WageprojectionCladataCollectiveLaborAgreementIdGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class WageprojectionCladataCollectiveLaborAgreementIdGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )


class Message1270(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None, description='Describes the message', examples=['<some warning>']
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity ',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['Warning'],
    )


class FieldEmbeddedItem202(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='The unique identifier of an object (GUID/UUID)',
        examples=['b14acd0d-75d7-4fc8-8b22-4a3924585cab'],
    )
    name: Optional[constr(max_length=70)] = Field(
        None, description='Name of the company', examples=['Voorbeeld B.V.']
    )


class WageprojectionCollectivelaboragreementsGetResponse(BaseModel):
    currentPage: Optional[int] = Field(
        None, description='Current page returned in the response', examples=[2]
    )
    pageSize: Optional[int] = Field(
        None, description='Number of records in the response', examples=[250]
    )
    totalPages: Optional[int] = Field(
        None, description='Number of pages available', examples=[3]
    )
    totalSize: Optional[int] = Field(
        None,
        description='Total number of records, taking into account the given filter.',
        examples=[650],
    )
    version: Optional[Version] = None
    messages: Optional[List[Message1270]] = None
    field_embedded: Optional[List[FieldEmbeddedItem202]] = Field(
        None, alias='_embedded'
    )


class Message1271(BaseModel):
    code: Optional[int] = Field(
        None, description='Identifying code for the message', examples=[12]
    )
    description: Optional[str] = Field(
        None,
        description='Describes the message',
        examples=['Invalid value for <field>'],
    )
    id: Optional[UUID] = Field(
        None,
        description='In some cases when the message may relate to a specific entity, or specific group of entities, this field provides the identifier of that entity',
        examples=['904d6856-6034-4624-bcbc-886188c115c5'],
    )
    properties: Optional[List[str]] = Field(
        None, description='An array that can contain additional information', ge=0
    )
    type: Optional[str] = Field(
        None,
        description='Indication of the type of message.\nSee [the general documentation for more information](./#section/Response/Messages)',
        examples=['BrokenBusinessRule'],
    )


class WageprojectionCollectivelaboragreementsGetResponse1(BaseModel):
    version: Optional[Version] = None
    messages: Optional[List[Message1271]] = None
    content: Optional[Dict[str, Any]] = None


class WageprojectionCollectivelaboragreementsGetResponse2(BaseModel):
    message: Optional[str] = Field(
        None, examples=['Authorization has been denied for this request.']
    )


class WageprojectionCollectivelaboragreementsGetResponse3(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'Insufficient rights for this request, reason \\"User doesn\'t have rechten to perform activity for the given Id.\\"'
        ],
    )
